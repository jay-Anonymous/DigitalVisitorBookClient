{
  "version": 3,
  "sources": ["../../tom-select/src/contrib/microevent.ts", "../../tom-select/src/contrib/microplugin.ts", "../../tom-select/node_modules/@orchidjs/unicode-variants/dist/esm/regex.js", "../../tom-select/node_modules/@orchidjs/unicode-variants/dist/esm/strings.js", "../../tom-select/node_modules/@orchidjs/unicode-variants/dist/esm/index.js", "../../tom-select/node_modules/@orchidjs/sifter/dist/esm/utils.js", "../../tom-select/node_modules/@orchidjs/sifter/dist/esm/sifter.js", "../../tom-select/node_modules/@orchidjs/sifter/lib/utils.ts", "../../tom-select/src/vanilla.ts", "../../tom-select/src/contrib/highlight.ts", "../../tom-select/src/constants.ts", "../../tom-select/src/defaults.ts", "../../tom-select/src/utils.ts", "../../tom-select/src/getSettings.ts", "../../tom-select/src/tom-select.ts", "../../tom-select/src/plugins/change_listener/plugin.ts", "../../tom-select/src/plugins/checkbox_options/plugin.ts", "../../tom-select/src/plugins/clear_button/plugin.ts", "../../tom-select/src/plugins/drag_drop/plugin.ts", "../../tom-select/src/plugins/dropdown_header/plugin.ts", "../../tom-select/src/plugins/caret_position/plugin.ts", "../../tom-select/src/plugins/dropdown_input/plugin.ts", "../../tom-select/src/plugins/input_autogrow/plugin.ts", "../../tom-select/src/plugins/no_backspace_delete/plugin.ts", "../../tom-select/src/plugins/no_active_items/plugin.ts", "../../tom-select/src/plugins/optgroup_columns/plugin.ts", "../../tom-select/src/plugins/remove_button/plugin.ts", "../../tom-select/src/plugins/restore_on_backspace/plugin.ts", "../../tom-select/src/plugins/virtual_scroll/plugin.ts", "../../tom-select/src/tom-select.complete.ts"],
  "sourcesContent": ["/**\n * MicroEvent - to make any js object an event emitter\n *\n * - pure javascript - server compatible, browser compatible\n * - dont rely on the browser doms\n * - super simple - you get it immediatly, no mistery, no magic involved\n *\n * @author Jerome Etienne (https://github.com/jeromeetienne)\n */\n\ntype TCallback = (...args:any) => any;\n\n/**\n * Execute callback for each event in space separated list of event names\n *\n */\nfunction forEvents(events:string,callback:(event:string)=>any){\n\tevents.split(/\\s+/).forEach((event) =>{\n\t\tcallback(event);\n\t});\n}\n\nexport default class MicroEvent{\n\n\tpublic _events: {[key:string]:TCallback[]};\n\n\tconstructor(){\n\t\tthis._events = {};\n\t}\n\n\ton(events:string, fct:TCallback){\n\t\tforEvents(events,(event) => {\n\t\t\tconst event_array = this._events[event] || [];\n\t\t\tevent_array.push(fct);\n\t\t\tthis._events[event] = event_array;\n\t\t});\n\t}\n\n\toff(events:string, fct:TCallback){\n\t\tvar n = arguments.length;\n\t\tif( n === 0 ){\n\t\t\tthis._events = {};\n\t\t\treturn;\n\t\t}\n\n\t\tforEvents(events,(event) => {\n\n\t\t\tif (n === 1){\n\t\t\t\tdelete this._events[event];\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst event_array = this._events[event];\n\t\t\tif( event_array === undefined ) return;\n\n\t\t\tevent_array.splice(event_array.indexOf(fct), 1);\n\t\t\tthis._events[event] = event_array;\n\t\t});\n\t}\n\n\ttrigger(events:string, ...args:any){\n\t\tvar self = this;\n\n\t\tforEvents(events,(event) => {\n\t\t\tconst event_array = self._events[event];\n\t\t\tif( event_array === undefined ) return;\n\t\t\tevent_array.forEach(fct => {\n\t\t\t\tfct.apply(self, args );\n\t\t\t});\n\n\t\t});\n\t}\n};\n", "/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\ntype TSettings = {\n\t[key:string]:any\n}\n\ntype TPlugins = {\n\tnames: string[],\n\tsettings: TSettings,\n\trequested: {[key:string]:boolean},\n\tloaded: {[key:string]:any}\n};\n\nexport type TPluginItem = {name:string,options:{}};\nexport type TPluginHash = {[key:string]:{}};\n\n\n\n\nexport default function MicroPlugin(Interface: any ){\n\n\tInterface.plugins = {};\n\n\treturn class extends Interface{\n\n\t\tpublic plugins:TPlugins = {\n\t\t\tnames     : [],\n\t\t\tsettings  : {},\n\t\t\trequested : {},\n\t\t\tloaded    : {}\n\t\t};\n\n\t\t/**\n\t\t * Registers a plugin.\n\t\t *\n\t\t * @param {function} fn\n\t\t */\n\t\tstatic define(name:string, fn:(this:any,settings:TSettings)=>any){\n\t\t\tInterface.plugins[name] = {\n\t\t\t\t'name' : name,\n\t\t\t\t'fn'   : fn\n\t\t\t};\n\t\t}\n\n\n\t\t/**\n\t\t * Initializes the listed plugins (with options).\n\t\t * Acceptable formats:\n\t\t *\n\t\t * List (without options):\n\t\t *   ['a', 'b', 'c']\n\t\t *\n\t\t * List (with options):\n\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t\t *\n\t\t * Hash (with options):\n\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t\t *\n\t\t * @param {array|object} plugins\n\t\t */\n\t\tinitializePlugins(plugins:string[]|TPluginItem[]|TPluginHash) {\n\t\t\tvar key, name;\n\t\t\tconst self  = this;\n\t\t\tconst queue:string[] = [];\n\n\t\t\tif (Array.isArray(plugins)) {\n\t\t\t\tplugins.forEach((plugin:string|TPluginItem)=>{\n\t\t\t\t\tif (typeof plugin === 'string') {\n\t\t\t\t\t\tqueue.push(plugin);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.plugins.settings[plugin.name] = plugin.options;\n\t\t\t\t\t\tqueue.push(plugin.name);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (plugins) {\n\t\t\t\tfor (key in plugins) {\n\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\n\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\n\t\t\t\t\t\tqueue.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile( name = queue.shift() ){\n\t\t\t\tself.require(name);\n\t\t\t}\n\t\t}\n\n\t\tloadPlugin(name:string) {\n\t\t\tvar self    = this;\n\t\t\tvar plugins = self.plugins;\n\t\t\tvar plugin  = Interface.plugins[name];\n\n\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\n\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\n\t\t\t}\n\n\t\t\tplugins.requested[name] = true;\n\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t\t\tplugins.names.push(name);\n\t\t}\n\n\t\t/**\n\t\t * Initializes a plugin.\n\t\t *\n\t\t */\n\t\trequire(name:string) {\n\t\t\tvar self = this;\n\t\t\tvar plugins = self.plugins;\n\n\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\n\t\t\t\tif (plugins.requested[name]) {\n\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\n\t\t\t\t}\n\t\t\t\tself.loadPlugin(name);\n\t\t\t}\n\n\t\t\treturn plugins.loaded[name];\n\t\t}\n\n\t};\n\n}\n", "/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n * @param {string[]} chars\n * @return {string}\n */\nconst arrayToPattern = chars => {\n  chars = chars.filter(Boolean);\n\n  if (chars.length < 2) {\n    return chars[0] || '';\n  }\n\n  return maxValueLength(chars) == 1 ? '[' + chars.join('') + ']' : '(?:' + chars.join('|') + ')';\n};\n/**\n * @param {string[]} array\n * @return {string}\n */\n\nconst sequencePattern = array => {\n  if (!hasDuplicates(array)) {\n    return array.join('');\n  }\n\n  let pattern = '';\n  let prev_char_count = 0;\n\n  const prev_pattern = () => {\n    if (prev_char_count > 1) {\n      pattern += '{' + prev_char_count + '}';\n    }\n  };\n\n  array.forEach((char, i) => {\n    if (char === array[i - 1]) {\n      prev_char_count++;\n      return;\n    }\n\n    prev_pattern();\n    pattern += char;\n    prev_char_count = 1;\n  });\n  prev_pattern();\n  return pattern;\n};\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n * @param {Set<string>} chars\n * @return {string}\n */\n\nconst setToPattern = chars => {\n  let array = toArray(chars);\n  return arrayToPattern(array);\n};\n/**\n *\n * https://stackoverflow.com/questions/7376598/in-javascript-how-do-i-check-if-an-array-has-duplicate-values\n * @param {any[]} array\n */\n\nconst hasDuplicates = array => {\n  return new Set(array).size !== array.length;\n};\n/**\n * https://stackoverflow.com/questions/63006601/why-does-u-throw-an-invalid-escape-error\n * @param {string} str\n * @return {string}\n */\n\nconst escape_regex = str => {\n  return (str + '').replace(/([\\$\\(\\)\\*\\+\\.\\?\\[\\]\\^\\{\\|\\}\\\\])/gu, '\\\\$1');\n};\n/**\n * Return the max length of array values\n * @param {string[]} array\n *\n */\n\nconst maxValueLength = array => {\n  return array.reduce((longest, value) => Math.max(longest, unicodeLength(value)), 0);\n};\n/**\n * @param {string} str\n */\n\nconst unicodeLength = str => {\n  return toArray(str).length;\n};\n/**\n * @param {any} p\n * @return {any[]}\n */\n\nconst toArray = p => Array.from(p);\n\nexport { arrayToPattern, escape_regex, hasDuplicates, maxValueLength, sequencePattern, setToPattern, toArray, unicodeLength };\n//# sourceMappingURL=regex.js.map\n", "/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n/**\n * Get all possible combinations of substrings that add up to the given string\n * https://stackoverflow.com/questions/30169587/find-all-the-combination-of-substrings-that-add-up-to-the-given-string\n * @param {string} input\n * @return {string[][]}\n */\nconst allSubstrings = input => {\n  if (input.length === 1) return [[input]];\n  /** @type {string[][]} */\n\n  let result = [];\n  const start = input.substring(1);\n  const suba = allSubstrings(start);\n  suba.forEach(function (subresult) {\n    let tmp = subresult.slice(0);\n    tmp[0] = input.charAt(0) + tmp[0];\n    result.push(tmp);\n    tmp = subresult.slice(0);\n    tmp.unshift(input.charAt(0));\n    result.push(tmp);\n  });\n  return result;\n};\n\nexport { allSubstrings };\n//# sourceMappingURL=strings.js.map\n", "/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\nimport { toArray, setToPattern, escape_regex, arrayToPattern, sequencePattern } from './regex.js';\nexport { escape_regex } from './regex.js';\nimport { allSubstrings } from './strings.js';\n\n/**\n * @typedef {{[key:string]:string}} TUnicodeMap\n * @typedef {{[key:string]:Set<string>}} TUnicodeSets\n * @typedef {[[number,number]]} TCodePoints\n * @typedef {{folded:string,composed:string,code_point:number}} TCodePointObj\n * @typedef {{start:number,end:number,length:number,substr:string}} TSequencePart\n */\n/** @type {TCodePoints} */\n\nconst code_points = [[0, 65535]];\nconst accent_pat = '[\\u0300-\\u036F\\u{b7}\\u{2be}\\u{2bc}]';\n/** @type {TUnicodeMap} */\n\nlet unicode_map;\n/** @type {RegExp} */\n\nlet multi_char_reg;\nconst max_char_length = 3;\n/** @type {TUnicodeMap} */\n\nconst latin_convert = {};\n/** @type {TUnicodeMap} */\n\nconst latin_condensed = {\n  '/': '⁄∕',\n  '0': '߀',\n  \"a\": \"ⱥɐɑ\",\n  \"aa\": \"ꜳ\",\n  \"ae\": \"æǽǣ\",\n  \"ao\": \"ꜵ\",\n  \"au\": \"ꜷ\",\n  \"av\": \"ꜹꜻ\",\n  \"ay\": \"ꜽ\",\n  \"b\": \"ƀɓƃ\",\n  \"c\": \"ꜿƈȼↄ\",\n  \"d\": \"đɗɖᴅƌꮷԁɦ\",\n  \"e\": \"ɛǝᴇɇ\",\n  \"f\": \"ꝼƒ\",\n  \"g\": \"ǥɠꞡᵹꝿɢ\",\n  \"h\": \"ħⱨⱶɥ\",\n  \"i\": \"ɨı\",\n  \"j\": \"ɉȷ\",\n  \"k\": \"ƙⱪꝁꝃꝅꞣ\",\n  \"l\": \"łƚɫⱡꝉꝇꞁɭ\",\n  \"m\": \"ɱɯϻ\",\n  \"n\": \"ꞥƞɲꞑᴎлԉ\",\n  \"o\": \"øǿɔɵꝋꝍᴑ\",\n  \"oe\": \"œ\",\n  \"oi\": \"ƣ\",\n  \"oo\": \"ꝏ\",\n  \"ou\": \"ȣ\",\n  \"p\": \"ƥᵽꝑꝓꝕρ\",\n  \"q\": \"ꝗꝙɋ\",\n  \"r\": \"ɍɽꝛꞧꞃ\",\n  \"s\": \"ßȿꞩꞅʂ\",\n  \"t\": \"ŧƭʈⱦꞇ\",\n  \"th\": \"þ\",\n  \"tz\": \"ꜩ\",\n  \"u\": \"ʉ\",\n  \"v\": \"ʋꝟʌ\",\n  \"vy\": \"ꝡ\",\n  \"w\": \"ⱳ\",\n  \"y\": \"ƴɏỿ\",\n  \"z\": \"ƶȥɀⱬꝣ\",\n  \"hv\": \"ƕ\"\n};\n\nfor (let latin in latin_condensed) {\n  let unicode = latin_condensed[latin] || '';\n\n  for (let i = 0; i < unicode.length; i++) {\n    let char = unicode.substring(i, i + 1);\n    latin_convert[char] = latin;\n  }\n}\n\nconst convert_pat = new RegExp(Object.keys(latin_convert).join('|') + '|' + accent_pat, 'gu');\n/**\n * Initialize the unicode_map from the give code point ranges\n *\n * @param {TCodePoints=} _code_points\n */\n\nconst initialize = _code_points => {\n  if (unicode_map !== undefined) return;\n  unicode_map = generateMap(_code_points || code_points);\n};\n/**\n * Helper method for normalize a string\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\n * @param {string} str\n * @param {string} form\n */\n\nconst normalize = (str, form = 'NFKD') => str.normalize(form);\n/**\n * Remove accents without reordering string\n * calling str.normalize('NFKD') on \\u{594}\\u{595}\\u{596} becomes \\u{596}\\u{594}\\u{595}\n * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n * @param {string} str\n * @return {string}\n */\n\nconst asciifold = str => {\n  return toArray(str).reduce(\n  /**\n   * @param {string} result\n   * @param {string} char\n   */\n  (result, char) => {\n    return result + _asciifold(char);\n  }, '');\n};\n/**\n * @param {string} str\n * @return {string}\n */\n\nconst _asciifold = str => {\n  str = normalize(str).toLowerCase().replace(convert_pat, (\n  /** @type {string} */\n  char) => {\n    return latin_convert[char] || '';\n  }); //return str;\n\n  return normalize(str, 'NFC');\n};\n/**\n * Generate a list of unicode variants from the list of code points\n * @param {TCodePoints} code_points\n * @yield {TCodePointObj}\n */\n\nfunction* generator(code_points) {\n  for (const [code_point_min, code_point_max] of code_points) {\n    for (let i = code_point_min; i <= code_point_max; i++) {\n      let composed = String.fromCharCode(i);\n      let folded = asciifold(composed);\n\n      if (folded == composed.toLowerCase()) {\n        continue;\n      } // skip when folded is a string longer than 3 characters long\n      // bc the resulting regex patterns will be long\n      // eg:\n      // folded صلى الله عليه وسلم length 18 code point 65018\n      // folded جل جلاله length 8 code point 65019\n\n\n      if (folded.length > max_char_length) {\n        continue;\n      }\n\n      if (folded.length == 0) {\n        continue;\n      }\n\n      yield {\n        folded: folded,\n        composed: composed,\n        code_point: i\n      };\n    }\n  }\n}\n/**\n * Generate a unicode map from the list of code points\n * @param {TCodePoints} code_points\n * @return {TUnicodeSets}\n */\n\nconst generateSets = code_points => {\n  /** @type {{[key:string]:Set<string>}} */\n  const unicode_sets = {};\n  /**\n   * @param {string} folded\n   * @param {string} to_add\n   */\n\n  const addMatching = (folded, to_add) => {\n    /** @type {Set<string>} */\n    const folded_set = unicode_sets[folded] || new Set();\n    const patt = new RegExp('^' + setToPattern(folded_set) + '$', 'iu');\n\n    if (to_add.match(patt)) {\n      return;\n    }\n\n    folded_set.add(escape_regex(to_add));\n    unicode_sets[folded] = folded_set;\n  };\n\n  for (let value of generator(code_points)) {\n    addMatching(value.folded, value.folded);\n    addMatching(value.folded, value.composed);\n  }\n\n  return unicode_sets;\n};\n/**\n * Generate a unicode map from the list of code points\n * ae => (?:(?:ae|Æ|Ǽ|Ǣ)|(?:A|Ⓐ|Ａ...)(?:E|ɛ|Ⓔ...))\n *\n * @param {TCodePoints} code_points\n * @return {TUnicodeMap}\n */\n\nconst generateMap = code_points => {\n  /** @type {TUnicodeSets} */\n  const unicode_sets = generateSets(code_points);\n  /** @type {TUnicodeMap} */\n\n  const unicode_map = {};\n  /** @type {string[]} */\n\n  let multi_char = [];\n\n  for (let folded in unicode_sets) {\n    let set = unicode_sets[folded];\n\n    if (set) {\n      unicode_map[folded] = setToPattern(set);\n    }\n\n    if (folded.length > 1) {\n      multi_char.push(escape_regex(folded));\n    }\n  }\n\n  multi_char.sort((a, b) => b.length - a.length);\n  const multi_char_patt = arrayToPattern(multi_char);\n  multi_char_reg = new RegExp('^' + multi_char_patt, 'u');\n  return unicode_map;\n};\n/**\n * Map each element of an array from it's folded value to all possible unicode matches\n * @param {string[]} strings\n * @param {number} min_replacement\n * @return {string}\n */\n\nconst mapSequence = (strings, min_replacement = 1) => {\n  let chars_replaced = 0;\n  strings = strings.map(str => {\n    if (unicode_map[str]) {\n      chars_replaced += str.length;\n    }\n\n    return unicode_map[str] || str;\n  });\n\n  if (chars_replaced >= min_replacement) {\n    return sequencePattern(strings);\n  }\n\n  return '';\n};\n/**\n * Convert a short string and split it into all possible patterns\n * Keep a pattern only if min_replacement is met\n *\n * 'abc'\n * \t\t=> [['abc'],['ab','c'],['a','bc'],['a','b','c']]\n *\t\t=> ['abc-pattern','ab-c-pattern'...]\n *\n *\n * @param {string} str\n * @param {number} min_replacement\n * @return {string}\n */\n\nconst substringsToPattern = (str, min_replacement = 1) => {\n  min_replacement = Math.max(min_replacement, str.length - 1);\n  return arrayToPattern(allSubstrings(str).map(sub_pat => {\n    return mapSequence(sub_pat, min_replacement);\n  }));\n};\n/**\n * Convert an array of sequences into a pattern\n * [{start:0,end:3,length:3,substr:'iii'}...] => (?:iii...)\n *\n * @param {Sequence[]} sequences\n * @param {boolean} all\n */\n\nconst sequencesToPattern = (sequences, all = true) => {\n  let min_replacement = sequences.length > 1 ? 1 : 0;\n  return arrayToPattern(sequences.map(sequence => {\n    let seq = [];\n    const len = all ? sequence.length() : sequence.length() - 1;\n\n    for (let j = 0; j < len; j++) {\n      seq.push(substringsToPattern(sequence.substrs[j] || '', min_replacement));\n    }\n\n    return sequencePattern(seq);\n  }));\n};\n/**\n * Return true if the sequence is already in the sequences\n * @param {Sequence} needle_seq\n * @param {Sequence[]} sequences\n */\n\n\nconst inSequences = (needle_seq, sequences) => {\n  for (const seq of sequences) {\n    if (seq.start != needle_seq.start || seq.end != needle_seq.end) {\n      continue;\n    }\n\n    if (seq.substrs.join('') !== needle_seq.substrs.join('')) {\n      continue;\n    }\n\n    let needle_parts = needle_seq.parts;\n    /**\n     * @param {TSequencePart} part\n     */\n\n    const filter = part => {\n      for (const needle_part of needle_parts) {\n        if (needle_part.start === part.start && needle_part.substr === part.substr) {\n          return false;\n        }\n\n        if (part.length == 1 || needle_part.length == 1) {\n          continue;\n        } // check for overlapping parts\n        // a = ['::=','==']\n        // b = ['::','===']\n        // a = ['r','sm']\n        // b = ['rs','m']\n\n\n        if (part.start < needle_part.start && part.end > needle_part.start) {\n          return true;\n        }\n\n        if (needle_part.start < part.start && needle_part.end > part.start) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    let filtered = seq.parts.filter(filter);\n\n    if (filtered.length > 0) {\n      continue;\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\nclass Sequence {\n  constructor() {\n    /** @type {TSequencePart[]} */\n    this.parts = [];\n    /** @type {string[]} */\n\n    this.substrs = [];\n    this.start = 0;\n    this.end = 0;\n  }\n  /**\n   * @param {TSequencePart|undefined} part\n   */\n\n\n  add(part) {\n    if (part) {\n      this.parts.push(part);\n      this.substrs.push(part.substr);\n      this.start = Math.min(part.start, this.start);\n      this.end = Math.max(part.end, this.end);\n    }\n  }\n\n  last() {\n    return this.parts[this.parts.length - 1];\n  }\n\n  length() {\n    return this.parts.length;\n  }\n  /**\n   * @param {number} position\n   * @param {TSequencePart} last_piece\n   */\n\n\n  clone(position, last_piece) {\n    let clone = new Sequence();\n    let parts = JSON.parse(JSON.stringify(this.parts));\n    let last_part = parts.pop();\n\n    for (const part of parts) {\n      clone.add(part);\n    }\n\n    let last_substr = last_piece.substr.substring(0, position - last_part.start);\n    let clone_last_len = last_substr.length;\n    clone.add({\n      start: last_part.start,\n      end: last_part.start + clone_last_len,\n      length: clone_last_len,\n      substr: last_substr\n    });\n    return clone;\n  }\n\n}\n/**\n * Expand a regular expression pattern to include unicode variants\n * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n *\n * Issue:\n *  ﺊﺋ [ 'ﺊ = \\\\u{fe8a}', 'ﺋ = \\\\u{fe8b}' ]\n *\tbecomes:\tئئ [ 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}', 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}' ]\n *\n *\tİĲ = IIJ = ⅡJ\n *\n * \t1/2/4\n *\n * @param {string} str\n * @return {string|undefined}\n */\n\n\nconst getPattern = str => {\n  initialize();\n  str = asciifold(str);\n  let pattern = '';\n  let sequences = [new Sequence()];\n\n  for (let i = 0; i < str.length; i++) {\n    let substr = str.substring(i);\n    let match = substr.match(multi_char_reg);\n    const char = str.substring(i, i + 1);\n    const match_str = match ? match[0] : null; // loop through sequences\n    // add either the char or multi_match\n\n    let overlapping = [];\n    let added_types = new Set();\n\n    for (const sequence of sequences) {\n      const last_piece = sequence.last();\n\n      if (!last_piece || last_piece.length == 1 || last_piece.end <= i) {\n        // if we have a multi match\n        if (match_str) {\n          const len = match_str.length;\n          sequence.add({\n            start: i,\n            end: i + len,\n            length: len,\n            substr: match_str\n          });\n          added_types.add('1');\n        } else {\n          sequence.add({\n            start: i,\n            end: i + 1,\n            length: 1,\n            substr: char\n          });\n          added_types.add('2');\n        }\n      } else if (match_str) {\n        let clone = sequence.clone(i, last_piece);\n        const len = match_str.length;\n        clone.add({\n          start: i,\n          end: i + len,\n          length: len,\n          substr: match_str\n        });\n        overlapping.push(clone);\n      } else {\n        // don't add char\n        // adding would create invalid patterns: 234 => [2,34,4]\n        added_types.add('3');\n      }\n    } // if we have overlapping\n\n\n    if (overlapping.length > 0) {\n      // ['ii','iii'] before ['i','i','iii']\n      overlapping = overlapping.sort((a, b) => {\n        return a.length() - b.length();\n      });\n\n      for (let clone of overlapping) {\n        // don't add if we already have an equivalent sequence\n        if (inSequences(clone, sequences)) {\n          continue;\n        }\n\n        sequences.push(clone);\n      }\n\n      continue;\n    } // if we haven't done anything unique\n    // clean up the patterns\n    // helps keep patterns smaller\n    // if str = 'r₨㎧aarss', pattern will be 446 instead of 655\n\n\n    if (i > 0 && added_types.size == 1 && !added_types.has('3')) {\n      pattern += sequencesToPattern(sequences, false);\n      let new_seq = new Sequence();\n      const old_seq = sequences[0];\n\n      if (old_seq) {\n        new_seq.add(old_seq.last());\n      }\n\n      sequences = [new_seq];\n    }\n  }\n\n  pattern += sequencesToPattern(sequences, true);\n  return pattern;\n};\n\nexport { _asciifold, asciifold, code_points, generateMap, generateSets, generator, getPattern, initialize, mapSequence, normalize, substringsToPattern, unicode_map };\n//# sourceMappingURL=index.js.map\n", "/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\nimport { asciifold } from '@orchidjs/unicode-variants';\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nconst getAttr = (obj, name) => {\n  if (!obj) return;\n  return obj[name];\n};\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\n\nconst getAttrNesting = (obj, name) => {\n  if (!obj) return;\n  var part,\n      names = name.split(\".\");\n\n  while ((part = names.shift()) && (obj = obj[part]));\n\n  return obj;\n};\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n */\n\nconst scoreValue = (value, token, weight) => {\n  var score, pos;\n  if (!value) return 0;\n  value = value + '';\n  if (token.regex == null) return 0;\n  pos = value.search(token.regex);\n  if (pos === -1) return 0;\n  score = token.string.length / value.length;\n  if (pos === 0) score += 0.5;\n  return score * weight;\n};\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\n\nconst propToArray = (obj, key) => {\n  var value = obj[key];\n  if (typeof value == 'function') return value;\n\n  if (value && !Array.isArray(value)) {\n    obj[key] = [value];\n  }\n};\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\n\nconst iterate = (object, callback) => {\n  if (Array.isArray(object)) {\n    object.forEach(callback);\n  } else {\n    for (var key in object) {\n      if (object.hasOwnProperty(key)) {\n        callback(object[key], key);\n      }\n    }\n  }\n};\nconst cmp = (a, b) => {\n  if (typeof a === 'number' && typeof b === 'number') {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  a = asciifold(a + '').toLowerCase();\n  b = asciifold(b + '').toLowerCase();\n  if (a > b) return 1;\n  if (b > a) return -1;\n  return 0;\n};\n\nexport { cmp, getAttr, getAttrNesting, iterate, propToArray, scoreValue };\n//# sourceMappingURL=utils.js.map\n", "/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\nimport { iterate, cmp, propToArray, getAttrNesting, getAttr, scoreValue } from './utils.js';\nexport { cmp, getAttr, getAttrNesting, iterate, propToArray, scoreValue } from './utils.js';\nimport { escape_regex, getPattern } from '@orchidjs/unicode-variants';\nexport { getPattern } from '@orchidjs/unicode-variants';\n\n/**\n * sifter.js\n * Copyright (c) 2013–2020 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\nclass Sifter {\n  // []|{};\n\n  /**\n   * Textually searches arrays and hashes of objects\n   * by property (or multiple properties). Designed\n   * specifically for autocomplete.\n   *\n   */\n  constructor(items, settings) {\n    this.items = void 0;\n    this.settings = void 0;\n    this.items = items;\n    this.settings = settings || {\n      diacritics: true\n    };\n  }\n\n  /**\n   * Splits a search string into an array of individual\n   * regexps to be used to match results.\n   *\n   */\n  tokenize(query, respect_word_boundaries, weights) {\n    if (!query || !query.length) return [];\n    const tokens = [];\n    const words = query.split(/\\s+/);\n    var field_regex;\n\n    if (weights) {\n      field_regex = new RegExp('^(' + Object.keys(weights).map(escape_regex).join('|') + ')\\:(.*)$');\n    }\n\n    words.forEach(word => {\n      let field_match;\n      let field = null;\n      let regex = null; // look for \"field:query\" tokens\n\n      if (field_regex && (field_match = word.match(field_regex))) {\n        field = field_match[1];\n        word = field_match[2];\n      }\n\n      if (word.length > 0) {\n        if (this.settings.diacritics) {\n          regex = getPattern(word) || null;\n        } else {\n          regex = escape_regex(word);\n        }\n\n        if (regex && respect_word_boundaries) regex = \"\\\\b\" + regex;\n      }\n\n      tokens.push({\n        string: word,\n        regex: regex ? new RegExp(regex, 'iu') : null,\n        field: field\n      });\n    });\n    return tokens;\n  }\n\n  /**\n   * Returns a function to be used to score individual results.\n   *\n   * Good matches will have a higher score than poor matches.\n   * If an item is not a match, 0 will be returned by the function.\n   *\n   * @returns {T.ScoreFn}\n   */\n  getScoreFunction(query, options) {\n    var search = this.prepareSearch(query, options);\n    return this._getScoreFunction(search);\n  }\n  /**\n   * @returns {T.ScoreFn}\n   *\n   */\n\n\n  _getScoreFunction(search) {\n    const tokens = search.tokens,\n          token_count = tokens.length;\n\n    if (!token_count) {\n      return function () {\n        return 0;\n      };\n    }\n\n    const fields = search.options.fields,\n          weights = search.weights,\n          field_count = fields.length,\n          getAttrFn = search.getAttrFn;\n\n    if (!field_count) {\n      return function () {\n        return 1;\n      };\n    }\n    /**\n     * Calculates the score of an object\n     * against the search query.\n     *\n     */\n\n\n    const scoreObject = function () {\n      if (field_count === 1) {\n        return function (token, data) {\n          const field = fields[0].field;\n          return scoreValue(getAttrFn(data, field), token, weights[field] || 1);\n        };\n      }\n\n      return function (token, data) {\n        var sum = 0; // is the token specific to a field?\n\n        if (token.field) {\n          const value = getAttrFn(data, token.field);\n\n          if (!token.regex && value) {\n            sum += 1 / field_count;\n          } else {\n            sum += scoreValue(value, token, 1);\n          }\n        } else {\n          iterate(weights, (weight, field) => {\n            sum += scoreValue(getAttrFn(data, field), token, weight);\n          });\n        }\n\n        return sum / field_count;\n      };\n    }();\n\n    if (token_count === 1) {\n      return function (data) {\n        return scoreObject(tokens[0], data);\n      };\n    }\n\n    if (search.options.conjunction === 'and') {\n      return function (data) {\n        var score,\n            sum = 0;\n\n        for (let token of tokens) {\n          score = scoreObject(token, data);\n          if (score <= 0) return 0;\n          sum += score;\n        }\n\n        return sum / token_count;\n      };\n    } else {\n      return function (data) {\n        var sum = 0;\n        iterate(tokens, token => {\n          sum += scoreObject(token, data);\n        });\n        return sum / token_count;\n      };\n    }\n  }\n\n  /**\n   * Returns a function that can be used to compare two\n   * results, for sorting purposes. If no sorting should\n   * be performed, `null` will be returned.\n   *\n   * @return function(a,b)\n   */\n  getSortFunction(query, options) {\n    var search = this.prepareSearch(query, options);\n    return this._getSortFunction(search);\n  }\n\n  _getSortFunction(search) {\n    var implicit_score,\n        sort_flds = [];\n    const self = this,\n          options = search.options,\n          sort = !search.query && options.sort_empty ? options.sort_empty : options.sort;\n\n    if (typeof sort == 'function') {\n      return sort.bind(this);\n    }\n    /**\n     * Fetches the specified sort field value\n     * from a search result item.\n     *\n     */\n\n\n    const get_field = function get_field(name, result) {\n      if (name === '$score') return result.score;\n      return search.getAttrFn(self.items[result.id], name);\n    }; // parse options\n\n\n    if (sort) {\n      for (let s of sort) {\n        if (search.query || s.field !== '$score') {\n          sort_flds.push(s);\n        }\n      }\n    } // the \"$score\" field is implied to be the primary\n    // sort field, unless it's manually specified\n\n\n    if (search.query) {\n      implicit_score = true;\n\n      for (let fld of sort_flds) {\n        if (fld.field === '$score') {\n          implicit_score = false;\n          break;\n        }\n      }\n\n      if (implicit_score) {\n        sort_flds.unshift({\n          field: '$score',\n          direction: 'desc'\n        });\n      } // without a search.query, all items will have the same score\n\n    } else {\n      sort_flds = sort_flds.filter(fld => fld.field !== '$score');\n    } // build function\n\n\n    const sort_flds_count = sort_flds.length;\n\n    if (!sort_flds_count) {\n      return null;\n    }\n\n    return function (a, b) {\n      var result, field;\n\n      for (let sort_fld of sort_flds) {\n        field = sort_fld.field;\n        let multiplier = sort_fld.direction === 'desc' ? -1 : 1;\n        result = multiplier * cmp(get_field(field, a), get_field(field, b));\n        if (result) return result;\n      }\n\n      return 0;\n    };\n  }\n\n  /**\n   * Parses a search query and returns an object\n   * with tokens and fields ready to be populated\n   * with results.\n   *\n   */\n  prepareSearch(query, optsUser) {\n    const weights = {};\n    var options = Object.assign({}, optsUser);\n    propToArray(options, 'sort');\n    propToArray(options, 'sort_empty'); // convert fields to new format\n\n    if (options.fields) {\n      propToArray(options, 'fields');\n      const fields = [];\n      options.fields.forEach(field => {\n        if (typeof field == 'string') {\n          field = {\n            field: field,\n            weight: 1\n          };\n        }\n\n        fields.push(field);\n        weights[field.field] = 'weight' in field ? field.weight : 1;\n      });\n      options.fields = fields;\n    }\n\n    return {\n      options: options,\n      query: query.toLowerCase().trim(),\n      tokens: this.tokenize(query, options.respect_word_boundaries, weights),\n      total: 0,\n      items: [],\n      weights: weights,\n      getAttrFn: options.nesting ? getAttrNesting : getAttr\n    };\n  }\n\n  /**\n   * Searches through all items and returns a sorted array of matches.\n   *\n   */\n  search(query, options) {\n    var self = this,\n        score,\n        search;\n    search = this.prepareSearch(query, options);\n    options = search.options;\n    query = search.query; // generate result scoring function\n\n    const fn_score = options.score || self._getScoreFunction(search); // perform search and sort\n\n\n    if (query.length) {\n      iterate(self.items, (item, id) => {\n        score = fn_score(item);\n\n        if (options.filter === false || score > 0) {\n          search.items.push({\n            'score': score,\n            'id': id\n          });\n        }\n      });\n    } else {\n      iterate(self.items, (_, id) => {\n        search.items.push({\n          'score': 1,\n          'id': id\n        });\n      });\n    }\n\n    const fn_sort = self._getSortFunction(search);\n\n    if (fn_sort) search.items.sort(fn_sort); // apply limits\n\n    search.total = search.items.length;\n\n    if (typeof options.limit === 'number') {\n      search.items = search.items.slice(0, options.limit);\n    }\n\n    return search;\n  }\n\n}\n\nexport { Sifter };\n//# sourceMappingURL=sifter.js.map\n", "\nimport { asciifold } from '@orchidjs/unicode-variants';\nimport * as T from './types';\n\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttr = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    return obj[name];\n};\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttrNesting = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    var part, names = name.split(\".\");\n\twhile( (part = names.shift()) && (obj = obj[part]));\n    return obj;\n};\n\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n */\nexport const scoreValue = (value:string, token:T.Token, weight:number ):number => {\n\tvar score, pos;\n\n\tif (!value) return 0;\n\n\tvalue = value + '';\n\tif( token.regex == null ) return 0;\n\tpos = value.search(token.regex);\n\tif (pos === -1) return 0;\n\n\tscore = token.string.length / value.length;\n\tif (pos === 0) score += 0.5;\n\n\treturn score * weight;\n};\n\n\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\nexport const propToArray = (obj:{[key:string]:any}, key:string) => {\n\tvar value = obj[key];\n\n\tif( typeof value == 'function' ) return value;\n\n\tif( value && !Array.isArray(value) ){\n\t\tobj[key] = [value];\n\t}\n}\n\n\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\nexport const iterate = (object:[]|{[key:string]:any}, callback:(value:any,key:any)=>any) => {\n\n\tif ( Array.isArray(object)) {\n\t\tobject.forEach(callback);\n\n\t}else{\n\n\t\tfor (var key in object) {\n\t\t\tif (object.hasOwnProperty(key)) {\n\t\t\t\tcallback(object[key], key);\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n\nexport const cmp = (a:number|string, b:number|string) => {\n\tif (typeof a === 'number' && typeof b === 'number') {\n\t\treturn a > b ? 1 : (a < b ? -1 : 0);\n\t}\n\ta = asciifold(a + '').toLowerCase();\n\tb = asciifold(b + '').toLowerCase();\n\tif (a > b) return 1;\n\tif (b > a) return -1;\n\treturn 0;\n};\n", "\nimport { iterate } from '@orchidjs/sifter/lib/utils';\n\n/**\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n *\n * param query should be {}\n */\nexport const getDom = ( query:any ):HTMLElement => {\n\n\tif( query.jquery ){\n\t\treturn query[0];\n\t}\n\n\tif( query instanceof HTMLElement ){\n\t\treturn query;\n\t}\n\n\tif( isHtmlString(query) ){\n\t\tvar tpl = document.createElement('template');\n\t\ttpl.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\t\treturn tpl.content.firstChild as HTMLElement;\n\t}\n\n\treturn document.querySelector(query);\n};\n\nexport const isHtmlString = (arg:any): boolean => {\n\tif( typeof arg === 'string' && arg.indexOf('<') > -1 ){\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nexport const escapeQuery = (query:string):string => {\n\treturn query.replace(/['\"\\\\]/g, '\\\\$&');\n}\n\n/**\n * Dispatch an event\n *\n */\nexport const triggerEvent = ( dom_el:HTMLElement, event_name:string ):void => {\n\tvar event = document.createEvent('HTMLEvents');\n\tevent.initEvent(event_name, true, false);\n\tdom_el.dispatchEvent(event)\n};\n\n/**\n * Apply CSS rules to a dom element\n *\n */\nexport const applyCSS = ( dom_el:HTMLElement, css:{ [key: string]: string|number }):void => {\n\tObject.assign(dom_el.style, css);\n}\n\n\n/**\n * Add css classes\n *\n */\nexport const addClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n\tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map( cls => {\n\t\t\tel.classList.add( cls );\n\t\t});\n\t});\n}\n\n/**\n * Remove css classes\n *\n */\n export const removeClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n \tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map(cls => {\n\t \t\tel.classList.remove( cls );\n\t\t});\n \t});\n }\n\n\n/**\n * Return arguments\n *\n */\nexport const classesArray = (args:string[]|string[][]):string[] => {\n\tvar classes:string[] = [];\n\titerate( args, (_classes) =>{\n\t\tif( typeof _classes === 'string' ){\n\t\t\t_classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n\t\t}\n\t\tif( Array.isArray(_classes) ){\n\t\t\tclasses = classes.concat(_classes);\n\t\t}\n\t});\n\n\treturn classes.filter(Boolean);\n}\n\n\n/**\n * Create an array from arg if it's not already an array\n *\n */\nexport const castAsArray = (arg:any):Array<any> => {\n\tif( !Array.isArray(arg) ){\n \t\targ = [arg];\n \t}\n\treturn arg;\n}\n\n\n/**\n * Get the closest node to the evt.target matching the selector\n * Stops at wrapper\n *\n */\nexport const parentMatch = ( target:null|HTMLElement, selector:string, wrapper?:HTMLElement ):HTMLElement|void => {\n\n\tif( wrapper && !wrapper.contains(target) ){\n\t\treturn;\n\t}\n\n\twhile( target && target.matches ){\n\n\t\tif( target.matches(selector) ){\n\t\t\treturn target;\n\t\t}\n\n\t\ttarget = target.parentNode as HTMLElement;\n\t}\n}\n\n\n/**\n * Get the first or last item from an array\n *\n * > 0 - right (last)\n * <= 0 - left (first)\n *\n */\nexport const getTail = ( list:Array<any>|NodeList, direction:number=0 ):any => {\n\n\tif( direction > 0 ){\n\t\treturn list[list.length-1];\n\t}\n\n\treturn list[0];\n}\n\n/**\n * Return true if an object is empty\n *\n */\nexport const isEmptyObject = (obj:object):boolean => {\n\treturn (Object.keys(obj).length === 0);\n}\n\n\n/**\n * Get the index of an element amongst sibling nodes of the same type\n *\n */\nexport const nodeIndex = ( el:null|Element, amongst?:string ):number => {\n\tif (!el) return -1;\n\n\tamongst = amongst || el.nodeName;\n\n\tvar i = 0;\n\twhile( el = el.previousElementSibling ){\n\n\t\tif( el.matches(amongst) ){\n\t\t\ti++;\n\t\t}\n\t}\n\treturn i;\n}\n\n\n/**\n * Set attributes of an element\n *\n */\nexport const setAttr = (el:Element,attrs:{ [key: string]: null|string|number }) => {\n\titerate( attrs,(val,attr) => {\n\t\tif( val == null ){\n\t\t\tel.removeAttribute(attr as string);\n\t\t}else{\n\t\t\tel.setAttribute(attr as string, ''+val);\n\t\t}\n\t});\n}\n\n\n/**\n * Replace a node\n */\nexport const replaceNode = ( existing:Node, replacement:Node ) => {\n\tif( existing.parentNode ) existing.parentNode.replaceChild(replacement, existing);\n}\n", "/**\n * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n * Highlights arbitrary terms in a node.\n *\n * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n */\n\nimport {replaceNode} from '../vanilla';\n\n\nexport const highlight = (element:HTMLElement, regex:string|RegExp) => {\n\n\tif( regex === null ) return;\n\n\t// convet string to regex\n\tif( typeof regex === 'string' ){\n\n\t\tif( !regex.length ) return;\n\t\tregex = new RegExp(regex, 'i');\n\t}\n\n\n\t// Wrap matching part of text node with highlighting <span>, e.g.\n\t// Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\tconst highlightText = ( node:Text ):number => {\n\n\t\tvar match = node.data.match(regex);\n\t\tif( match && node.data.length > 0 ){\n\t\t\tvar spannode\t\t= document.createElement('span');\n\t\t\tspannode.className\t= 'highlight';\n\t\t\tvar middlebit\t\t= node.splitText(match.index as number);\n\n\t\t\tmiddlebit.splitText(match[0]!.length);\n\t\t\tvar middleclone\t\t= middlebit.cloneNode(true);\n\n\t\t\tspannode.appendChild(middleclone);\n\t\t\treplaceNode(middlebit, spannode);\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn 0;\n\t};\n\n\t// Recurse element node, looking for child text nodes to highlight, unless element\n\t// is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\tconst highlightChildren = ( node:Element ):void => {\n\t\tif( node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && ( node.className !== 'highlight' || node.tagName !== 'SPAN' ) ){\n\t\t\tArray.from(node.childNodes).forEach(element => {\n\t\t\t\thighlightRecursive(element);\n\t\t\t});\n\t\t}\n\t};\n\n\n\tconst highlightRecursive = ( node:Node|Element ):number => {\n\n\t\tif( node.nodeType === 3 ){\n\t\t\treturn highlightText(node as Text);\n\t\t}\n\n\t\thighlightChildren(node as Element);\n\n\t\treturn 0;\n\t};\n\n\thighlightRecursive( element );\n};\n\n/**\n * removeHighlight fn copied from highlight v5 and\n * edited to remove with(), pass js strict mode, and use without jquery\n */\nexport const removeHighlight = (el:HTMLElement) => {\n\tvar elements = el.querySelectorAll(\"span.highlight\");\n\tArray.prototype.forEach.call(elements, function(el:HTMLElement){\n\t\tvar parent = el.parentNode as Node;\n\t\tparent.replaceChild(el.firstChild as Node, el);\n\t\tparent.normalize();\n\t});\n};\n", "export const KEY_A\t\t\t\t= 65;\nexport const KEY_RETURN\t\t\t= 13;\nexport const KEY_ESC\t\t\t= 27;\nexport const KEY_LEFT\t\t\t= 37;\nexport const KEY_UP\t\t\t\t= 38;\nexport const KEY_RIGHT\t\t\t= 39;\nexport const KEY_DOWN\t\t\t= 40;\nexport const KEY_BACKSPACE\t\t= 8;\nexport const KEY_DELETE\t\t\t= 46;\nexport const KEY_TAB\t\t\t= 9;\n\nexport const IS_MAC      \t\t= typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\nexport const KEY_SHORTCUT\t\t= IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n", "\nexport default {\n\toptions: [],\n\toptgroups: [],\n\n\tplugins: [],\n\tdelimiter: ',',\n\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\tpersist: true,\n\tdiacritics: true,\n\tcreate: null,\n\tcreateOnBlur: false,\n\tcreateFilter: null,\n\thighlight: true,\n\topenOnFocus: true,\n\tshouldOpen: null,\n\tmaxOptions: 50,\n\tmaxItems: null,\n\thideSelected: null,\n\tduplicates: false,\n\taddPrecedence: false,\n\tselectOnTab: false,\n\tpreload: null,\n\tallowEmptyOption: false,\n\t//closeAfterSelect: false,\n\n\tloadThrottle: 300,\n\tloadingClass: 'loading',\n\n\tdataAttr: null, //'data-data',\n\toptgroupField: 'optgroup',\n\tvalueField: 'value',\n\tlabelField: 'text',\n\tdisabledField: 'disabled',\n\toptgroupLabelField: 'label',\n\toptgroupValueField: 'value',\n\tlockOptgroupOrder: false,\n\n\tsortField: '$order',\n\tsearchField: ['text'],\n\tsearchConjunction: 'and',\n\n\tmode: null,\n\twrapperClass: 'ts-wrapper',\n\tcontrolClass: 'ts-control',\n\tdropdownClass: 'ts-dropdown',\n\tdropdownContentClass: 'ts-dropdown-content',\n\titemClass: 'item',\n\toptionClass: 'option',\n\n\tdropdownParent: null,\n\tcontrolInput: '<input type=\"text\" autocomplete=\"off\" size=\"1\" />',\n\n\tcopyClassesToDropdown: false,\n\n\tplaceholder: null,\n\thidePlaceholder: null,\n\n\tshouldLoad: function(query:string):boolean{\n\t\treturn query.length > 0;\n\t},\n\n\t/*\n\tload                 : null, // function(query, callback) { ... }\n\tscore                : null, // function(search) { ... }\n\tonInitialize         : null, // function() { ... }\n\tonChange             : null, // function(value) { ... }\n\tonItemAdd            : null, // function(value, $item) { ... }\n\tonItemRemove         : null, // function(value) { ... }\n\tonClear              : null, // function() { ... }\n\tonOptionAdd          : null, // function(value, data) { ... }\n\tonOptionRemove       : null, // function(value) { ... }\n\tonOptionClear        : null, // function() { ... }\n\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\tonOptionGroupRemove  : null, // function(id) { ... }\n\tonOptionGroupClear   : null, // function() { ... }\n\tonDropdownOpen       : null, // function(dropdown) { ... }\n\tonDropdownClose      : null, // function(dropdown) { ... }\n\tonType               : null, // function(str) { ... }\n\tonDelete             : null, // function(values) { ... }\n\t*/\n\n\trender: {\n\t\t/*\n\t\titem: null,\n\t\toptgroup: null,\n\t\toptgroup_header: null,\n\t\toption: null,\n\t\toption_create: null\n\t\t*/\n\t}\n};\n", "\nimport TomSelect from './tom-select';\nimport { TomLoadCallback } from './types/index';\n\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\nexport const hash_key = (value:undefined|null|boolean|string|number):string|null => {\n\tif (typeof value === 'undefined' || value === null) return null;\n\treturn get_hash(value);\n};\n\nexport const get_hash = (value:boolean|string|number):string => {\n\tif (typeof value === 'boolean') return value ? '1' : '0';\n\treturn value + '';\n};\n\n/**\n * Escapes a string for use within HTML.\n *\n */\nexport const escape_html = (str:string):string => {\n\treturn (str + '')\n\t\t.replace(/&/g, '&amp;')\n\t\t.replace(/</g, '&lt;')\n\t\t.replace(/>/g, '&gt;')\n\t\t.replace(/\"/g, '&quot;');\n};\n\n\n/**\n * Debounce the user provided load function\n *\n */\nexport const loadDebounce = (fn:(value:string,callback:TomLoadCallback) => void,delay:number) => {\n\tvar timeout: null|ReturnType<typeof setTimeout>;\n\treturn function(this:TomSelect, value:string,callback:TomLoadCallback) {\n\t\tvar self = this;\n\n\t\tif( timeout ){\n\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\tclearTimeout(timeout);\n\t\t}\n\t\ttimeout = setTimeout(function() {\n\t\t\ttimeout = null;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tfn.call(self, value, callback);\n\n\t\t}, delay);\n\t};\n};\n\n\n/**\n * Debounce all fired events types listed in `types`\n * while executing the provided `fn`.\n *\n */\nexport const debounce_events = ( self:TomSelect, types:string[], fn:() => void ) => {\n\tvar type:string;\n\tvar trigger = self.trigger;\n\tvar event_args:{ [key: string]: any } = {};\n\n\t// override trigger method\n\tself.trigger = function(){\n\t\tvar type = arguments[0];\n\t\tif (types.indexOf(type) !== -1) {\n\t\t\tevent_args[type] = arguments;\n\t\t} else {\n\t\t\treturn trigger.apply(self, arguments);\n\t\t}\n\t};\n\n\t// invoke provided function\n\tfn.apply(self, []);\n\tself.trigger = trigger;\n\n\t// trigger queued events\n\tfor( type of types ){\n\t\tif( type in event_args ){\n\t\t\ttrigger.apply(self, event_args[type]);\n\t\t}\n\t}\n};\n\n\n/**\n * Determines the current selection within a text input control.\n * Returns an object containing:\n *   - start\n *   - length\n *\n */\nexport const getSelection = (input:HTMLInputElement):{ start: number; length: number } => {\n\treturn {\n\t\tstart\t: input.selectionStart || 0,\n\t\tlength\t: (input.selectionEnd||0) - (input.selectionStart||0),\n\t};\n};\n\n\n/**\n * Prevent default\n *\n */\nexport const preventDefault = (evt?:Event, stop:boolean=false):void => {\n\tif( evt ){\n\t\tevt.preventDefault();\n\t\tif( stop ){\n\t\t\tevt.stopPropagation();\n\t\t}\n\t}\n}\n\n\n/**\n * Add event helper\n *\n */\nexport const addEvent = (target:EventTarget, type:string, callback:EventListenerOrEventListenerObject, options?:object):void => {\n\ttarget.addEventListener(type,callback,options);\n};\n\n\n/**\n * Return true if the requested key is down\n * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n * The current evt may not always set ( eg calling advanceSelection() )\n *\n */\nexport const isKeyDown = ( key_name:keyof (KeyboardEvent|MouseEvent), evt?:KeyboardEvent|MouseEvent ) => {\n\n\tif( !evt ){\n\t\treturn false;\n\t}\n\n\tif( !evt[key_name] ){\n\t\treturn false;\n\t}\n\n\tvar count = (evt.altKey?1:0) + (evt.ctrlKey?1:0) + (evt.shiftKey?1:0) + (evt.metaKey?1:0);\n\n\tif( count === 1 ){\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n\n/**\n * Get the id of an element\n * If the id attribute is not set, set the attribute with the given id\n *\n */\nexport const getId = (el:Element,id:string) => {\n\tconst existing_id = el.getAttribute('id');\n\tif( existing_id ){\n\t\treturn existing_id;\n\t}\n\n\tel.setAttribute('id',id);\n\treturn id;\n};\n\n\n/**\n * Returns a string with backslashes added before characters that need to be escaped.\n */\nexport const addSlashes = (str:string):string => {\n\treturn str.replace(/[\\\\\"']/g, '\\\\$&');\n};\n\n/**\n *\n */\nexport const append = ( parent:Element|DocumentFragment, node: string|Node|null|undefined ):void =>{\n\tif( node ) parent.append(node);\n};\n", "import defaults from './defaults';\nimport { hash_key } from './utils';\nimport { TomOption, TomSettings, RecursivePartial } from './types/index';\nimport { iterate } from '@orchidjs/sifter/lib/utils';\nimport { TomInput } from './types/index';\n\n\nexport default function getSettings( input:TomInput, settings_user:RecursivePartial<TomSettings>):TomSettings{\n\tvar settings:TomSettings\t= Object.assign({}, defaults, settings_user);\n\n\tvar attr_data\t\t\t\t= settings.dataAttr;\n\tvar field_label\t\t\t\t= settings.labelField;\n\tvar field_value\t\t\t\t= settings.valueField;\n\tvar field_disabled\t\t\t= settings.disabledField;\n\tvar field_optgroup\t\t\t= settings.optgroupField;\n\tvar field_optgroup_label\t= settings.optgroupLabelField;\n\tvar field_optgroup_value\t= settings.optgroupValueField;\n\n\tvar tag_name\t\t\t\t= input.tagName.toLowerCase();\n\tvar placeholder\t\t\t\t= input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n\n\tif (!placeholder && !settings.allowEmptyOption) {\n\t\tlet option\t\t= input.querySelector('option[value=\"\"]');\n\t\tif( option ){\n\t\t\tplaceholder = option.textContent;\n\t\t}\n\n\t}\n\n\tvar settings_element:{\n\t\tplaceholder\t: null|string,\n\t\toptions\t\t: TomOption[],\n\t\toptgroups\t: TomOption[],\n\t\titems\t\t: string[],\n\t\tmaxItems\t: null|number,\n\t} = {\n\t\tplaceholder\t: placeholder,\n\t\toptions\t\t: [],\n\t\toptgroups\t: [],\n\t\titems\t\t: [],\n\t\tmaxItems\t: null,\n\t};\n\n\n\t/**\n\t * Initialize from a <select> element.\n\t *\n\t */\n\tvar init_select = () => {\n\t\tvar tagName;\n\t\tvar options = settings_element.options;\n\t\tvar optionsMap:{[key:string]:any} = {};\n\t\tvar group_count = 1;\n\n\t\tvar readData = (el:HTMLElement):TomOption => {\n\n\t\t\tvar data\t= Object.assign({},el.dataset); // get plain object from DOMStringMap\n\t\t\tvar json\t= attr_data && data[attr_data];\n\n\t\t\tif( typeof json === 'string' && json.length ){\n\t\t\t\tdata = Object.assign(data,JSON.parse(json));\n\t\t\t}\n\n\t\t\treturn data;\n\t\t};\n\n\t\tvar addOption = (option:HTMLOptionElement, group?:string) => {\n\n\t\t\tvar value = hash_key(option.value);\n\t\t\tif ( value == null ) return;\n\t\t\tif ( !value && !settings.allowEmptyOption) return;\n\n\t\t\t// if the option already exists, it's probably been\n\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t// existing option so that it's rendered in both places.\n\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\tif (group) {\n\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t} else if (!Array.isArray(arr)) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}else{\n\n\t\t\t\tvar option_data             = readData(option);\n\t\t\t\toption_data[field_label]    = option_data[field_label] || option.textContent;\n\t\t\t\toption_data[field_value]    = option_data[field_value] || value;\n\t\t\t\toption_data[field_disabled] = option_data[field_disabled] || option.disabled;\n\t\t\t\toption_data[field_optgroup] = option_data[field_optgroup] || group;\n\t\t\t\toption_data.$option\t\t\t= option;\n\n\t\t\t\toptionsMap[value] = option_data;\n\t\t\t\toptions.push(option_data);\n\t\t\t}\n\n\t\t\tif( option.selected ){\n\t\t\t\tsettings_element.items.push(value);\n\t\t\t}\n\t\t};\n\n\t\tvar addGroup = ( optgroup:HTMLOptGroupElement ) => {\n\t\t\tvar id:string, optgroup_data\n\n\t\t\toptgroup_data\t\t\t\t\t\t\t= readData(optgroup);\n\t\t\toptgroup_data[field_optgroup_label]\t\t= optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n\t\t\toptgroup_data[field_optgroup_value]\t\t= optgroup_data[field_optgroup_value] || group_count++;\n\t\t\toptgroup_data[field_disabled]\t\t\t= optgroup_data[field_disabled] || optgroup.disabled;\n\t\t\tsettings_element.optgroups.push(optgroup_data);\n\n\t\t\tid = optgroup_data[field_optgroup_value];\n\n\t\t\titerate(optgroup.children, (option)=>{\n\t\t\t\taddOption(option as HTMLOptionElement, id);\n\t\t\t});\n\n\t\t};\n\n\t\tsettings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n\n\t\titerate(input.children,(child)=>{\n\t\t\ttagName = child.tagName.toLowerCase();\n\t\t\tif (tagName === 'optgroup') {\n\t\t\t\taddGroup(child as HTMLOptGroupElement);\n\t\t\t} else if (tagName === 'option') {\n\t\t\t\taddOption(child as HTMLOptionElement);\n\t\t\t}\n\t\t});\n\n\t};\n\n\n\t/**\n\t * Initialize from a <input type=\"text\"> element.\n\t *\n\t */\n\tvar init_textbox = () => {\n\t\tconst data_raw = input.getAttribute(attr_data);\n\n\t\tif (!data_raw) {\n\t\t\tvar value = input.value.trim() || '';\n\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\tconst values = value.split(settings.delimiter);\n\n\t\t\titerate( values, (value) => {\n\t\t\t\tconst option:TomOption = {};\n\t\t\t\toption[field_label] = value;\n\t\t\t\toption[field_value] = value;\n\t\t\t\tsettings_element.options.push(option);\n\t\t\t});\n\t\t\tsettings_element.items = values;\n\t\t} else {\n\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\titerate( settings_element.options, (opt) => {\n\t\t\t\tsettings_element.items.push(opt[field_value]);\n\t\t\t});\n\t\t}\n\t};\n\n\n\tif (tag_name === 'select') {\n\t\tinit_select();\n\t} else {\n\t\tinit_textbox();\n\t}\n\n\treturn Object.assign( {}, defaults, settings_element, settings_user) as TomSettings;\n};\n", "\nimport MicroEvent from './contrib/microevent';\nimport MicroPlugin from './contrib/microplugin';\nimport { Sifter, iterate } from '@orchidjs/sifter';\nimport { escape_regex } from '@orchidjs/unicode-variants';\nimport { TomInput, TomArgObject, TomOption, TomOptions, TomCreateFilter, TomCreateCallback, TomItem, TomSettings, TomTemplateNames, TomClearFilter, RecursivePartial } from './types/index';\nimport {highlight, removeHighlight} from './contrib/highlight';\nimport * as constants from './constants';\nimport getSettings from './getSettings';\nimport {\n\thash_key,\n\tget_hash,\n\tescape_html,\n\tdebounce_events,\n\tgetSelection,\n\tpreventDefault,\n\taddEvent,\n\tloadDebounce,\n\tisKeyDown,\n\tgetId,\n\taddSlashes,\n\tappend\n} from './utils';\n\nimport {\n\tgetDom,\n\tisHtmlString,\n\tescapeQuery,\n\ttriggerEvent,\n\tapplyCSS,\n\taddClasses,\n\tremoveClasses,\n\tparentMatch,\n\tgetTail,\n\tisEmptyObject,\n\tnodeIndex,\n\tsetAttr,\n\treplaceNode\n} from './vanilla';\n\nvar instance_i = 0;\n\nexport default class TomSelect extends MicroPlugin(MicroEvent){\n\n\tpublic control_input\t\t\t: HTMLInputElement;\n\tpublic wrapper\t\t\t\t\t: HTMLElement;\n\tpublic dropdown\t\t\t\t\t: HTMLElement;\n\tpublic control\t\t\t\t\t: HTMLElement;\n\tpublic dropdown_content\t\t\t: HTMLElement;\n\tpublic focus_node\t\t\t\t: HTMLElement;\n\n\tpublic order\t\t\t\t\t: number = 0;\n\tpublic settings\t\t\t\t\t: TomSettings;\n\tpublic input\t\t\t\t\t: TomInput;\n\tpublic tabIndex\t\t\t\t\t: number;\n\tpublic is_select_tag\t\t\t: boolean;\n\tpublic rtl\t\t\t\t\t\t: boolean;\n\tprivate inputId\t\t\t\t\t: string;\n\n\tprivate _destroy\t\t\t\t!: () => void;\n\tpublic sifter\t\t\t\t\t: Sifter;\n\n\n\tpublic isOpen\t\t\t\t\t: boolean = false;\n\tpublic isDisabled\t\t\t\t: boolean = false;\n\tpublic isRequired\t\t\t\t: boolean;\n\tpublic isInvalid\t\t\t\t: boolean = false; // @deprecated 1.8\n\tpublic isValid\t\t\t\t\t: boolean = true;\n\tpublic isLocked\t\t\t\t\t: boolean = false;\n\tpublic isFocused\t\t\t\t: boolean = false;\n\tpublic isInputHidden\t\t\t: boolean = false;\n\tpublic isSetup\t\t\t\t\t: boolean = false;\n\tpublic ignoreFocus\t\t\t\t: boolean = false;\n\tpublic ignoreHover\t\t\t\t: boolean = false;\n\tpublic hasOptions\t\t\t\t: boolean = false;\n\tpublic currentResults\t\t\t?: ReturnType<Sifter['search']>;\n\tpublic lastValue\t\t\t\t: string = '';\n\tpublic caretPos\t\t\t\t\t: number = 0;\n\tpublic loading\t\t\t\t\t: number = 0;\n\tpublic loadedSearches\t\t\t: { [key: string]: boolean } = {};\n\n\tpublic activeOption\t\t\t\t: null|HTMLElement = null;\n\tpublic activeItems\t\t\t\t: TomItem[] = [];\n\n\tpublic optgroups\t\t\t\t: TomOptions = {};\n\tpublic options\t\t\t\t\t: TomOptions = {};\n\tpublic userOptions\t\t\t\t: {[key:string]:boolean} = {};\n\tpublic items\t\t\t\t\t: string[] = [];\n\n\n\n\tconstructor( input_arg: string|TomInput, user_settings:RecursivePartial<TomSettings> ){\n\t\tsuper();\n\n\t\tinstance_i++;\n\n\t\tvar dir;\n\t\tvar input\t\t\t\t= getDom( input_arg ) as TomInput;\n\n\t\tif( input.tomselect ){\n\t\t\tthrow new Error('Tom Select already initialized on this element');\n\t\t}\n\n\n\t\tinput.tomselect\t\t\t= this;\n\n\n\t\t// detect rtl environment\n\t\tvar computedStyle\t\t= window.getComputedStyle && window.getComputedStyle(input, null);\n\t\tdir\t\t\t\t\t\t= computedStyle.getPropertyValue('direction');\n\n\t\t// setup default state\n\t\tconst settings\t\t\t= getSettings( input, user_settings );\n\t\tthis.settings\t\t\t= settings;\n\t\tthis.input\t\t\t\t= input;\n\t\tthis.tabIndex\t\t\t= input.tabIndex || 0;\n\t\tthis.is_select_tag\t\t= input.tagName.toLowerCase() === 'select';\n\t\tthis.rtl\t\t\t\t= /rtl/i.test(dir);\n\t\tthis.inputId\t\t\t= getId(input, 'tomselect-'+instance_i);\n\t\tthis.isRequired\t\t\t= input.required;\n\n\n\t\t// search system\n\t\tthis.sifter = new Sifter(this.options, {diacritics: settings.diacritics});\n\n\t\t// option-dependent defaults\n\t\tsettings.mode = settings.mode || (settings.maxItems === 1 ? 'single' : 'multi');\n\t\tif (typeof settings.hideSelected !== 'boolean') {\n\t\t\tsettings.hideSelected = settings.mode === 'multi';\n\t\t}\n\n\t\tif( typeof settings.hidePlaceholder !== 'boolean' ){\n\t\t\tsettings.hidePlaceholder = settings.mode !== 'multi';\n\t\t}\n\n\t\t// set up createFilter callback\n\t\tvar filter = settings.createFilter;\n\t\tif( typeof filter !== 'function' ){\n\n\t\t\tif( typeof filter === 'string' ){\n\t\t\t\tfilter = new RegExp(filter);\n\t\t\t}\n\n\t\t\tif( filter instanceof RegExp ){\n\t\t\t\tsettings.createFilter = (input) => (filter as RegExp).test(input);\n\t\t\t}else{\n\t\t\t\tsettings.createFilter = (value) => {\n\t\t\t\t\treturn this.settings.duplicates || !this.options[value];\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\n\t\tthis.initializePlugins(settings.plugins);\n\t\tthis.setupCallbacks();\n\t\tthis.setupTemplates();\n\n\n\t\t// Create all elements\n\t\tconst wrapper\t\t\t= getDom('<div>');\n\t\tconst control\t\t\t= getDom('<div>');\n\t\tconst dropdown\t\t\t= this._render('dropdown');\n\t\tconst dropdown_content\t= getDom(`<div role=\"listbox\" tabindex=\"-1\">`);\n\n\t\tconst classes\t\t\t= this.input.getAttribute('class') || '';\n\t\tconst inputMode\t\t\t= settings.mode;\n\n\t\tvar control_input: HTMLInputElement;\n\n\n\t\taddClasses( wrapper, settings.wrapperClass, classes, inputMode);\n\n\n\t\taddClasses(control,settings.controlClass);\n\t\tappend( wrapper, control );\n\n\n\t\taddClasses(dropdown, settings.dropdownClass, inputMode);\n\t\tif( settings.copyClassesToDropdown ){\n\t\t\taddClasses( dropdown, classes);\n\t\t}\n\n\n\t\taddClasses(dropdown_content, settings.dropdownContentClass);\n\t\tappend( dropdown, dropdown_content );\n\n\t\tgetDom( settings.dropdownParent || wrapper ).appendChild( dropdown );\n\n\n\t\t// default controlInput\n\t\tif( isHtmlString(settings.controlInput) ){\n\t\t\tcontrol_input\t\t= getDom(settings.controlInput ) as HTMLInputElement;\n\n\t\t\t// set attributes\n\t\t\tvar attrs = ['autocorrect','autocapitalize','autocomplete'];\n\t\t\titerate(attrs,(attr:string) => {\n\t\t\t\tif( input.getAttribute(attr) ){\n\t\t\t\t\tsetAttr(control_input,{[attr]:input.getAttribute(attr)});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tcontrol_input.tabIndex = -1;\n\t\t\tcontrol.appendChild( control_input );\n\t\t\tthis.focus_node\t\t= control_input;\n\n\t\t// dom element\n\t\t}else if( settings.controlInput ){\n\t\t\tcontrol_input\t\t= getDom( settings.controlInput ) as HTMLInputElement;\n\t\t\tthis.focus_node\t\t= control_input;\n\n\t\t}else{\n\t\t\tcontrol_input\t\t= getDom('<input/>') as HTMLInputElement;\n\t\t\tthis.focus_node\t\t= control;\n\t\t}\n\n\t\tthis.wrapper\t\t\t= wrapper;\n\t\tthis.dropdown\t\t\t= dropdown;\n\t\tthis.dropdown_content\t= dropdown_content;\n\t\tthis.control \t\t\t= control;\n\t\tthis.control_input\t\t= control_input;\n\n\t\tthis.setup();\n\t}\n\n\t/**\n\t * set up event bindings.\n\t *\n\t */\n\tsetup(){\n\n\t\tconst self = this;\n\t\tconst settings\t\t\t\t= self.settings;\n\t\tconst control_input\t\t\t= self.control_input;\n\t\tconst dropdown\t\t\t\t= self.dropdown;\n\t\tconst dropdown_content\t\t= self.dropdown_content;\n\t\tconst wrapper\t\t\t\t= self.wrapper;\n\t\tconst control\t\t\t\t= self.control;\n\t\tconst input\t\t\t\t\t= self.input;\n\t\tconst focus_node\t\t\t= self.focus_node;\n\t\tconst passive_event\t\t\t= { passive: true };\n\t\tconst listboxId\t\t\t\t= self.inputId +'-ts-dropdown';\n\n\n\t\tsetAttr(dropdown_content,{\n\t\t\tid: listboxId\n\t\t});\n\n\t\tsetAttr(focus_node,{\n\t\t\trole:'combobox',\n\t\t\t'aria-haspopup':'listbox',\n\t\t\t'aria-expanded':'false',\n\t\t\t'aria-controls':listboxId\n\t\t});\n\n\t\tconst control_id\t= getId(focus_node,self.inputId + '-ts-control');\n\t\tconst query\t\t\t= \"label[for='\"+escapeQuery(self.inputId)+\"']\";\n\t\tconst label\t\t\t= document.querySelector(query);\n\t\tconst label_click\t= self.focus.bind(self);\n\t\tif( label ){\n\t\t\taddEvent(label,'click', label_click );\n\t\t\tsetAttr(label,{for:control_id});\n\t\t\tconst label_id = getId(label,self.inputId+'-ts-label');\n\t\t\tsetAttr(focus_node,{'aria-labelledby':label_id});\n\t\t\tsetAttr(dropdown_content,{'aria-labelledby':label_id});\n\t\t}\n\n\t\twrapper.style.width = input.style.width;\n\n\t\tif (self.plugins.names.length) {\n\t\t\tconst classes_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\taddClasses( [wrapper,dropdown], classes_plugins);\n\t\t}\n\n\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag ){\n\t\t\tsetAttr(input,{multiple:'multiple'});\n\t\t}\n\n\t\tif (settings.placeholder) {\n\t\t\tsetAttr(control_input,{placeholder:settings.placeholder});\n\t\t}\n\n\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\tif (!settings.splitOn && settings.delimiter) {\n\t\t\tsettings.splitOn = new RegExp('\\\\s*' + escape_regex(settings.delimiter) + '+\\\\s*');\n\t\t}\n\n\t\t// debounce user defined load() if loadThrottle > 0\n\t\t// after initializePlugins() so plugins can create/modify user defined loaders\n\t\tif( settings.load && settings.loadThrottle ){\n\t\t\tsettings.load = loadDebounce(settings.load,settings.loadThrottle)\n\t\t}\n\n\t\tself.control_input.type\t= input.type;\n\n\t\taddEvent(dropdown,'mousemove', () => {\n\t\t\tself.ignoreHover = false;\n\t\t});\n\n\t\taddEvent(dropdown,'mouseenter', (e) => {\n\n\t\t\tvar target_match = parentMatch(e.target as HTMLElement, '[data-selectable]', dropdown);\n\t\t\tif( target_match ) self.onOptionHover( e as MouseEvent, target_match );\n\n\t\t}, {capture:true});\n\n\t\t// clicking on an option should select it\n\t\taddEvent(dropdown,'click',(evt) => {\n\t\t\tconst option = parentMatch(evt.target as HTMLElement, '[data-selectable]');\n\t\t\tif( option ){\n\t\t\t\tself.onOptionSelect( evt as MouseEvent, option );\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t}\n\t\t});\n\n\t\taddEvent(control,'click', (evt) => {\n\n\t\t\tvar target_match = parentMatch( evt.target as HTMLElement, '[data-ts-item]', control);\n\t\t\tif( target_match && self.onItemSelect(evt as MouseEvent, target_match as TomItem) ){\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// retain focus (see control_input mousedown)\n\t\t\tif( control_input.value != '' ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself.onClick();\n\t\t\tpreventDefault(evt,true);\n\t\t});\n\n\n\t\t// keydown on focus_node for arrow_down/arrow_up\n\t\taddEvent(focus_node,'keydown',\t\t(e) => self.onKeyDown(e as KeyboardEvent) );\n\n\t\t// keypress and input/keyup\n\t\taddEvent(control_input,'keypress',\t(e) => self.onKeyPress(e as KeyboardEvent) );\n\t\taddEvent(control_input,'input',\t\t(e) => self.onInput(e as KeyboardEvent) );\n\t\taddEvent(focus_node,'blur', \t\t(e) => self.onBlur(e as FocusEvent) );\n\t\taddEvent(focus_node,'focus',\t\t(e) => self.onFocus(e as MouseEvent) );\n\t\taddEvent(control_input,'paste',\t\t(e) => self.onPaste(e as MouseEvent) );\n\n\n\t\tconst doc_mousedown = (evt:Event) => {\n\n\t\t\t// blur if target is outside of this instance\n\t\t\t// dropdown is not always inside wrapper\n\t\t\tconst target = evt.composedPath()[0];\n\t\t\tif( !wrapper.contains(target as HTMLElement) && !dropdown.contains(target as HTMLElement) ){\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\tself.blur();\n\t\t\t\t}\n\t\t\t\tself.inputState();\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t\t// retain focus by preventing native handling. if the\n\t\t\t// event target is the input it should not be modified.\n\t\t\t// otherwise, text selection within the input won't work.\n\t\t\t// Fixes bug #212 which is no covered by tests\n\t\t\tif( target == control_input && self.isOpen ){\n\t\t\t\tevt.stopPropagation();\n\n\t\t\t// clicking anywhere in the control should not blur the control_input (which would close the dropdown)\n\t\t\t}else{\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t}\n\n\t\t};\n\n\t\tconst win_scroll = () => {\n\t\t\tif (self.isOpen) {\n\t\t\t\tself.positionDropdown();\n\t\t\t}\n\t\t};\n\n\n\t\taddEvent(document,'mousedown', doc_mousedown);\n\t\taddEvent(window,'scroll', win_scroll, passive_event);\n\t\taddEvent(window,'resize', win_scroll, passive_event);\n\n\t\tthis._destroy = () => {\n\t\t\tdocument.removeEventListener('mousedown',doc_mousedown);\n\t\t\twindow.removeEventListener('scroll',win_scroll);\n\t\t\twindow.removeEventListener('resize',win_scroll);\n\t\t\tif( label ) label.removeEventListener('click',label_click);\n\t\t};\n\n\t\t// store original html and tab index so that they can be\n\t\t// restored when the destroy() method is called.\n\t\tthis.revertSettings = {\n\t\t\tinnerHTML : input.innerHTML,\n\t\t\ttabIndex : input.tabIndex\n\t\t};\n\n\n\t\tinput.tabIndex = -1;\n\t\tinput.insertAdjacentElement('afterend', self.wrapper);\n\n\t\tself.sync(false);\n\t\tsettings.items = [];\n\t\tdelete settings.optgroups;\n\t\tdelete settings.options;\n\n\t\taddEvent(input,'invalid', () => {\n\t\t\tif( self.isValid ){\n\t\t\t\tself.isValid = false;\n\t\t\t\tself.isInvalid = true;\n\t\t\t\tself.refreshState();\n\t\t\t}\n\t\t});\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshItems();\n\t\tself.close(false);\n\t\tself.inputState();\n\t\tself.isSetup = true;\n\n\t\tif( input.disabled ){\n\t\t\tself.disable();\n\t\t}else{\n\t\t\tself.enable(); //sets tabIndex\n\t\t}\n\n\t\tself.on('change', this.onChange);\n\n\t\taddClasses(input,'tomselected','ts-hidden-accessible');\n\t\tself.trigger('initialize');\n\n\t\t// preload options\n\t\tif (settings.preload === true) {\n\t\t\tself.preload();\n\t\t}\n\n\t}\n\n\n\t/**\n\t * Register options and optgroups\n\t *\n\t */\n\tsetupOptions(options:TomOption[] = [], optgroups:TomOption[] = []){\n\n\t\t// build options table\n\t\tthis.addOptions(options);\n\n\n\t\t// build optgroup table\n\t\titerate( optgroups, (optgroup:TomOption) => {\n\t\t\tthis.registerOptionGroup(optgroup);\n\t\t});\n\t}\n\n\t/**\n\t * Sets up default rendering functions.\n\t */\n\tsetupTemplates() {\n\t\tvar self = this;\n\t\tvar field_label = self.settings.labelField;\n\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\n\t\tvar templates = {\n\t\t\t'optgroup': (data:TomOption) => {\n\t\t\t\tlet optgroup = document.createElement('div');\n\t\t\t\toptgroup.className = 'optgroup';\n\t\t\t\toptgroup.appendChild(data.options);\n\t\t\t\treturn optgroup;\n\n\t\t\t},\n\t\t\t'optgroup_header': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t},\n\t\t\t'option': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'item': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'option_create': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t},\n\t\t\t'no_results':() => {\n\t\t\t\treturn '<div class=\"no-results\">No results found</div>';\n\t\t\t},\n\t\t\t'loading':() => {\n\t\t\t\treturn '<div class=\"spinner\"></div>';\n\t\t\t},\n\t\t\t'not_loading':() => {},\n\t\t\t'dropdown':() => {\n\t\t\t\treturn '<div></div>';\n\t\t\t}\n\t\t};\n\n\n\t\tself.settings.render = Object.assign({}, templates, self.settings.render);\n\t}\n\n\t/**\n\t * Maps fired events to callbacks provided\n\t * in the settings used when creating the control.\n\t */\n\tsetupCallbacks() {\n\t\tvar key, fn;\n\t\tvar callbacks:{[key:string]:string} = {\n\t\t\t'initialize'      : 'onInitialize',\n\t\t\t'change'          : 'onChange',\n\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t'item_select'     : 'onItemSelect',\n\t\t\t'clear'           : 'onClear',\n\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t'type'            : 'onType',\n\t\t\t'load'            : 'onLoad',\n\t\t\t'focus'           : 'onFocus',\n\t\t\t'blur'            : 'onBlur'\n\t\t};\n\n\t\tfor (key in callbacks) {\n\n\t\t\tfn = this.settings[callbacks[key] as (keyof TomSettings)];\n\t\t\tif (fn) this.on(key, fn);\n\n\t\t}\n\t}\n\n\t/**\n\t * Sync the Tom Select instance with the original input or select\n\t *\n\t */\n\tsync(get_settings:boolean=true):void{\n\t\tconst self\t\t= this;\n\t\tconst settings\t= get_settings ? getSettings( self.input, {delimiter:self.settings.delimiter} as RecursivePartial<TomSettings> ) : self.settings;\n\n\t\tself.setupOptions(settings.options,settings.optgroups);\n\n\t\tself.setValue(settings.items||[],true); // silent prevents recursion\n\n\t\tself.lastQuery = null; // so updated options will be displayed in dropdown\n\t}\n\n\t/**\n\t * Triggered when the main control element\n\t * has a click event.\n\t *\n\t */\n\tonClick():void {\n\t\tvar self = this;\n\n\t\tif( self.activeItems.length > 0 ){\n\t\t\tself.clearActiveItems();\n\t\t\tself.focus();\n\t\t\treturn;\n\t\t}\n\n\t\tif( self.isFocused && self.isOpen ){\n\t\t\tself.blur();\n\t\t} else {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * @deprecated v1.7\n\t *\n\t */\n\tonMouseDown():void {}\n\n\t/**\n\t * Triggered when the value of the control has been changed.\n\t * This should propagate the event to the original DOM\n\t * input / select element.\n\t */\n\tonChange() {\n\t\ttriggerEvent(this.input, 'input');\n\t\ttriggerEvent(this.input, 'change');\n\t}\n\n\t/**\n\t * Triggered on <input> paste.\n\t *\n\t */\n\tonPaste(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif( self.isInputHidden || self.isLocked ){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\t// If a regex or string is included, this will split the pasted\n\t\t// input and create Items for each separate value\n\t\tif( !self.settings.splitOn ){\n\t\t\treturn;\n\t\t}\n\n\t\t// Wait for pasted text to be recognized in value\n\t\tsetTimeout(() => {\n\t\t\tvar pastedText = self.inputValue();\n\t\t\tif( !pastedText.match(self.settings.splitOn)){\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tvar splitInput = pastedText.trim().split(self.settings.splitOn);\n\t\t\titerate( splitInput, (piece:string) => {\n\n\t\t\t\tconst hash = hash_key(piece);\n\t\t\t\tif( hash ){\n\t\t\t\t\tif( this.options[piece] ){\n\t\t\t\t\t\tself.addItem(piece);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tself.createItem(piece);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}, 0);\n\n\t}\n\n\t/**\n\t * Triggered on <input> keypress.\n\t *\n\t */\n\tonKeyPress(e:KeyboardEvent):void {\n\t\tvar self = this;\n\t\tif(self.isLocked){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\tif (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n\t\t\tself.createItem();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keydown.\n\t *\n\t */\n\tonKeyDown(e:KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tself.ignoreHover = true;\n\n\t\tif (self.isLocked) {\n\t\t\tif (e.keyCode !== constants.KEY_TAB) {\n\t\t\t\tpreventDefault(e);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (e.keyCode) {\n\n\t\t\t// ctrl+A: select all\n\t\t\tcase constants.KEY_A:\n\t\t\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\t\t\tif( self.control_input.value == '' ){\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t\tself.selectAll();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t// esc: close dropdown\n\t\t\tcase constants.KEY_ESC:\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tpreventDefault(e,true);\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\n\t\t\t// down: open dropdown or move selection down\n\t\t\tcase constants.KEY_DOWN:\n\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\tself.open();\n\t\t\t\t} else if (self.activeOption) {\n\t\t\t\t\tlet next = self.getAdjacent(self.activeOption, 1);\n\t\t\t\t\tif (next) self.setActiveOption(next);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// up: move selection up\n\t\t\tcase constants.KEY_UP:\n\t\t\t\tif (self.activeOption) {\n\t\t\t\t\tlet prev = self.getAdjacent(self.activeOption, -1);\n\t\t\t\t\tif (prev) self.setActiveOption(prev);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// return: select active option\n\t\t\tcase constants.KEY_RETURN:\n\t\t\t\tif( self.canSelect(self.activeOption) ){\n\t\t\t\t\tself.onOptionSelect(e,self.activeOption!);\n\t\t\t\t\tpreventDefault(e);\n\n\t\t\t\t// if the option_create=null, the dropdown might be closed\n\t\t\t\t}else if (self.settings.create && self.createItem()) {\n\t\t\t\t\tpreventDefault(e);\n\n\t\t\t\t// don't submit form when searching for a value\n\t\t\t\t}else if( document.activeElement == self.control_input && self.isOpen ){\n\t\t\t\t\tpreventDefault(e);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\n\t\t\t// left: modifiy item selection to the left\n\t\t\tcase constants.KEY_LEFT:\n\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\treturn;\n\n\t\t\t// right: modifiy item selection to the right\n\t\t\tcase constants.KEY_RIGHT:\n\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\treturn;\n\n\t\t\t// tab: select active option and/or create item\n\t\t\tcase constants.KEY_TAB:\n\n\t\t\t\tif( self.settings.selectOnTab ){\n\t\t\t\t\tif( self.canSelect(self.activeOption) ){\n\t\t\t\t\t\tself.onOptionSelect(e,self.activeOption!);\n\n\t\t\t\t\t\t// prevent default [tab] behaviour of jump to the next field\n\t\t\t\t\t\t// if select isFull, then the dropdown won't be open and [tab] will work normally\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t}\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\n\t\t\t// delete|backspace: delete items\n\t\t\tcase constants.KEY_BACKSPACE:\n\t\t\tcase constants.KEY_DELETE:\n\t\t\t\tself.deleteSelection(e);\n\t\t\t\treturn;\n\t\t}\n\n\t\t// don't enter text in the control_input when active items are selected\n\t\tif( self.isInputHidden && !isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\tpreventDefault(e);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keyup.\n\t *\n\t */\n\tonInput(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif( self.isLocked ){\n\t\t\treturn;\n\t\t}\n\n\t\tvar value = self.inputValue();\n\t\tif (self.lastValue !== value) {\n\t\t\tself.lastValue = value;\n\n\t\t\tif( self.settings.shouldLoad.call(self,value) ){\n\t\t\t\tself.load(value);\n\t\t\t}\n\n\t\t\tself.refreshOptions();\n\t\t\tself.trigger('type', value);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the user rolls over\n\t * an option in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionHover( evt:MouseEvent|KeyboardEvent, option:HTMLElement ):void{\n\t\tif( this.ignoreHover ) return;\n\t\tthis.setActiveOption(option, false);\n\t}\n\n\t/**\n\t * Triggered on <input> focus.\n\t *\n\t */\n\tonFocus(e?:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\t\tvar wasFocused = self.isFocused;\n\n\t\tif (self.isDisabled) {\n\t\t\tself.blur();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\tif (self.ignoreFocus) return;\n\t\tself.isFocused = true;\n\t\tif( self.settings.preload === 'focus' ) self.preload();\n\n\t\tif (!wasFocused) self.trigger('focus');\n\n\t\tif (!self.activeItems.length) {\n\t\t\tself.showInput();\n\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t}\n\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Triggered on <input> blur.\n\t *\n\t */\n\tonBlur(e?:FocusEvent):void {\n\n\t\tif( document.hasFocus() === false ) return;\n\n\t\tvar self = this;\n\t\tif (!self.isFocused) return;\n\t\tself.isFocused = false;\n\t\tself.ignoreFocus = false;\n\n\t\tvar deactivate = () => {\n\t\t\tself.close();\n\t\t\tself.setActiveItem();\n\t\t\tself.setCaret(self.items.length);\n\t\t\tself.trigger('blur');\n\t\t};\n\n\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\tself.createItem(null, deactivate);\n\t\t} else {\n\t\t\tdeactivate();\n\t\t}\n\t}\n\n\n\t/**\n\t * Triggered when the user clicks on an option\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionSelect( evt:MouseEvent|KeyboardEvent, option:HTMLElement ){\n\t\tvar value, self = this;\n\n\n\t\t// should not be possible to trigger a option under a disabled optgroup\n\t\tif( option.parentElement && option.parentElement.matches('[data-disabled]') ){\n\t\t\treturn;\n\t\t}\n\n\n\t\tif( option.classList.contains('create') ){\n\t\t\tself.createItem(null, () => {\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tvalue = option.dataset.value;\n\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.addItem(value);\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( !self.settings.hideSelected && evt.type && /click/.test(evt.type) ){\n\t\t\t\t\tself.setActiveOption(option);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return true if the given option can be selected\n\t *\n\t */\n\tcanSelect(option:HTMLElement|null):boolean{\n\n\t\tif( this.isOpen && option && this.dropdown_content.contains(option) ) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Triggered when the user clicks on an item\n\t * that has been selected.\n\t *\n\t */\n\tonItemSelect( evt?:MouseEvent, item?:TomItem ):boolean{\n\t\tvar self = this;\n\n\t\tif( !self.isLocked && self.settings.mode === 'multi' ){\n\t\t\tpreventDefault(evt);\n\t\t\tself.setActiveItem(item, evt);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Determines whether or not to invoke\n\t * the user-provided option provider / loader\n\t *\n\t * Note, there is a subtle difference between\n\t * this.canLoad() and this.settings.shouldLoad();\n\t *\n\t *\t- settings.shouldLoad() is a user-input validator.\n\t *\tWhen false is returned, the not_loading template\n\t *\twill be added to the dropdown\n\t *\n\t *\t- canLoad() is lower level validator that checks\n\t * \tthe Tom Select instance. There is no inherent user\n\t *\tfeedback when canLoad returns false\n\t *\n\t */\n\tcanLoad(value:string):boolean{\n\n\t\tif( !this.settings.load ) return false;\n\t\tif( this.loadedSearches.hasOwnProperty(value) ) return false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Invokes the user-provided option provider / loader.\n\t *\n\t */\n\tload(value:string):void {\n\t\tconst self = this;\n\n\t\tif( !self.canLoad(value) ) return;\n\n\t\taddClasses(self.wrapper,self.settings.loadingClass);\n\t\tself.loading++;\n\n\t\tconst callback = self.loadCallback.bind(self);\n\t\tself.settings.load.call(self, value, callback);\n\t}\n\n\t/**\n\t * Invoked by the user-provided option provider\n\t *\n\t */\n\tloadCallback( options:TomOption[], optgroups:TomOption[] ):void{\n\t\tconst self = this;\n\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\tself.lastQuery = null;\n\n\t\tself.clearActiveOption(); // when new results load, focus should be on first option\n\t\tself.setupOptions(options,optgroups);\n\n\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\n\t\tif (!self.loading) {\n\t\t\tremoveClasses(self.wrapper,self.settings.loadingClass);\n\t\t}\n\n\t\tself.trigger('load', options, optgroups);\n\t}\n\n\tpreload():void{\n\t\tvar classList = this.wrapper.classList;\n\t\tif( classList.contains('preloaded') ) return;\n\t\tclassList.add('preloaded');\n\t\tthis.load('');\n\t}\n\n\n\t/**\n\t * Sets the input field of the control to the specified value.\n\t *\n\t */\n\tsetTextboxValue(value:string = '') {\n\t\tvar input = this.control_input;\n\t\tvar changed = input.value !== value;\n\t\tif (changed) {\n\t\t\tinput.value = value;\n\t\t\ttriggerEvent(input,'update');\n\t\t\tthis.lastValue = value;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the value of the control. If multiple items\n\t * can be selected (e.g. <select multiple>), this returns\n\t * an array. If only one item can be selected, this\n\t * returns a string.\n\t *\n\t */\n\tgetValue():string|string[] {\n\n\t\tif( this.is_select_tag && this.input.hasAttribute('multiple')) {\n\t\t\treturn this.items;\n\t\t}\n\n\t\treturn this.items.join(this.settings.delimiter);\n\t}\n\n\t/**\n\t * Resets the selected items to the given value.\n\t *\n\t */\n\tsetValue( value:string|string[], silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change'];\n\n\t\tdebounce_events(this, events,() => {\n\t\t\tthis.clear(silent);\n\t\t\tthis.addItems(value, silent);\n\t\t});\n\t}\n\n\n\t/**\n\t * Resets the number of max items to the given value\n\t *\n\t */\n\tsetMaxItems(value:null|number){\n\t\tif(value === 0) value = null; //reset to unlimited items.\n\t\tthis.settings.maxItems = value;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Sets the selected item.\n\t *\n\t */\n\tsetActiveItem( item?:TomItem, e?:MouseEvent|KeyboardEvent ){\n\t\tvar self = this;\n\t\tvar eventName;\n\t\tvar i, begin, end, swap;\n\t\tvar last;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\t// clear the active selection\n\t\tif( !item ){\n\t\t\tself.clearActiveItems();\n\t\t\tif (self.isFocused) {\n\t\t\t\tself.showInput();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// modify selection\n\t\teventName = e && e.type.toLowerCase();\n\n\t\tif (eventName === 'click' && isKeyDown('shiftKey',e) && self.activeItems.length) {\n\t\t\tlast\t= self.getLastActive();\n\t\t\tbegin\t= Array.prototype.indexOf.call(self.control.children, last);\n\t\t\tend\t\t= Array.prototype.indexOf.call(self.control.children, item);\n\n\t\t\tif (begin > end) {\n\t\t\t\tswap  = begin;\n\t\t\t\tbegin = end;\n\t\t\t\tend   = swap;\n\t\t\t}\n\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\titem = self.control.children[i] as TomItem;\n\t\t\t\tif (self.activeItems.indexOf(item) === -1) {\n\t\t\t\t\tself.setActiveItemClass(item);\n\t\t\t\t}\n\t\t\t}\n\t\t\tpreventDefault(e);\n\t\t} else if ((eventName === 'click' && isKeyDown(constants.KEY_SHORTCUT,e) ) || (eventName === 'keydown' && isKeyDown('shiftKey',e))) {\n\t\t\tif( item.classList.contains('active') ){\n\t\t\t\tself.removeActiveItem( item );\n\t\t\t} else {\n\t\t\t\tself.setActiveItemClass(item);\n\t\t\t}\n\t\t} else {\n\t\t\tself.clearActiveItems();\n\t\t\tself.setActiveItemClass(item);\n\t\t}\n\n\t\t// ensure control has focus\n\t\tself.hideInput();\n\t\tif (!self.isFocused) {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Set the active and last-active classes\n\t *\n\t */\n\tsetActiveItemClass( item:TomItem ){\n\t\tconst self = this;\n\t\tconst last_active = self.control.querySelector('.last-active');\n\t\tif( last_active ) removeClasses(last_active as HTMLElement,'last-active');\n\n\t\taddClasses(item,'active last-active');\n\t\tself.trigger('item_select', item);\n\t\tif( self.activeItems.indexOf(item) == -1 ){\n\t\t\tself.activeItems.push( item );\n\t\t}\n\t}\n\n\t/**\n\t * Remove active item\n\t *\n\t */\n\tremoveActiveItem( item:TomItem ){\n\t\tvar idx = this.activeItems.indexOf(item);\n\t\tthis.activeItems.splice(idx, 1);\n\t\tremoveClasses(item,'active');\n\t}\n\n\t/**\n\t * Clears all the active items\n\t *\n\t */\n\tclearActiveItems(){\n\t\tremoveClasses(this.activeItems,'active');\n\t\tthis.activeItems = [];\n\t}\n\n\t/**\n\t * Sets the selected item in the dropdown menu\n\t * of available options.\n\t *\n\t */\n\tsetActiveOption( option:null|HTMLElement,scroll:boolean=true ):void{\n\n\t\tif( option === this.activeOption ){\n\t\t\treturn;\n\t\t}\n\n\t\tthis.clearActiveOption();\n\t\tif( !option ) return;\n\n\t\tthis.activeOption = option;\n\t\tsetAttr(this.focus_node,{'aria-activedescendant':option.getAttribute('id')});\n\t\tsetAttr(option,{'aria-selected':'true'});\n\t\taddClasses(option,'active');\n\t\tif( scroll ) this.scrollToOption(option);\n\t}\n\n\t/**\n\t * Sets the dropdown_content scrollTop to display the option\n\t *\n\t */\n\tscrollToOption( option:null|HTMLElement, behavior?:string ):void{\n\n\t\tif( !option ) return;\n\n\t\tconst content\t\t= this.dropdown_content;\n\t\tconst height_menu\t= content.clientHeight;\n\t\tconst scrollTop\t\t= content.scrollTop || 0;\n\t\tconst height_item\t= option.offsetHeight;\n\t\tconst y\t\t\t\t= option.getBoundingClientRect().top - content.getBoundingClientRect().top + scrollTop;\n\n\t\tif (y + height_item > height_menu + scrollTop) {\n\t\t\tthis.scroll(y - height_menu + height_item, behavior);\n\n\t\t} else if (y < scrollTop) {\n\t\t\tthis.scroll(y, behavior);\n\t\t}\n\t}\n\n\t/**\n\t * Scroll the dropdown to the given position\n\t *\n\t */\n\tscroll( scrollTop:number, behavior?:string ):void{\n\t\tconst content = this.dropdown_content;\n\t\tif( behavior ){\n\t\t\tcontent.style.scrollBehavior = behavior;\n\t\t}\n\t\tcontent.scrollTop = scrollTop;\n\t\tcontent.style.scrollBehavior = '';\n\t}\n\n\t/**\n\t * Clears the active option\n\t *\n\t */\n\tclearActiveOption(){\n\t\tif( this.activeOption ){\n\t\t\tremoveClasses(this.activeOption,'active');\n\t\t\tsetAttr(this.activeOption,{'aria-selected':null});\n\t\t}\n\t\tthis.activeOption = null;\n\t\tsetAttr(this.focus_node,{'aria-activedescendant':null});\n\t}\n\n\n\t/**\n\t * Selects all items (CTRL + A).\n\t */\n\tselectAll() {\n\t\tconst self = this;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\tconst activeItems = self.controlChildren();\n\n\t\tif( !activeItems.length ) return;\n\n\t\tself.hideInput();\n\t\tself.close();\n\n\t\tself.activeItems = activeItems;\n\t\titerate( activeItems, (item:TomItem) => {\n\t\t\tself.setActiveItemClass(item);\n\t\t});\n\n\t}\n\n\t/**\n\t * Determines if the control_input should be in a hidden or visible state\n\t *\n\t */\n\tinputState(){\n\t\tvar self = this;\n\n\t\tif( !self.control.contains(self.control_input) ) return;\n\n\t\tsetAttr(self.control_input,{placeholder:self.settings.placeholder});\n\n\t\tif( self.activeItems.length > 0 || (!self.isFocused && self.settings.hidePlaceholder && self.items.length > 0) ){\n\t\t\tself.setTextboxValue();\n\t\t\tself.isInputHidden = true;\n\n\t\t}else{\n\n\t\t\tif( self.settings.hidePlaceholder && self.items.length > 0 ){\n\t\t\t\tsetAttr(self.control_input,{placeholder:''});\n\t\t\t}\n\t\t\tself.isInputHidden = false;\n\t\t}\n\n\t\tself.wrapper.classList.toggle('input-hidden', self.isInputHidden );\n\t}\n\n\t/**\n\t * Hides the input element out of view, while\n\t * retaining its focus.\n\t * @deprecated 1.3\n\t */\n\thideInput() {\n\t\tthis.inputState();\n\t}\n\n\t/**\n\t * Restores input visibility.\n\t * @deprecated 1.3\n\t */\n\tshowInput() {\n\t\tthis.inputState();\n\t}\n\n\t/**\n\t * Get the input value\n\t */\n\tinputValue(){\n\t\treturn this.control_input.value.trim();\n\t}\n\n\t/**\n\t * Gives the control focus.\n\t */\n\tfocus() {\n\t\tvar self = this;\n\t\tif (self.isDisabled) return;\n\n\t\tself.ignoreFocus = true;\n\n\t\tif( self.control_input.offsetWidth ){\n\t\t\tself.control_input.focus();\n\t\t}else{\n\t\t\tself.focus_node.focus();\n\t\t}\n\n\t\tsetTimeout(() => {\n\t\t\tself.ignoreFocus = false;\n\t\t\tself.onFocus();\n\t\t}, 0);\n\t}\n\n\t/**\n\t * Forces the control out of focus.\n\t *\n\t */\n\tblur():void {\n\t\tthis.focus_node.blur();\n\t\tthis.onBlur();\n\t}\n\n\t/**\n\t * Returns a function that scores an object\n\t * to show how good of a match it is to the\n\t * provided query.\n\t *\n\t * @return {function}\n\t */\n\tgetScoreFunction(query:string) {\n\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t}\n\n\t/**\n\t * Returns search options for sifter (the system\n\t * for scoring and sorting results).\n\t *\n\t * @see https://github.com/orchidjs/sifter.js\n\t * @return {object}\n\t */\n\tgetSearchOptions() {\n\t\tvar settings = this.settings;\n\t\tvar sort = settings.sortField;\n\t\tif (typeof settings.sortField === 'string') {\n\t\t\tsort = [{field: settings.sortField}];\n\t\t}\n\n\t\treturn {\n\t\t\tfields      : settings.searchField,\n\t\t\tconjunction : settings.searchConjunction,\n\t\t\tsort        : sort,\n\t\t\tnesting     : settings.nesting\n\t\t};\n\t}\n\n\t/**\n\t * Searches through available options and returns\n\t * a sorted array of matches.\n\t *\n\t */\n\tsearch(query:string) : ReturnType<Sifter['search']>{\n\t\tvar result, calculateScore;\n\t\tvar self     = this;\n\t\tvar options  = this.getSearchOptions();\n\n\t\t// validate user-provided result scoring function\n\t\tif ( self.settings.score ){\n\t\t\tcalculateScore = self.settings.score.call(self,query);\n\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\tthrow new Error('Tom Select \"score\" setting must be a function that returns a function');\n\t\t\t}\n\t\t}\n\n\t\t// perform search\n\t\tif (query !== self.lastQuery) {\n\t\t\tself.lastQuery\t\t\t= query;\n\t\t\tresult\t\t\t\t\t= self.sifter.search(query, Object.assign(options, {score: calculateScore}));\n\t\t\tself.currentResults\t\t= result;\n\t\t} else {\n\t\t\tresult\t\t\t\t\t= Object.assign( {}, self.currentResults);\n\t\t}\n\n\t\t// filter out selected items\n\t\tif( self.settings.hideSelected ){\n\t\t\tresult.items = result.items.filter((item) => {\n\t\t\t\tlet hashed = hash_key(item.id);\n\t\t\t\treturn !(hashed && self.items.indexOf(hashed) !== -1 );\n\t\t\t});\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Refreshes the list of available options shown\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\trefreshOptions( triggerDropdown:boolean = true ){\n\t\tvar i, j, k, n, optgroup, optgroups, html:DocumentFragment, has_create_option, active_group;\n\t\tvar create;\n\t\tconst groups: {[key:string]:DocumentFragment} = {};\n\n\t\tconst groups_order:string[]\t= [];\n\t\tvar self\t\t\t\t\t= this;\n\t\tvar query\t\t\t\t\t= self.inputValue();\n\t\tconst same_query\t\t\t= query === self.lastQuery || (query == '' && self.lastQuery == null);\n\t\tvar results\t\t\t\t\t= self.search(query);\n\t\tvar active_option\t\t\t= null;\n\t\tvar show_dropdown\t\t\t= self.settings.shouldOpen || false;\n\t\tvar dropdown_content\t\t= self.dropdown_content;\n\n\n\t\tif( same_query ){\n\t\t\tactive_option\t\t\t= self.activeOption;\n\n\t\t\tif( active_option ){\n\t\t\t\tactive_group = active_option.closest('[data-group]') as HTMLElement;\n\t\t\t}\n\t\t}\n\n\t\t// build markup\n\t\tn = results.items.length;\n\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t}\n\n\t\tif( n > 0 ){\n\t\t\tshow_dropdown = true;\n\t\t}\n\n\t\t// render and group available options individually\n\t\tfor (i = 0; i < n; i++) {\n\n\t\t\t// get option dom element\n\t\t\tlet item\t\t\t= results.items[i];\n\t\t\tif( !item ) continue;\n\n\t\t\tlet opt_value\t\t= item.id;\n\t\t\tlet option\t\t\t= self.options[opt_value];\n\n\t\t\tif( option === undefined ) continue;\n\n\t\t\tlet opt_hash\t\t= get_hash(opt_value);\n\t\t\tlet option_el\t\t= self.getOption(opt_hash,true) as HTMLElement;\n\n\t\t\t// toggle 'selected' class\n\t\t\tif( !self.settings.hideSelected ){\n\t\t\t\toption_el.classList.toggle('selected', self.items.includes(opt_hash) );\n\t\t\t}\n\n\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\toptgroups   = Array.isArray(optgroup) ? optgroup : [optgroup];\n\n\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\toptgroup = optgroups[j];\n\t\t\t\tif (!self.optgroups.hasOwnProperty(optgroup)) {\n\t\t\t\t\toptgroup = '';\n\t\t\t\t}\n\n\t\t\t\tlet group_fragment = groups[optgroup];\n\t\t\t\tif( group_fragment === undefined ){\n\t\t\t\t\tgroup_fragment = document.createDocumentFragment();\n\t\t\t\t\tgroups_order.push(optgroup);\n\t\t\t\t}\n\n\t\t\t\t// nodes can only have one parent, so if the option is in mutple groups, we need a clone\n\t\t\t\tif( j > 0 ){\n\t\t\t\t\toption_el = option_el.cloneNode(true) as HTMLElement;\n\t\t\t\t\tsetAttr(option_el,{id: option.$id+'-clone-'+j,'aria-selected':null});\n\t\t\t\t\toption_el.classList.add('ts-cloned');\n\t\t\t\t\tremoveClasses(option_el,'active');\n\n\n\t\t\t\t\t// make sure we keep the activeOption in the same group\n\t\t\t\t\tif( self.activeOption && self.activeOption.dataset.value == opt_value ){\n\t\t\t\t\t\tif( active_group && active_group.dataset.group === optgroup.toString() ){\n\t\t\t\t\t\t\tactive_option = option_el;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tgroup_fragment.appendChild(option_el);\n\t\t\t\tgroups[optgroup] = group_fragment;\n\t\t\t}\n\t\t}\n\n\t\t// sort optgroups\n\t\tif( self.settings.lockOptgroupOrder ){\n\t\t\tgroups_order.sort((a, b) => {\n\t\t\t\tconst grp_a\t\t= self.optgroups[a];\n\t\t\t\tconst grp_b\t\t= self.optgroups[b];\n\t\t\t\tconst a_order\t= grp_a && grp_a.$order || 0;\n\t\t\t\tconst b_order\t= grp_b && grp_b.$order || 0;\n\t\t\t\treturn a_order - b_order;\n\t\t\t});\n\t\t}\n\n\t\t// render optgroup headers & join groups\n\t\thtml = document.createDocumentFragment();\n\t\titerate( groups_order, (optgroup:string) => {\n\n\t\t\tlet group_fragment = groups[optgroup];\n\n\t\t\tif( !group_fragment || !group_fragment.children.length ) return;\n\n\t\t\tlet group_heading = self.optgroups[optgroup];\n\n\t\t\tif( group_heading !== undefined ){\n\n\t\t\t\tlet group_options = document.createDocumentFragment();\n\t\t\t\tlet header = self.render('optgroup_header', group_heading);\n\t\t\t\tappend( group_options, header );\n\t\t\t\tappend( group_options, group_fragment );\n\n\t\t\t\tlet group_html = self.render('optgroup', {group:group_heading,options:group_options} );\n\n\t\t\t\tappend( html, group_html );\n\n\t\t\t} else {\n\t\t\t\tappend( html, group_fragment );\n\t\t\t}\n\t\t});\n\n\t\tdropdown_content.innerHTML = '';\n\t\tappend( dropdown_content, html );\n\n\t\t// highlight matching terms inline\n\t\tif (self.settings.highlight) {\n\t\t\tremoveHighlight( dropdown_content );\n\t\t\tif (results.query.length && results.tokens.length) {\n\t\t\t\titerate( results.tokens, (tok) => {\n\t\t\t\t\thighlight( dropdown_content, tok.regex);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// helper method for adding templates to dropdown\n\t\tvar add_template = (template:TomTemplateNames) => {\n\t\t\tlet content = self.render(template,{input:query});\n\t\t\tif( content ){\n\t\t\t\tshow_dropdown = true;\n\t\t\t\tdropdown_content.insertBefore(content, dropdown_content.firstChild);\n\t\t\t}\n\t\t\treturn content;\n\t\t};\n\n\n\t\t// add loading message\n\t\tif( self.loading ){\n\t\t\tadd_template('loading');\n\n\t\t// invalid query\n\t\t}else if( !self.settings.shouldLoad.call(self,query) ){\n\t\t\tadd_template('not_loading');\n\n\t\t// add no_results message\n\t\t}else if( results.items.length === 0 ){\n\t\t\tadd_template('no_results');\n\n\t\t}\n\n\n\n\t\t// add create option\n\t\thas_create_option = self.canCreate(query);\n\t\tif (has_create_option) {\n\t\t\tcreate = add_template('option_create');\n\t\t}\n\n\n\t\t// activate\n\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\tif( show_dropdown ){\n\n\t\t\tif (results.items.length > 0) {\n\n\t\t\t\tif( !active_option && self.settings.mode === 'single' && self.items[0] != undefined ){\n\t\t\t\t\tactive_option = self.getOption(self.items[0]);\n\t\t\t\t}\n\n\t\t\t\tif( !dropdown_content.contains(active_option)  ){\n\n\t\t\t\t\tlet active_index = 0;\n\t\t\t\t\tif( create && !self.settings.addPrecedence ){\n\t\t\t\t\t\tactive_index = 1;\n\t\t\t\t\t}\n\t\t\t\t\tactive_option = self.selectable()[active_index] as HTMLElement;\n\t\t\t\t}\n\n\t\t\t}else if( create ){\n\t\t\t\tactive_option = create;\n\t\t\t}\n\n\t\t\tif( triggerDropdown && !self.isOpen ){\n\t\t\t\tself.open();\n\t\t\t\tself.scrollToOption(active_option,'auto');\n\t\t\t}\n\t\t\tself.setActiveOption(active_option);\n\n\t\t}else{\n\t\t\tself.clearActiveOption();\n\t\t\tif( triggerDropdown && self.isOpen ){\n\t\t\t\tself.close(false); // if create_option=null, we want the dropdown to close but not reset the textbox value\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return list of selectable options\n\t *\n\t */\n\tselectable():NodeList{\n\t\treturn this.dropdown_content.querySelectorAll('[data-selectable]');\n\t}\n\n\n\n\t/**\n\t * Adds an available option. If it already exists,\n\t * nothing will happen. Note: this does not refresh\n\t * the options list dropdown (use `refreshOptions`\n\t * for that).\n\t *\n\t * Usage:\n\t *\n\t *   this.addOption(data)\n\t *\n\t */\n\taddOption( data:TomOption, user_created = false ):false|string {\n\t\tconst self = this;\n\n\t\t// @deprecated 1.7.7\n\t\t// use addOptions( array, user_created ) for adding multiple options\n\t\tif( Array.isArray(data) ){\n\t\t\tself.addOptions( data, user_created);\n\t\t\treturn false;\n\t\t}\n\n\t\tconst key = hash_key(data[self.settings.valueField]);\n\t\tif( key === null || self.options.hasOwnProperty(key) ){\n\t\t\treturn false;\n\t\t}\n\n\t\tdata.$order\t\t\t= data.$order || ++self.order;\n\t\tdata.$id\t\t\t= self.inputId + '-opt-' + data.$order;\n\t\tself.options[key]\t= data;\n\t\tself.lastQuery\t\t= null;\n\n\t\tif( user_created ){\n\t\t\tself.userOptions[key] = user_created;\n\t\t\tself.trigger('option_add', key, data);\n\t\t}\n\n\t\treturn key;\n\t}\n\n\t/**\n\t * Add multiple options\n\t *\n\t */\n\taddOptions( data:TomOption[], user_created = false ):void{\n\t\titerate( data, (dat:TomOption) => {\n\t\t\tthis.addOption(dat, user_created);\n\t\t});\n\t}\n\n\t/**\n\t * @deprecated 1.7.7\n\t */\n\tregisterOption( data:TomOption ):false|string {\n\t\treturn this.addOption(data);\n\t}\n\n\t/**\n\t * Registers an option group to the pool of option groups.\n\t *\n\t * @return {boolean|string}\n\t */\n\tregisterOptionGroup(data:TomOption) {\n\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\n\n\t\tif ( key === null ) return false;\n\n\t\tdata.$order = data.$order || ++this.order;\n\t\tthis.optgroups[key] = data;\n\t\treturn key;\n\t}\n\n\t/**\n\t * Registers a new optgroup for options\n\t * to be bucketed into.\n\t *\n\t */\n\taddOptionGroup(id:string, data:TomOption) {\n\t\tvar hashed_id;\n\t\tdata[this.settings.optgroupValueField] = id;\n\n\t\tif( hashed_id = this.registerOptionGroup(data) ){\n\t\t\tthis.trigger('optgroup_add', hashed_id, data);\n\t\t}\n\t}\n\n\t/**\n\t * Removes an existing option group.\n\t *\n\t */\n\tremoveOptionGroup(id:string) {\n\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\tdelete this.optgroups[id];\n\t\t\tthis.clearCache();\n\t\t\tthis.trigger('optgroup_remove', id);\n\t\t}\n\t}\n\n\t/**\n\t * Clears all existing option groups.\n\t */\n\tclearOptionGroups() {\n\t\tthis.optgroups = {};\n\t\tthis.clearCache();\n\t\tthis.trigger('optgroup_clear');\n\t}\n\n\t/**\n\t * Updates an option available for selection. If\n\t * it is visible in the selected items or options\n\t * dropdown, it will be re-rendered automatically.\n\t *\n\t */\n\tupdateOption(value:string, data:TomOption) {\n\t\tconst self = this;\n\t\tvar item_new;\n\t\tvar index_item;\n\n\t\tconst value_old\t\t= hash_key(value);\n\t\tconst value_new\t\t= hash_key(data[self.settings.valueField]);\n\n\t\t// sanity checks\n\t\tif( value_old === null ) return;\n\n\t\tconst data_old\t\t= self.options[value_old];\n\n\t\tif( data_old == undefined ) return;\n\t\tif( typeof value_new !== 'string' ) throw new Error('Value must be set in option data');\n\n\n\t\tconst option\t\t= self.getOption(value_old);\n\t\tconst item\t\t\t= self.getItem(value_old);\n\n\n\t\tdata.$order = data.$order || data_old.$order;\n\t\tdelete self.options[value_old];\n\n\t\t// invalidate render cache\n\t\t// don't remove existing node yet, we'll remove it after replacing it\n\t\tself.uncacheValue(value_new);\n\n\t\tself.options[value_new] = data;\n\n\t\t// update the option if it's in the dropdown\n\t\tif( option ){\n\t\t\tif( self.dropdown_content.contains(option) ){\n\n\t\t\t\tconst option_new\t= self._render('option', data);\n\t\t\t\treplaceNode(option, option_new);\n\n\t\t\t\tif( self.activeOption === option ){\n\t\t\t\t\tself.setActiveOption(option_new);\n\t\t\t\t}\n\t\t\t}\n\t\t\toption.remove();\n\t\t}\n\n\t\t// update the item if we have one\n\t\tif( item ){\n\t\t\tindex_item = self.items.indexOf(value_old);\n\t\t\tif (index_item !== -1) {\n\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t}\n\n\t\t\titem_new\t= self._render('item', data);\n\n\t\t\tif( item.classList.contains('active') ) addClasses(item_new,'active');\n\n\t\t\treplaceNode( item, item_new);\n\t\t}\n\n\t\t// invalidate last query because we might have updated the sortField\n\t\tself.lastQuery = null;\n\t}\n\n\t/**\n\t * Removes a single option.\n\t *\n\t */\n\tremoveOption(value:string, silent?:boolean):void {\n\t\tconst self = this;\n\t\tvalue = get_hash(value);\n\n\t\tself.uncacheValue(value);\n\n\t\tdelete self.userOptions[value];\n\t\tdelete self.options[value];\n\t\tself.lastQuery = null;\n\t\tself.trigger('option_remove', value);\n\t\tself.removeItem(value, silent);\n\t}\n\n\t/**\n\t * Clears all options.\n\t */\n\tclearOptions(filter?:TomClearFilter ) {\n\n\t\tconst boundFilter = (filter || this.clearFilter).bind(this);\n\n\t\tthis.loadedSearches\t\t= {};\n\t\tthis.userOptions\t\t= {};\n\t\tthis.clearCache();\n\n\t\tconst selected:TomOptions\t= {};\n\t\titerate(this.options,(option:TomOption,key:string)=>{\n\t\t\tif( boundFilter(option,key as string) ){\n\t\t\t\tselected[key] = option;\n\t\t\t}\n\t\t});\n\n\t\tthis.options = this.sifter.items = selected;\n\t\tthis.lastQuery = null;\n\t\tthis.trigger('option_clear');\n\t}\n\n\t/**\n\t * Used by clearOptions() to decide whether or not an option should be removed\n\t * Return true to keep an option, false to remove\n\t *\n\t */\n\tclearFilter(option:TomOption,value:string){\n\t\tif( this.items.indexOf(value) >= 0 ){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns the dom element of the option\n\t * matching the given value.\n\t *\n\t */\n\tgetOption(value:undefined|null|boolean|string|number, create:boolean=false):null|HTMLElement {\n\n\t\tconst hashed = hash_key(value);\n\t\tif( hashed === null ) return null;\n\n\t\tconst option = this.options[hashed];\n\t\tif( option != undefined ){\n\n\t\t\tif( option.$div ){\n\t\t\t\treturn option.$div;\n\t\t\t}\n\n\t\t\tif( create ){\n\t\t\t\treturn this._render('option', option);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the dom element of the next or previous dom element of the same type\n\t * Note: adjacent options may not be adjacent DOM elements (optgroups)\n\t *\n\t */\n\tgetAdjacent( option:null|HTMLElement, direction:number, type:string = 'option' ) : HTMLElement|null{\n\t\tvar self = this, all;\n\n\t\tif( !option ){\n\t\t\treturn null;\n\t\t}\n\n\t\tif( type == 'item' ){\n\t\t\tall\t\t\t= self.controlChildren();\n\t\t}else{\n\t\t\tall\t\t\t= self.dropdown_content.querySelectorAll('[data-selectable]');\n\t\t}\n\n\t\tfor( let i = 0; i < all.length; i++ ){\n\t\t\tif( all[i] != option ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( direction > 0 ){\n\t\t\t\treturn all[i+1] as HTMLElement;\n\t\t\t}\n\n\t\t\treturn all[i-1] as HTMLElement;\n\t\t}\n\t\treturn null;\n\t}\n\n\n\t/**\n\t * Returns the dom element of the item\n\t * matching the given value.\n\t *\n\t */\n\tgetItem(item:string|TomItem|null):null|TomItem {\n\n\t\tif( typeof item == 'object' ){\n\t\t\treturn item;\n\t\t}\n\n\t\tvar value = hash_key(item);\n\t\treturn value !== null\n\t\t\t? this.control.querySelector(`[data-value=\"${addSlashes(value)}\"]`)\n\t\t\t: null;\n\t}\n\n\t/**\n\t * \"Selects\" multiple items at once. Adds them to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItems( values:string|string[], silent?:boolean ):void{\n\t\tvar self = this;\n\n\t\tvar items = Array.isArray(values) ? values : [values];\n\t\titems = items.filter(x => self.items.indexOf(x) === -1);\n\t\tconst last_item = items[items.length - 1];\n\t\titems.forEach(item => {\n\t\t\tself.isPending = (item !== last_item);\n\t\t\tself.addItem(item, silent);\n\t\t});\n\t}\n\n\t/**\n\t * \"Selects\" an item. Adds it to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItem( value:string, silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change','dropdown_close'];\n\n\t\tdebounce_events(this, events, () => {\n\t\t\tvar item, wasFull;\n\t\t\tconst self = this;\n\t\t \tconst inputMode = self.settings.mode;\n\t\t\tconst hashed = hash_key(value);\n\n\t\t\tif( hashed && self.items.indexOf(hashed) !== -1 ){\n\n\t\t\t\tif( inputMode === 'single' ){\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( inputMode === 'single' || !self.settings.duplicates ){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hashed === null || !self.options.hasOwnProperty(hashed)) return;\n\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\n\t\t\titem = self._render('item', self.options[hashed]);\n\n\t\t\tif( self.control.contains(item) ){ // duplicates\n\t\t\t\titem = item.cloneNode(true) as HTMLElement;\n\t\t\t}\n\n\t\t\twasFull = self.isFull();\n\t\t\tself.items.splice(self.caretPos, 0, hashed);\n\t\t\tself.insertAtCaret(item);\n\n\t\t\tif (self.isSetup) {\n\n\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\tif( !self.isPending && self.settings.hideSelected ){\n\t\t\t\t\tlet option = self.getOption(hashed);\n\t\t\t\t\tlet next = self.getAdjacent(option, 1);\n\t\t\t\t\tif( next ){\n\t\t\t\t\t\tself.setActiveOption(next);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// refreshOptions after setActiveOption(),\n\t\t\t\t// otherwise setActiveOption() will be called by refreshOptions() with the wrong value\n\t\t\t\tif( !self.isPending && !self.settings.closeAfterSelect ){\n\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t}\n\n\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\tif( self.settings.closeAfterSelect != false && self.isFull() ){\n\t\t\t\t\tself.close();\n\t\t\t\t} else if (!self.isPending) {\n\t\t\t\t\tself.positionDropdown();\n\t\t\t\t}\n\n\t\t\t\tself.trigger('item_add', hashed, item);\n\n\t\t\t\tif (!self.isPending) {\n\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\tself.inputState();\n\t\t\t\tself.refreshState();\n\t\t\t}\n\n\t\t});\n\t}\n\n\t/**\n\t * Removes the selected item matching\n\t * the provided value.\n\t *\n\t */\n\tremoveItem( item:string|TomItem|null=null, silent?:boolean ){\n\t\tconst self\t\t= this;\n\t\titem\t\t\t= self.getItem(item);\n\n\t\tif( !item ) return;\n\n\t\tvar i,idx;\n\t\tconst value\t= item.dataset.value;\n\t\ti = nodeIndex(item);\n\n\t\titem.remove();\n\t\tif( item.classList.contains('active') ){\n\t\t\tidx = self.activeItems.indexOf(item);\n\t\t\tself.activeItems.splice(idx, 1);\n\t\t\tremoveClasses(item,'active');\n\t\t}\n\n\t\tself.items.splice(i, 1);\n\t\tself.lastQuery = null;\n\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\tself.removeOption(value, silent);\n\t\t}\n\n\t\tif (i < self.caretPos) {\n\t\t\tself.setCaret(self.caretPos - 1);\n\t\t}\n\n\t\tself.updateOriginalInput({silent: silent});\n\t\tself.refreshState();\n\t\tself.positionDropdown();\n\t\tself.trigger('item_remove', value, item);\n\n\t}\n\n\t/**\n\t * Invokes the `create` method provided in the\n\t * TomSelect options that should provide the data\n\t * for the new item, given the user input.\n\t *\n\t * Once this completes, it will be added\n\t * to the item list.\n\t *\n\t */\n\tcreateItem( input:null|string=null, callback:TomCreateCallback = ()=>{} ):boolean{\n\n\t\t// triggerDropdown parameter @deprecated 2.1.1\n\t\tif( arguments.length === 3 ){\n\t\t\tcallback = arguments[2];\n\t\t}\n\t\tif( typeof callback != 'function' ){\n\t\t\tcallback = () => {};\n\t\t}\n\n\t\tvar self  = this;\n\t\tvar caret = self.caretPos;\n\t\tvar output;\n\t\tinput = input || self.inputValue();\n\n\t\tif (!self.canCreate(input)) {\n\t\t\tcallback();\n\t\t\treturn false;\n\t\t}\n\n\t\tself.lock();\n\n\t\tvar created = false;\n\t\tvar create = (data?:boolean|TomOption) => {\n\t\t\tself.unlock();\n\n\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\tvar value = hash_key(data[self.settings.valueField]);\n\t\t\tif( typeof value !== 'string' ){\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tself.setTextboxValue();\n\t\t\tself.addOption(data,true);\n\t\t\tself.setCaret(caret);\n\t\t\tself.addItem(value);\n\t\t\tcallback(data);\n\t\t\tcreated = true;\n\t\t};\n\n\t\tif( typeof self.settings.create === 'function' ){\n\t\t\toutput = self.settings.create.call(this, input, create);\n\t\t}else{\n\t\t\toutput = {\n\t\t\t\t[self.settings.labelField]: input,\n\t\t\t\t[self.settings.valueField]: input,\n\t\t\t};\n\t\t}\n\n\t\tif( !created ){\n\t\t\tcreate(output);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Re-renders the selected item lists.\n\t */\n\trefreshItems() {\n\t\tvar self = this;\n\t\tself.lastQuery = null;\n\n\t\tif (self.isSetup) {\n\t\t\tself.addItems(self.items);\n\t\t}\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Updates all state-dependent attributes\n\t * and CSS classes.\n\t */\n\trefreshState() {\n\t\tconst self     = this;\n\n\t\tself.refreshValidityState();\n\n\t\tconst isFull\t= self.isFull();\n\t\tconst isLocked\t= self.isLocked;\n\n\t\tself.wrapper.classList.toggle('rtl',self.rtl);\n\n\n\t\tconst wrap_classList = self.wrapper.classList;\n\n\t\twrap_classList.toggle('focus', self.isFocused)\n\t\twrap_classList.toggle('disabled', self.isDisabled)\n\t\twrap_classList.toggle('required', self.isRequired)\n\t\twrap_classList.toggle('invalid', !self.isValid)\n\t\twrap_classList.toggle('locked', isLocked)\n\t\twrap_classList.toggle('full', isFull)\n\t\twrap_classList.toggle('input-active', self.isFocused && !self.isInputHidden)\n\t\twrap_classList.toggle('dropdown-active', self.isOpen)\n\t\twrap_classList.toggle('has-options', isEmptyObject(self.options) )\n\t\twrap_classList.toggle('has-items', self.items.length > 0);\n\n\t}\n\n\n\t/**\n\t * Update the `required` attribute of both input and control input.\n\t *\n\t * The `required` property needs to be activated on the control input\n\t * for the error to be displayed at the right place. `required` also\n\t * needs to be temporarily deactivated on the input since the input is\n\t * hidden and can't show errors.\n\t */\n\trefreshValidityState() {\n\t\tvar self = this;\n\n\t\tif( !self.input.validity ){\n\t\t\treturn;\n\t\t}\n\n\t\tself.isValid = self.input.validity.valid;\n\t\tself.isInvalid = !self.isValid;\n\t}\n\n\t/**\n\t * Determines whether or not more items can be added\n\t * to the control without exceeding the user-defined maximum.\n\t *\n\t * @returns {boolean}\n\t */\n\tisFull() {\n\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t}\n\n\t/**\n\t * Refreshes the original <select> or <input>\n\t * element to reflect the current state.\n\t *\n\t */\n\tupdateOriginalInput( opts:TomArgObject = {} ){\n\t\tconst self = this;\n\t\tvar option, label;\n\n\t\tconst empty_option = self.input.querySelector('option[value=\"\"]') as HTMLOptionElement;\n\n\t\tif( self.is_select_tag ){\n\n\t\t\tconst selected:HTMLOptionElement[]\t\t= [];\n\t\t\tconst has_selected:number\t\t\t\t= self.input.querySelectorAll('option:checked').length;\n\n\t\t\tfunction AddSelected(option_el:HTMLOptionElement|null, value:string, label:string):HTMLOptionElement{\n\n\t\t\t\tif( !option_el ){\n\t\t\t\t\toption_el = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>') as HTMLOptionElement;\n\t\t\t\t}\n\n\t\t\t\t// don't move empty option from top of list\n\t\t\t\t// fixes bug in firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1725293\n\t\t\t\tif( option_el != empty_option ){\n\t\t\t\t\tself.input.append(option_el);\n\t\t\t\t}\n\n\t\t\t\tselected.push(option_el);\n\n\t\t\t\t// marking empty option as selected can break validation\n\t\t\t\t// fixes https://github.com/orchidjs/tom-select/issues/303\n\t\t\t\tif( option_el != empty_option || has_selected > 0 ){\n\t\t\t\t\toption_el.selected = true;\n\t\t\t\t}\n\n\t\t\t\treturn option_el;\n\t\t\t}\n\n\t\t\t// unselect all selected options\n\t\t\tself.input.querySelectorAll('option:checked').forEach((option_el:Element) => {\n\t\t\t\t(<HTMLOptionElement>option_el).selected = false;\n\t\t\t});\n\n\n\t\t\t// nothing selected?\n\t\t\tif( self.items.length == 0 && self.settings.mode == 'single' ){\n\n\t\t\t\tAddSelected(empty_option, \"\", \"\");\n\n\t\t\t// order selected <option> tags for values in self.items\n\t\t\t}else{\n\n\t\t\t\tself.items.forEach((value)=>{\n\t\t\t\t\toption\t\t\t= self.options[value]!;\n\t\t\t\t\tlabel\t\t\t= option[self.settings.labelField] || '';\n\n\t\t\t\t\tif( selected.includes(option.$option) ){\n\t\t\t\t\t\tconst reuse_opt = self.input.querySelector(`option[value=\"${addSlashes(value)}\"]:not(:checked)`) as HTMLOptionElement;\n\t\t\t\t\t\tAddSelected(reuse_opt, value, label);\n\t\t\t\t\t}else{\n\t\t\t\t\t\toption.$option\t= AddSelected(option.$option, value, label);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t} else {\n\t\t\tself.input.value = self.getValue() as string;\n\t\t}\n\n\t\tif (self.isSetup) {\n\t\t\tif (!opts.silent) {\n\t\t\t\tself.trigger('change', self.getValue() );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Shows the autocomplete dropdown containing\n\t * the available options.\n\t */\n\topen() {\n\t\tvar self = this;\n\n\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\tself.isOpen = true;\n\t\tsetAttr(self.focus_node,{'aria-expanded': 'true'});\n\t\tself.refreshState();\n\t\tapplyCSS(self.dropdown,{visibility: 'hidden', display: 'block'});\n\t\tself.positionDropdown();\n\t\tapplyCSS(self.dropdown,{visibility: 'visible', display: 'block'});\n\t\tself.focus();\n\t\tself.trigger('dropdown_open', self.dropdown);\n\t}\n\n\t/**\n\t * Closes the autocomplete dropdown menu.\n\t */\n\tclose(setTextboxValue=true) {\n\t\tvar self = this;\n\t\tvar trigger = self.isOpen;\n\n\t\tif( setTextboxValue ){\n\n\t\t\t// before blur() to prevent form onchange event\n\t\t\tself.setTextboxValue();\n\n\t\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\tself.hideInput();\n\t\t\t}\n\t\t}\n\n\t\tself.isOpen = false;\n\t\tsetAttr(self.focus_node,{'aria-expanded': 'false'});\n\t\tapplyCSS(self.dropdown,{display: 'none'});\n\t\tif( self.settings.hideSelected ){\n\t\t\tself.clearActiveOption();\n\t\t}\n\t\tself.refreshState();\n\n\t\tif (trigger) self.trigger('dropdown_close', self.dropdown);\n\t}\n\n\t/**\n\t * Calculates and applies the appropriate\n\t * position of the dropdown if dropdownParent = 'body'.\n\t * Otherwise, position is determined by css\n\t */\n\tpositionDropdown(){\n\n\t\tif( this.settings.dropdownParent !== 'body' ){\n\t\t\treturn;\n\t\t}\n\n\t\tvar context\t\t\t= this.control;\n\t\tvar rect\t\t\t= context.getBoundingClientRect();\n\t\tvar top\t\t\t\t= context.offsetHeight + rect.top  + window.scrollY;\n\t\tvar left\t\t\t= rect.left + window.scrollX;\n\n\n\t\tapplyCSS(this.dropdown,{\n\t\t\twidth : rect.width + 'px',\n\t\t\ttop   : top + 'px',\n\t\t\tleft  : left + 'px'\n\t\t});\n\n\t}\n\n\t/**\n\t * Resets / clears all selected items\n\t * from the control.\n\t *\n\t */\n\tclear(silent?:boolean) {\n\t\tvar self = this;\n\n\t\tif (!self.items.length) return;\n\n\t\tvar items = self.controlChildren();\n\t\titerate(items,(item:TomItem)=>{\n\t\t\tself.removeItem(item,true);\n\t\t});\n\n\t\tself.showInput();\n\t\tif( !silent ) self.updateOriginalInput();\n\t\tself.trigger('clear');\n\t}\n\n\t/**\n\t * A helper method for inserting an element\n\t * at the current caret position.\n\t *\n\t */\n\tinsertAtCaret(el:HTMLElement) {\n\t\tconst self\t\t= this;\n\t\tconst caret\t\t= self.caretPos;\n\t\tconst target\t= self.control;\n\n\t\ttarget.insertBefore(el, target.children[caret] || null);\n\t\tself.setCaret(caret + 1);\n\t}\n\n\t/**\n\t * Removes the current selected item(s).\n\t *\n\t */\n\tdeleteSelection(e:KeyboardEvent):boolean {\n\t\tvar direction, selection, caret, tail;\n\t\tvar self = this;\n\n\t\tdirection = (e && e.keyCode === constants.KEY_BACKSPACE) ? -1 : 1;\n\t\tselection = getSelection(self.control_input);\n\n\n\t\t// determine items that will be removed\n\t\tconst rm_items:TomItem[]\t= [];\n\n\t\tif (self.activeItems.length) {\n\n\t\t\ttail = getTail(self.activeItems, direction);\n\t\t\tcaret = nodeIndex(tail);\n\n\t\t\tif (direction > 0) { caret++; }\n\n\t\t\titerate(self.activeItems, (item:TomItem) => rm_items.push(item) );\n\n\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\tconst items = self.controlChildren();\n\t\t\tlet rm_item;\n\t\t\tif( direction < 0 && selection.start === 0 && selection.length === 0 ){\n\t\t\t\trm_item = items[self.caretPos - 1];\n\n\t\t\t}else if( direction > 0 && selection.start === self.inputValue().length ){\n\t\t\t\trm_item = items[self.caretPos];\n\t\t\t}\n\n\t\t\tif( rm_item !== undefined ){\n\t\t\t\trm_items.push( rm_item );\n\t\t\t}\n\t\t}\n\n\t\tif( !self.shouldDelete(rm_items,e) ){\n\t\t\treturn false;\n\t\t}\n\n\t\tpreventDefault(e,true);\n\n\t\t// perform removal\n\t\tif (typeof caret !== 'undefined') {\n\t\t\tself.setCaret(caret);\n\t\t}\n\n\t\twhile( rm_items.length ){\n\t\t\tself.removeItem(rm_items.pop());\n\t\t}\n\n\t\tself.showInput();\n\t\tself.positionDropdown();\n\t\tself.refreshOptions(false);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Return true if the items should be deleted\n\t */\n\tshouldDelete(items:TomItem[],evt:MouseEvent|KeyboardEvent){\n\n\t\tconst values = items.map(item => item.dataset.value);\n\n\t\t// allow the callback to abort\n\t\tif( !values.length || (typeof this.settings.onDelete === 'function' && this.settings.onDelete(values,evt) === false) ){\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Selects the previous / next item (depending on the `direction` argument).\n\t *\n\t * > 0 - right\n\t * < 0 - left\n\t *\n\t */\n\tadvanceSelection(direction:number, e?:MouseEvent|KeyboardEvent) {\n\t\tvar last_active, adjacent, self = this;\n\n\t\tif (self.rtl) direction *= -1;\n\t\tif( self.inputValue().length ) return;\n\n\n\t\t// add or remove to active items\n\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) || isKeyDown('shiftKey',e) ){\n\n\t\t\tlast_active\t\t\t= self.getLastActive(direction);\n\t\t\tif( last_active ){\n\n\t\t\t\tif( !last_active.classList.contains('active') ){\n\t\t\t\t\tadjacent\t\t\t= last_active;\n\t\t\t\t}else{\n\t\t\t\t\tadjacent\t\t\t= self.getAdjacent(last_active,direction,'item');\n\t\t\t\t}\n\n\t\t\t// if no active item, get items adjacent to the control input\n\t\t\t}else if( direction > 0 ){\n\t\t\t\tadjacent\t\t\t= self.control_input.nextElementSibling;\n\t\t\t}else{\n\t\t\t\tadjacent\t\t\t= self.control_input.previousElementSibling;\n\t\t\t}\n\n\n\t\t\tif( adjacent ){\n\t\t\t\tif( adjacent.classList.contains('active') ){\n\t\t\t\t\tself.removeActiveItem(last_active);\n\t\t\t\t}\n\t\t\t\tself.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n\t\t\t}\n\n\t\t// move caret to the left or right\n\t\t}else{\n\t\t\tself.moveCaret(direction);\n\t\t}\n\t}\n\n\tmoveCaret(direction:number){}\n\n\t/**\n\t * Get the last active item\n\t *\n\t */\n\tgetLastActive(direction?:number){\n\n\t\tlet last_active = this.control.querySelector('.last-active');\n\t\tif( last_active ){\n\t\t\treturn last_active;\n\t\t}\n\n\n\t\tvar result = this.control.querySelectorAll('.active');\n\t\tif( result ){\n\t\t\treturn getTail(result,direction);\n\t\t}\n\t}\n\n\n\t/**\n\t * Moves the caret to the specified index.\n\t *\n\t * The input must be moved by leaving it in place and moving the\n\t * siblings, due to the fact that focus cannot be restored once lost\n\t * on mobile webkit devices\n\t *\n\t */\n\tsetCaret(new_pos:number) {\n\t\tthis.caretPos = this.items.length;\n\t}\n\n\t/**\n\t * Return list of item dom elements\n\t *\n\t */\n\tcontrolChildren():TomItem[]{\n\t\treturn Array.from( this.control.querySelectorAll('[data-ts-item]') ) as TomItem[];\n\t}\n\n\t/**\n\t * Disables user input on the control. Used while\n\t * items are being asynchronously created.\n\t */\n\tlock() {\n\t\tthis.isLocked = true;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Re-enables user input on the control.\n\t */\n\tunlock() {\n\t\tthis.isLocked = false;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Disables user input on the control completely.\n\t * While disabled, it cannot receive focus.\n\t */\n\tdisable() {\n\t\tvar self = this;\n\t\tself.input.disabled\t\t\t\t= true;\n\t\tself.control_input.disabled\t\t= true;\n\t\tself.focus_node.tabIndex\t\t= -1;\n\t\tself.isDisabled\t\t\t\t\t= true;\n\t\tthis.close();\n\t\tself.lock();\n\t}\n\n\t/**\n\t * Enables the control so that it can respond\n\t * to focus and user input.\n\t */\n\tenable() {\n\t\tvar self = this;\n\t\tself.input.disabled\t\t\t\t= false;\n\t\tself.control_input.disabled\t\t= false;\n\t\tself.focus_node.tabIndex\t\t= self.tabIndex;\n\t\tself.isDisabled\t\t\t\t\t= false;\n\t\tself.unlock();\n\t}\n\n\t/**\n\t * Completely destroys the control and\n\t * unbinds all event listeners so that it can\n\t * be garbage collected.\n\t */\n\tdestroy() {\n\t\tvar self = this;\n\t\tvar revertSettings = self.revertSettings;\n\n\t\tself.trigger('destroy');\n\t\tself.off();\n\t\tself.wrapper.remove();\n\t\tself.dropdown.remove();\n\n\t\tself.input.innerHTML = revertSettings.innerHTML;\n\t\tself.input.tabIndex = revertSettings.tabIndex;\n\n\t\tremoveClasses(self.input,'tomselected','ts-hidden-accessible');\n\n\t\tself._destroy();\n\n\t\tdelete self.input.tomselect;\n\t}\n\n\t/**\n\t * A helper method for rendering \"item\" and\n\t * \"option\" templates, given the data.\n\t *\n\t */\n\trender( templateName:TomTemplateNames, data?:any ):null|HTMLElement{\n\t\tvar id, html;\n\t\tconst self = this;\n\n\t\tif( typeof this.settings.render[templateName] !== 'function' ){\n\t\t\treturn null;\n\t\t}\n\n\t\t// render markup\n\t\thtml = self.settings.render[templateName].call(this, data, escape_html);\n\n\t\tif( !html ){\n\t\t\treturn null;\n\t\t}\n\n\t\thtml = getDom( html );\n\n\t\t// add mandatory attributes\n\t\tif (templateName === 'option' || templateName === 'option_create') {\n\n\t\t\tif( data[self.settings.disabledField] ){\n\t\t\t\tsetAttr(html,{'aria-disabled':'true'});\n\t\t\t}else{\n\t\t\t\tsetAttr(html,{'data-selectable': ''});\n\t\t\t}\n\n\t\t}else if (templateName === 'optgroup') {\n\t\t\tid = data.group[self.settings.optgroupValueField];\n\t\t\tsetAttr(html,{'data-group': id});\n\t\t\tif(data.group[self.settings.disabledField]) {\n\t\t\t\tsetAttr(html,{'data-disabled': ''});\n\t\t\t}\n\t\t}\n\n\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\tconst value\t= get_hash(data[self.settings.valueField]);\n\t\t\tsetAttr(html,{'data-value': value });\n\n\n\t\t\t// make sure we have some classes if a template is overwritten\n\t\t\tif( templateName === 'item' ){\n\t\t\t\taddClasses(html,self.settings.itemClass);\n\t\t\t\tsetAttr(html,{'data-ts-item':''});\n\t\t\t}else{\n\t\t\t\taddClasses(html,self.settings.optionClass);\n\t\t\t\tsetAttr(html,{\n\t\t\t\t\trole:'option',\n\t\t\t\t\tid:data.$id\n\t\t\t\t});\n\n\t\t\t\t// update cache\n\t\t\t\tdata.$div = html;\n\t\t\t\tself.options[value] = data;\n\t\t\t}\n\n\n\t\t}\n\n\t\treturn html;\n\n\t}\n\n\n\t/**\n\t * Type guarded rendering\n\t *\n\t */\n\t_render( templateName:TomTemplateNames, data?:any ):HTMLElement{\n\t\tconst html = this.render(templateName, data);\n\n\t\tif( html == null ){\n\t\t\tthrow 'HTMLElement expected';\n\t\t}\n\t\treturn html;\n\t}\n\n\n\t/**\n\t * Clears the render cache for a template. If\n\t * no template is given, clears all render\n\t * caches.\n\t *\n\t */\n\tclearCache():void{\n\n\t\titerate(this.options, (option:TomOption)=>{\n\t\t\tif( option.$div ){\n\t\t\t\toption.$div.remove();\n\t\t\t\tdelete option.$div;\n\t\t\t}\n\t\t});\n\n\t}\n\n\t/**\n\t * Removes a value from item and option caches\n\t *\n\t */\n\tuncacheValue(value:string){\n\n\t\tconst option_el\t\t\t= this.getOption(value);\n\t\tif( option_el ) option_el.remove();\n\n\t}\n\n\t/**\n\t * Determines whether or not to display the\n\t * create item prompt, given a user input.\n\t *\n\t */\n\tcanCreate( input:string ):boolean {\n\t\treturn this.settings.create && (input.length > 0) && (this.settings.createFilter as TomCreateFilter ).call(this, input);\n\t}\n\n\n\t/**\n\t * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n\t *\n\t * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n\t *\n\t * });\n\t */\n\thook( when:string, method:string, new_fn:any ){\n\t\tvar self = this;\n\t\tvar orig_method = self[method];\n\n\n\t\tself[method] = function(){\n\t\t\tvar result, result_new;\n\n\t\t\tif( when === 'after' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\tresult_new = new_fn.apply(self, arguments );\n\n\t\t\tif( when === 'instead' ){\n\t\t\t\treturn result_new;\n\t\t\t}\n\n\t\t\tif( when === 'before' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t}\n\n};\n", "/**\n * Plugin: \"change_listener\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { addEvent } from '../../utils';\n\nexport default function(this:TomSelect) {\n\taddEvent(this.input,'change',()=>{\n\t\tthis.sync();\n\t});\n};\n", "/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { preventDefault, hash_key } from '../../utils';\nimport { getDom } from '../../vanilla';\n\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\tvar orig_onOptionSelect = self.onOptionSelect;\n\n\tself.settings.hideSelected = false;\n\n\n\t// update the checkbox for an option\n\tvar UpdateCheckbox = function(option:HTMLElement){\n\t\tsetTimeout(()=>{\n\t\t\tvar checkbox = option.querySelector('input');\n\t\t\tif( checkbox instanceof HTMLInputElement ){\n\t\t\t\tif( option.classList.contains('selected') ){\n\t\t\t\t\tcheckbox.checked = true;\n\t\t\t\t}else{\n\t\t\t\t\tcheckbox.checked = false;\n\t\t\t\t}\n\t\t\t}\n\t\t},1);\n\t};\n\n\t// add checkbox to option template\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_option = self.settings.render.option;\n\n\t\tself.settings.render.option = (data, escape_html) => {\n\t\t\tvar rendered = getDom(orig_render_option.call(self, data, escape_html));\n\t\t\tvar checkbox = document.createElement('input');\n\t\t\tcheckbox.addEventListener('click',function(evt){\n\t\t\t\tpreventDefault(evt);\n\t\t\t});\n\n\t\t\tcheckbox.type = 'checkbox';\n\t\t\tconst hashed = hash_key(data[self.settings.valueField]);\n\n\n\t\t\tif( hashed && self.items.indexOf(hashed) > -1 ){\n\t\t\t\tcheckbox.checked = true;\n\t\t\t}\n\n\t\t\trendered.prepend(checkbox);\n\t\t\treturn rendered;\n\t\t};\n\t});\n\n\t// uncheck when item removed\n\tself.on('item_remove',(value:string) => {\n\t\tvar option = self.getOption(value);\n\n\t\tif( option ){ // if dropdown hasn't been opened yet, the option won't exist\n\t\t\toption.classList.remove('selected'); // selected class won't be removed yet\n\t\t\tUpdateCheckbox(option);\n\t\t}\n\t});\n\n\t// check when item added\n\tself.on('item_add',(value:string) => {\n\t\tvar option = self.getOption(value);\n\n\t\tif( option ){ // if dropdown hasn't been opened yet, the option won't exist\n\t\t\tUpdateCheckbox(option);\n\t\t}\n\t});\n\n\n\t// remove items when selected option is clicked\n\tself.hook('instead','onOptionSelect',( evt:KeyboardEvent, option:HTMLElement )=>{\n\n\t\tif( option.classList.contains('selected') ){\n\t\t\toption.classList.remove('selected')\n\t\t\tself.removeItem(option.dataset.value);\n\t\t\tself.refreshOptions();\n\t\t\tpreventDefault(evt,true);\n\t\t\treturn;\n        }\n\n\t\torig_onOptionSelect.call(self, evt, option);\n\n\t\tUpdateCheckbox(option);\n\t});\n\n};\n", "/**\n * Plugin: \"dropdown_header\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { getDom } from '../../vanilla';\nimport { CBOptions } from './types';\n\nexport default function(this:TomSelect, userOptions:CBOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\tclassName: 'clear-button',\n\t\ttitle: 'Clear All',\n\t\thtml: (data:CBOptions) => {\n\t\t\treturn `<div class=\"${data.className}\" title=\"${data.title}\">&#10799;</div>`;\n\t\t}\n\t}, userOptions);\n\n\tself.on('initialize',()=>{\n\t\tvar button = getDom(options.html(options));\n\t\tbutton.addEventListener('click',(evt)=>{\n\n\t\t\tif( self.isDisabled ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself.clear();\n\n\t\t\tif( self.settings.mode === 'single' && self.settings.allowEmptyOption ){\n\t\t\t\tself.addItem('');\n\t\t\t}\n\n\t\t\tevt.preventDefault();\n\t\t\tevt.stopPropagation();\n\t\t});\n\t\tself.control.appendChild(button);\n\t});\n\n};\n", "/**\n * Plugin: \"drag_drop\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\tif (!$.fn.sortable) throw new Error('The \"drag_drop\" plugin requires jQuery UI \"sortable\".');\n\tif (self.settings.mode !== 'multi') return;\n\n\tvar orig_lock\t\t= self.lock;\n\tvar orig_unlock\t\t= self.unlock;\n\n\tself.hook('instead','lock',()=>{\n\t\tvar sortable = $(self.control).data('sortable');\n\t\tif (sortable) sortable.disable();\n\t\treturn orig_lock.call(self);\n\t});\n\n\tself.hook('instead','unlock',()=>{\n\t\tvar sortable = $(self.control).data('sortable');\n\t\tif (sortable) sortable.enable();\n\t\treturn orig_unlock.call(self);\n\t});\n\n\tself.on('initialize',()=>{\n\t\tvar $control = $(self.control).sortable({\n\t\t\titems: '[data-value]',\n\t\t\tforcePlaceholderSize: true,\n\t\t\tdisabled: self.isLocked,\n\t\t\tstart: (e, ui) => {\n\t\t\t\tui.placeholder.css('width', ui.helper.css('width'));\n\t\t\t\t$control.css({overflow: 'visible'});\n\t\t\t},\n\t\t\tstop: ()=>{\n\t\t\t\t$control.css({overflow: 'hidden'});\n\n\t\t\t\tvar values:string[] = [];\n\t\t\t\t$control.children('[data-value]').each(function(this:HTMLElement){\n\t\t\t\t\tif( this.dataset.value ) values.push(this.dataset.value);\n\t\t\t\t});\n\n\t\t\t\tself.setValue(values);\n\t\t\t}\n\t\t});\n\n\t});\n\n};\n", "/**\n * Plugin: \"dropdown_header\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { getDom } from '../../vanilla';\nimport { preventDefault } from '../../utils';\nimport { DHOptions } from './types';\n\nexport default function(this:TomSelect, userOptions:DHOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\ttitle         : 'Untitled',\n\t\theaderClass   : 'dropdown-header',\n\t\ttitleRowClass : 'dropdown-header-title',\n\t\tlabelClass    : 'dropdown-header-label',\n\t\tcloseClass    : 'dropdown-header-close',\n\n\t\thtml: (data:DHOptions) => {\n\t\t\treturn (\n\t\t\t\t'<div class=\"' + data.headerClass + '\">' +\n\t\t\t\t\t'<div class=\"' + data.titleRowClass + '\">' +\n\t\t\t\t\t\t'<span class=\"' + data.labelClass + '\">' + data.title + '</span>' +\n\t\t\t\t\t\t'<a class=\"' + data.closeClass + '\">&times;</a>' +\n\t\t\t\t\t'</div>' +\n\t\t\t\t'</div>'\n\t\t\t);\n\t\t}\n\t}, userOptions);\n\n\tself.on('initialize',()=>{\n\t\tvar header = getDom(options.html(options));\n\n\t\tvar close_link = header.querySelector('.'+options.closeClass);\n\t\tif( close_link ){\n\t\t\tclose_link.addEventListener('click',(evt)=>{\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t\tself.close();\n\t\t\t});\n\t\t}\n\n\t\tself.dropdown.insertBefore(header, self.dropdown.firstChild);\n\t});\n\n};\n", "/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { nodeIndex, removeClasses } from '../../vanilla';\n\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\n\t/**\n\t * Moves the caret to the specified index.\n\t *\n\t * The input must be moved by leaving it in place and moving the\n\t * siblings, due to the fact that focus cannot be restored once lost\n\t * on mobile webkit devices\n\t *\n\t */\n\tself.hook('instead','setCaret',(new_pos:number) => {\n\n\t\tif( self.settings.mode === 'single' || !self.control.contains(self.control_input) ) {\n\t\t\tnew_pos = self.items.length;\n\t\t} else {\n\t\t\tnew_pos = Math.max(0, Math.min(self.items.length, new_pos));\n\n\t\t\tif( new_pos != self.caretPos && !self.isPending ){\n\n\t\t\t\tself.controlChildren().forEach((child,j) => {\n\t\t\t\t\tif( j < new_pos ){\n\t\t\t\t\t\tself.control_input.insertAdjacentElement('beforebegin', child );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.control.appendChild( child );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tself.caretPos = new_pos;\n\t});\n\n\tself.hook('instead','moveCaret',(direction:number) => {\n\n\t\tif( !self.isFocused ) return;\n\n\t\t// move caret before or after selected items\n\t\tconst last_active\t\t= self.getLastActive(direction);\n\t\tif( last_active ){\n\t\t\tconst idx = nodeIndex(last_active);\n\t\t\tself.setCaret(direction > 0 ? idx + 1: idx);\n\t\t\tself.setActiveItem();\n\t\t\tremoveClasses(last_active as HTMLElement,'last-active');\n\n\t\t// move caret left or right of current position\n\t\t}else{\n\t\t\tself.setCaret(self.caretPos + direction);\n\n\t\t}\n\n\t});\n\n};\n", "/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport * as constants from '../../constants';\nimport { getDom, addClasses } from '../../vanilla';\nimport { addEvent, preventDefault } from '../../utils';\n\n\nexport default function(this:TomSelect) {\n\tconst self = this;\n\n\tself.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown\n\n\tself.hook('before','setup',()=>{\n\t\tself.focus_node\t\t= self.control;\n\n\t\taddClasses( self.control_input, 'dropdown-input');\n\n\t \tconst div = getDom('<div class=\"dropdown-input-wrap\">');\n\t\tdiv.append(self.control_input);\n\t\tself.dropdown.insertBefore(div, self.dropdown.firstChild);\n\n\t\t// set a placeholder in the select control\n\t\tconst placeholder = getDom('<input class=\"items-placeholder\" tabindex=\"-1\" />') as HTMLInputElement;\n\t\tplaceholder.placeholder = self.settings.placeholder ||'';\n\t\tself.control.append(placeholder);\n\n\t});\n\n\n\tself.on('initialize',()=>{\n\n\t\t// set tabIndex on control to -1, otherwise [shift+tab] will put focus right back on control_input\n\t\tself.control_input.addEventListener('keydown',(evt:KeyboardEvent) =>{\n\t\t//addEvent(self.control_input,'keydown' as const,(evt:KeyboardEvent) =>{\n\t\t\tswitch( evt.keyCode ){\n\t\t\t\tcase constants.KEY_ESC:\n\t\t\t\t\tif (self.isOpen) {\n\t\t\t\t\t\tpreventDefault(evt,true);\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_TAB:\n\t\t\t\t\tself.focus_node.tabIndex = -1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn self.onKeyDown.call(self,evt);\n\t\t});\n\n\t\tself.on('blur',()=>{\n\t\t\tself.focus_node.tabIndex = self.isDisabled ? -1 : self.tabIndex;\n\t\t});\n\n\n\t\t// give the control_input focus when the dropdown is open\n\t\tself.on('dropdown_open',() =>{\n\t\t\tself.control_input.focus();\n\t\t});\n\n\t\t// prevent onBlur from closing when focus is on the control_input\n\t\tconst orig_onBlur = self.onBlur;\n\t\tself.hook('instead','onBlur',(evt?:FocusEvent)=>{\n\t\t\tif( evt && evt.relatedTarget == self.control_input ) return;\n\t\t\treturn orig_onBlur.call(self);\n\t\t});\n\n\t\taddEvent(self.control_input,'blur', () => self.onBlur() );\n\n\t\t// return focus to control to allow further keyboard input\n\t\tself.hook('before','close',() =>{\n\n\t\t\tif( !self.isOpen ) return;\n\t\t\tself.focus_node.focus({preventScroll: true});\n\t\t});\n\n\t});\n\n};\n", "/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { addEvent } from '../../utils';\n\nexport default function(this:TomSelect) {\n\tvar self\t\t\t\t\t= this;\n\n\tself.on('initialize',()=>{\n\n\n\t\tvar test_input\t\t\t\t= document.createElement('span');\n\t\tvar control\t\t\t\t\t= self.control_input;\n\t\ttest_input.style.cssText\t= 'position:absolute; top:-99999px; left:-99999px; width:auto; padding:0; white-space:pre; ';\n\n\t\tself.wrapper.appendChild(test_input);\n\n\n\t\tvar transfer_styles\t\t\t= [ 'letterSpacing', 'fontSize', 'fontFamily', 'fontWeight', 'textTransform' ];\n\n\t\tfor( const style_name of transfer_styles ){\n\t\t\t// @ts-ignore TS7015 https://stackoverflow.com/a/50506154/697576\n\t\t\ttest_input.style[style_name] = control.style[style_name];\n\t\t}\n\n\n\t\t/**\n\t\t * Set the control width\n\t\t *\n\t\t */\n\t\tvar resize = ()=>{\n\t\t\ttest_input.textContent\t= control.value;\n\t\t\tcontrol.style.width\t\t= test_input.clientWidth+'px';\n\t\t};\n\n\t\tresize();\n\t\tself.on('update item_add item_remove',resize);\n\t\taddEvent(control,'input', resize );\n\t\taddEvent(control,'keyup', resize );\n\t\taddEvent(control,'blur', resize );\n\t\taddEvent(control,'update', resize );\n\t});\n\n};\n", "/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\tvar orig_deleteSelection = self.deleteSelection;\n\n\tthis.hook('instead','deleteSelection',(evt:KeyboardEvent) => {\n\n\t\tif( self.activeItems.length ){\n\t\t\treturn orig_deleteSelection.call(self, evt);\n\t\t}\n\n\t\treturn false;\n\t});\n\n};\n", "/**\n * Plugin: \"no_active_items\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\n\nexport default function(this:TomSelect) {\n\tthis.hook('instead','setActiveItem',() => {});\n\tthis.hook('instead','selectAll',() => {});\n};\n", "/**\n * Plugin: \"optgroup_columns\" (Tom Select.js)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport * as constants from '../../constants';\nimport { parentMatch, nodeIndex } from '../../vanilla';\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\n\tvar orig_keydown = self.onKeyDown;\n\n\tself.hook('instead','onKeyDown',(evt:KeyboardEvent)=>{\n\t\tvar index, option, options, optgroup;\n\n\t\tif( !self.isOpen || !(evt.keyCode === constants.KEY_LEFT || evt.keyCode === constants.KEY_RIGHT)) {\n\t\t\treturn orig_keydown.call(self,evt);\n\t\t}\n\n\t\tself.ignoreHover\t= true;\n\t\toptgroup\t\t\t= parentMatch(self.activeOption,'[data-group]');\n\t\tindex\t\t\t\t= nodeIndex(self.activeOption,'[data-selectable]');\n\n\t\tif( !optgroup ){\n\t\t\treturn;\n\t\t}\n\n\t\tif( evt.keyCode === constants.KEY_LEFT ){\n\t\t\toptgroup = optgroup.previousSibling;\n\t\t} else {\n\t\t\toptgroup = optgroup.nextSibling;\n\t\t}\n\n\t\tif( !optgroup ){\n\t\t\treturn;\n\t\t}\n\n\t\toptions\t\t\t\t= (<HTMLOptGroupElement>optgroup).querySelectorAll('[data-selectable]');\n\t\toption\t\t\t\t= options[ Math.min(options.length - 1, index) ] as HTMLElement;\n\n\t\tif( option ){\n\t\t\tself.setActiveOption(option);\n\t\t}\n\n\t});\n\n};\n", "/**\n * Plugin: \"remove_button\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { getDom } from '../../vanilla';\nimport { escape_html, preventDefault, addEvent } from '../../utils';\nimport { TomOption, TomItem } from '../../types/index';\nimport { RBOptions } from './types';\n\nexport default function(this:TomSelect, userOptions:RBOptions) {\n\n\tconst options = Object.assign({\n\t\t\tlabel     : '&times;',\n\t\t\ttitle     : 'Remove',\n\t\t\tclassName : 'remove',\n\t\t\tappend    : true\n\t\t}, userOptions);\n\n\n\t//options.className = 'remove-single';\n\tvar self\t\t\t= this;\n\n\t// override the render method to add remove button to each item\n\tif( !options.append ){\n\t\treturn;\n\t}\n\n\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_item = self.settings.render.item;\n\n\t\tself.settings.render.item = (data:TomOption, escape:typeof escape_html) => {\n\n\t\t\tvar item = getDom(orig_render_item.call(self, data, escape)) as TomItem;\n\n\t\t\tvar close_button = getDom(html);\n\t\t\titem.appendChild(close_button);\n\n\t\t\taddEvent(close_button,'mousedown',(evt) => {\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t});\n\n\t\t\taddEvent(close_button,'click',(evt) => {\n\n\t\t\t\t// propagating will trigger the dropdown to show for single mode\n\t\t\t\tpreventDefault(evt,true);\n\n\t\t\t\tif( self.isLocked ) return;\n\t\t\t\tif( !self.shouldDelete([item],evt as MouseEvent) ) return;\n\n\t\t\t\tself.removeItem(item);\n\t\t\t\tself.refreshOptions(false);\n\t\t\t\tself.inputState();\n\t\t\t});\n\n\t\t\treturn item;\n\t\t};\n\n\t});\n\n\n};\n", "/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select';\nimport { TomOption } from '../../types/index';\n\ntype TPluginOptions = {\n\ttext?:(option:TomOption)=>string,\n};\n\nexport default function(this:TomSelect, userOptions:TPluginOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\ttext: (option:TomOption) => {\n\t\t\treturn option[self.settings.labelField];\n\t\t}\n\t},userOptions);\n\n\tself.on('item_remove',function(value:string){\n\t\tif( !self.isFocused ){\n\t\t\treturn;\n\t\t}\n\n\t\tif( self.control_input.value.trim() === '' ){\n\t\t\tvar option = self.options[value];\n\t\t\tif( option ){\n\t\t\t\tself.setTextboxValue(options.text.call(self, option));\n\t\t\t}\n\t\t}\n\t});\n\n};\n", "/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { TomOption } from '../../types/index';\nimport { addClasses } from '../../vanilla';\n\nexport default function(this:TomSelect) {\n\tconst self\t\t\t\t\t\t\t= this;\n\tconst orig_canLoad\t\t\t\t\t= self.canLoad;\n\tconst orig_clearActiveOption\t\t= self.clearActiveOption;\n\tconst orig_loadCallback\t\t\t\t= self.loadCallback;\n\n\tvar pagination:{[key:string]:any}\t= {};\n\tvar dropdown_content:HTMLElement;\n\tvar loading_more\t\t\t\t\t= false;\n\tvar load_more_opt:HTMLElement;\n\tvar default_values: string[]\t\t= [];\n\n\tif( !self.settings.shouldLoadMore ){\n\n\t\t// return true if additional results should be loaded\n\t\tself.settings.shouldLoadMore = ():boolean=>{\n\n\t\t\tconst scroll_percent = dropdown_content.clientHeight / (dropdown_content.scrollHeight - dropdown_content.scrollTop);\n\t\t\tif( scroll_percent > 0.9 ){\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif( self.activeOption ){\n\t\t\t\tvar selectable\t= self.selectable();\n\t\t\t\tvar index\t\t= Array.from(selectable).indexOf(self.activeOption);\n\t\t\t\tif( index >= (selectable.length-2) ){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}\n\n\n\tif( !self.settings.firstUrl ){\n\t\tthrow 'virtual_scroll plugin requires a firstUrl() method';\n\t}\n\n\n\t// in order for virtual scrolling to work,\n\t// options need to be ordered the same way they're returned from the remote data source\n\tself.settings.sortField\t\t\t= [{field:'$order'},{field:'$score'}];\n\n\n\t// can we load more results for given query?\n\tconst canLoadMore = (query:string):boolean => {\n\n\t\tif( typeof self.settings.maxOptions === 'number' && dropdown_content.children.length >= self.settings.maxOptions ){\n\t\t\treturn false;\n\t\t}\n\n\t\tif( (query in pagination) && pagination[query] ){\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t};\n\n\tconst clearFilter = (option:TomOption, value:string):boolean => {\n\t\tif( self.items.indexOf(value) >= 0 || default_values.indexOf(value) >= 0 ){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\n\t// set the next url that will be\n\tself.setNextUrl = (value:string,next_url:any):void => {\n\t\tpagination[value] = next_url;\n\t};\n\n\t// getUrl() to be used in settings.load()\n\tself.getUrl = (query:string):any =>{\n\n\t\tif( query in pagination ){\n\t\t\tconst next_url = pagination[query];\n\t\t\tpagination[query] = false;\n\t\t\treturn next_url;\n\t\t}\n\n\t\t// if the user goes back to a previous query\n\t\t// we need to load the first page again\n\t\tpagination = {};\n\n\t\treturn self.settings.firstUrl.call(self,query);\n\t};\n\n\n\t// don't clear the active option (and cause unwanted dropdown scroll)\n\t// while loading more results\n\tself.hook('instead','clearActiveOption',()=>{\n\n\t\tif( loading_more ){\n\t\t\treturn;\n\t\t}\n\n\t\treturn orig_clearActiveOption.call(self);\n\t});\n\n\t// override the canLoad method\n\tself.hook('instead','canLoad',(query:string)=>{\n\n\t\t// first time the query has been seen\n\t\tif( !(query in pagination) ){\n\t\t\treturn orig_canLoad.call(self,query);\n\t\t}\n\n\t\treturn canLoadMore(query);\n\t});\n\n\n\t// wrap the load\n\tself.hook('instead','loadCallback',( options:TomOption[], optgroups:TomOption[])=>{\n\n\t\tif( !loading_more ){\n\t\t\tself.clearOptions(clearFilter);\n\t\t}else if( load_more_opt ){\n\t\t\tconst first_option = options[0];\n\t\t\tif( first_option !== undefined ){\n\t\t\t\tload_more_opt.dataset.value\t\t= first_option[self.settings.valueField];\n\t\t\t}\n\t\t}\n\n\t\torig_loadCallback.call( self, options, optgroups);\n\n\t\tloading_more = false;\n\t});\n\n\n\t// add templates to dropdown\n\t//\tloading_more if we have another url in the queue\n\t//\tno_more_results if we don't have another url in the queue\n\tself.hook('after','refreshOptions',()=>{\n\n\t\tconst query\t\t= self.lastValue;\n\t\tvar option;\n\n\t\tif( canLoadMore(query) ){\n\n\t\t\toption = self.render('loading_more',{query:query});\n\t\t\tif( option ){\n\t\t\t\toption.setAttribute('data-selectable',''); // so that navigating dropdown with [down] keypresses can navigate to this node\n\t\t\t\tload_more_opt = option;\n\t\t\t}\n\n\t\t}else if( (query in pagination) && !dropdown_content.querySelector('.no-results') ){\n\t\t\toption = self.render('no_more_results',{query:query});\n\t\t}\n\n\t\tif( option ){\n\t\t\taddClasses(option,self.settings.optionClass);\n\t\t\tdropdown_content.append( option );\n\t\t}\n\n\t});\n\n\n\t// add scroll listener and default templates\n\tself.on('initialize',()=>{\n\t\tdefault_values = Object.keys(self.options);\n\t\tdropdown_content = self.dropdown_content;\n\n\t\t// default templates\n\t\tself.settings.render = Object.assign({}, {\n\t\t\tloading_more:() => {\n\t\t\t\treturn `<div class=\"loading-more-results\">Loading more results ... </div>`;\n\t\t\t},\n\t\t\tno_more_results:() =>{\n\t\t\t\treturn `<div class=\"no-more-results\">No more results</div>`;\n\t\t\t}\n\t\t},self.settings.render);\n\n\n\t\t// watch dropdown content scroll position\n\t\tdropdown_content.addEventListener('scroll',()=>{\n\n\t\t\tif( !self.settings.shouldLoadMore.call(self) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// !important: this will get checked again in load() but we still need to check here otherwise loading_more will be set to true\n\t\t\tif( !canLoadMore(self.lastValue) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// don't call load() too much\n\t\t\tif( loading_more ) return;\n\n\n\t\t\tloading_more = true;\n\t\t\tself.load.call(self,self.lastValue);\n\t\t});\n\t});\n\n};\n", "import TomSelect from './tom-select';\n\nimport change_listener from './plugins/change_listener/plugin';\nimport checkbox_options from './plugins/checkbox_options/plugin';\nimport clear_button from './plugins/clear_button/plugin';\nimport drag_drop from './plugins/drag_drop/plugin';\nimport dropdown_header from './plugins/dropdown_header/plugin';\nimport caret_position from './plugins/caret_position/plugin';\nimport dropdown_input from './plugins/dropdown_input/plugin';\nimport input_autogrow from './plugins/input_autogrow/plugin';\nimport no_backspace_delete from './plugins/no_backspace_delete/plugin';\nimport no_active_items from './plugins/no_active_items/plugin';\nimport optgroup_columns from './plugins/optgroup_columns/plugin';\nimport remove_button from './plugins/remove_button/plugin';\nimport restore_on_backspace from './plugins/restore_on_backspace/plugin';\nimport virtual_scroll from './plugins/virtual_scroll/plugin';\n\nTomSelect.define('change_listener', change_listener);\nTomSelect.define('checkbox_options', checkbox_options);\nTomSelect.define('clear_button', clear_button);\nTomSelect.define('drag_drop', drag_drop);\nTomSelect.define('dropdown_header', dropdown_header);\nTomSelect.define('caret_position', caret_position);\nTomSelect.define('dropdown_input', dropdown_input);\nTomSelect.define('input_autogrow', input_autogrow);\nTomSelect.define('no_backspace_delete', no_backspace_delete);\nTomSelect.define('no_active_items', no_active_items);\nTomSelect.define('optgroup_columns', optgroup_columns);\nTomSelect.define('remove_button', remove_button);\nTomSelect.define('restore_on_backspace', restore_on_backspace);\nTomSelect.define('virtual_scroll', virtual_scroll);\n\nexport default TomSelect;\n"],
  "mappings": ";;;AAgBA,SAASA,UAAUC,QAAcC,UAA6B;AAC7DD,SAAOE,MAAM,KAAb,EAAoBC,QAASC,WAAS;AACrCH,aAASG,KAAD;EACR,CAFD;AAGA;AAEc,IAAMC,aAAN,MAAgB;EAI9BC,cAAa;AAAA,SAFNC,UAEM;AACPA,SAAAA,UAAU,CAAA;EACf;EAEDC,GAAGR,QAAeS,KAAc;AAC/BV,cAAUC,QAAQI,WAAU;AAC3B,YAAMM,cAAc,KAAKH,QAAQH,UAAU,CAAA;AAC3CM,kBAAYC,KAAKF,GAAjB;AACA,WAAKF,QAAQH,SAASM;IACtB,CAJQ;EAKT;EAEDE,IAAIZ,QAAeS,KAAc;AAChC,QAAII,IAAIC,UAAUC;AACdF,QAAAA,MAAM,GAAG;AACPN,WAAAA,UAAU,CAAA;AACf;IACA;AAEDR,cAAUC,QAAQI,WAAU;AAEvBS,UAAAA,MAAM,GAAE;AACX,eAAO,KAAKN,QAAQH;AACpB;MACA;AAED,YAAMM,cAAc,KAAKH,QAAQH;AAC7BM,UAAAA,gBAAgBM;AAAY;AAEhCN,kBAAYO,OAAOP,YAAYQ,QAAQT,GAApB,GAA0B,CAA7C;AACA,WAAKF,QAAQH,SAASM;IACtB,CAZQ;EAaT;EAEDS,QAAQnB,WAAkBoB,MAAS;AAC9BC,QAAAA,OAAO;AAEXtB,cAAUC,QAAQI,WAAU;AAC3B,YAAMM,cAAcW,KAAKd,QAAQH;AAC7BM,UAAAA,gBAAgBM;AAAY;AAChCN,kBAAYP,QAAQM,SAAO;AAC1BA,YAAIa,MAAMD,MAAMD,IAAhB;MACA,CAFD;IAIA,CAPQ;EAQT;AAjD6B;ACWhB,SAASG,YAAYC,WAAgB;AAEnDA,YAAUC,UAAU,CAAA;AAEb,SAAA,cAAcD,UAAS;IAAA,eAAA,MAAA;AAAA,YAAA,GAAA,IAAA;AAAA,WAEtBC,UAAmB;QACzBC,OAAY,CAAA;QACZC,UAAY,CAAA;QACZC,WAAY,CAAA;QACZC,QAAY,CAAA;MAJa;IAFG;IAchB,OAANC,OAAOC,MAAaC,IAAsC;AAChER,gBAAUC,QAAQM,QAAQ;QACzB,QAASA;QACAC,MAAAA;MAFgB;IAI1B;IAkBDC,kBAAkBR,SAA4C;AACzDS,UAAAA,KAAKH;AACHV,YAAAA,OAAQ;AACRc,YAAAA,QAAiB,CAAA;AAEvB,UAAIC,MAAMC,QAAQZ,OAAd,GAAwB;AAC3BA,gBAAQtB,QAASmC,YAA4B;AAC5C,cAAI,OAAOA,WAAW,UAAU;AAC/BH,kBAAMxB,KAAK2B,MAAX;UACA,OAAM;AACNjB,iBAAKI,QAAQE,SAASW,OAAOP,QAAQO,OAAOC;AAC5CJ,kBAAMxB,KAAK2B,OAAOP,IAAlB;UACA;QACD,CAPD;MAQA,WAAUN,SAAS;AACdS,aAAAA,OAAOT,SAAS;AACpB,cAAIA,QAAQe,eAAeN,GAAvB,GAA6B;AAChCb,iBAAKI,QAAQE,SAASO,OAAOT,QAAQS;AACrCC,kBAAMxB,KAAKuB,GAAX;UACA;QACD;MACD;AAED,aAAOH,OAAOI,MAAMM,MAAN,GAAe;AAC5BpB,aAAKqB,QAAQX,IAAb;MACA;IACD;IAEDY,WAAWZ,MAAa;AACnBV,UAAAA,OAAU;AACd,UAAII,UAAUJ,KAAKI;AACnB,UAAIa,SAAUd,UAAUC,QAAQM;AAE5B,UAAA,CAACP,UAAUC,QAAQe,eAAeT,IAAjC,GAAwC;AAC5C,cAAM,IAAIa,MAAM,qBAAsBb,OAAO,UAAvC;MACN;AAEDN,cAAQG,UAAUG,QAAQ;AAC1BN,cAAQI,OAAOE,QAAQO,OAAON,GAAGV,MAAMD,MAAM,CAACA,KAAKI,QAAQE,SAASI,SAAS,CAAA,CAAhC,CAAtB;AACvBN,cAAQC,MAAMf,KAAKoB,IAAnB;IACA;IAMDW,QAAQX,MAAa;AAChBV,UAAAA,OAAO;AACX,UAAII,UAAUJ,KAAKI;AAEf,UAAA,CAACJ,KAAKI,QAAQI,OAAOW,eAAeT,IAAnC,GAA0C;AAC9C,YAAIN,QAAQG,UAAUG,OAAO;AAC5B,gBAAM,IAAIa,MAAM,sCAAsCb,OAAO,IAAvD;QACN;AACDV,aAAKsB,WAAWZ,IAAhB;MACA;AAED,aAAON,QAAQI,OAAOE;IACtB;EA/F4B;AAmG9B;AChID,IAAM,iBAAiB,WAAS;AAC9B,UAAQ,MAAM,OAAO,OAAO;AAE5B,MAAI,MAAM,SAAS,GAAG;AACpB,WAAO,MAAM,MAAM;EACvB;AAEE,SAAO,eAAe,KAAK,KAAK,IAAI,MAAM,MAAM,KAAK,EAAE,IAAI,MAAM,QAAQ,MAAM,KAAK,GAAG,IAAI;AAC7F;AAMA,IAAM,kBAAkB,WAAS;AAC/B,MAAI,CAAC,cAAc,KAAK,GAAG;AACzB,WAAO,MAAM,KAAK,EAAE;EACxB;AAEE,MAAI,UAAU;AACd,MAAI,kBAAkB;AAEtB,QAAM,eAAe,MAAM;AACzB,QAAI,kBAAkB,GAAG;AACvB,iBAAW,MAAM,kBAAkB;IACzC;EACA;AAEE,QAAM,QAAQ,CAAC,MAAM,MAAM;AACzB,QAAI,SAAS,MAAM,IAAI,IAAI;AACzB;AACA;IACN;AAEI,iBAAY;AACZ,eAAW;AACX,sBAAkB;EACtB,CAAG;AACD,eAAY;AACZ,SAAO;AACT;AASA,IAAM,eAAe,WAAS;AAC5B,MAAI,QAAQ,QAAQ,KAAK;AACzB,SAAO,eAAe,KAAK;AAC7B;AAOA,IAAM,gBAAgB,WAAS;AAC7B,SAAO,IAAI,IAAI,KAAK,EAAE,SAAS,MAAM;AACvC;AAOA,IAAM,eAAe,SAAO;AAC1B,UAAQ,MAAM,IAAI,QAAQ,sCAAsC,MAAM;AACxE;AAOA,IAAM,iBAAiB,WAAS;AAC9B,SAAO,MAAM,OAAO,CAAC,SAAS,UAAU,KAAK,IAAI,SAAS,cAAc,KAAK,CAAC,GAAG,CAAC;AACpF;AAKA,IAAM,gBAAgB,SAAO;AAC3B,SAAO,QAAQ,GAAG,EAAE;AACtB;AAMA,IAAM,UAAU,OAAK,MAAM,KAAK,CAAC;AC7FjC,IAAM,gBAAgB,WAAS;AAC7B,MAAI,MAAM,WAAW;AAAG,WAAO,CAAC,CAAC,KAAK,CAAC;AAGvC,MAAI,SAAS,CAAA;AACb,QAAM,QAAQ,MAAM,UAAU,CAAC;AAC/B,QAAM,OAAO,cAAc,KAAK;AAChC,OAAK,QAAQ,SAAU,WAAW;AAChC,QAAI,MAAM,UAAU,MAAM,CAAC;AAC3B,QAAI,KAAK,MAAM,OAAO,CAAC,IAAI,IAAI;AAC/B,WAAO,KAAK,GAAG;AACf,UAAM,UAAU,MAAM,CAAC;AACvB,QAAI,QAAQ,MAAM,OAAO,CAAC,CAAC;AAC3B,WAAO,KAAK,GAAG;EACnB,CAAG;AACD,SAAO;AACT;ACTA,IAAM,cAAc,CAAC,CAAC,GAAG,KAAK,CAAC;AAC/B,IAAM,aAAa;AAGnB,IAAI;AAGJ,IAAI;AACJ,IAAM,kBAAkB;AAGxB,IAAM,gBAAgB,CAAA;AAGtB,IAAM,kBAAkB;EACtB,KAAK;EACL,KAAK;EACL,KAAK;EACL,MAAM;EACN,MAAM;EACN,MAAM;EACN,MAAM;EACN,MAAM;EACN,MAAM;EACN,KAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;EACL,MAAM;EACN,MAAM;EACN,MAAM;EACN,MAAM;EACN,KAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;EACL,MAAM;EACN,MAAM;EACN,KAAK;EACL,KAAK;EACL,MAAM;EACN,KAAK;EACL,KAAK;EACL,KAAK;EACL,MAAM;AACR;AAEA,SAAS,SAAS,iBAAiB;AACjC,MAAI,UAAU,gBAAgB,UAAU;AAExC,WAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,QAAI,OAAO,QAAQ,UAAU,GAAG,IAAI,CAAC;AACrC,kBAAc,QAAQ;EAC1B;AACA;AAEA,IAAM,cAAc,IAAI,OAAO,OAAO,KAAK,aAAa,EAAE,KAAK,GAAG,IAAI,MAAM,YAAY,IAAI;AAO5F,IAAM,aAAa,kBAAgB;AACjC,MAAI,gBAAgB;AAAW;AAC/B,gBAAc,YAAY,gBAAgB,WAAW;AACvD;AAQA,IAAM,YAAY,CAAC,KAAK,OAAO,WAAW,IAAI,UAAU,IAAI;AAS5D,IAAM,YAAY,SAAO;AACvB,SAAO,QAAQ,GAAG,EAAE;IAKpB,CAAC,QAAQ,SAAS;AAChB,aAAO,SAAS,WAAW,IAAI;IACnC;IAAK;EAAE;AACP;AAMA,IAAM,aAAa,SAAO;AACxB,QAAM,UAAU,GAAG,EAAE,YAAW,EAAG,QAAQ,aAAa,CAExD,SAAS;AACP,WAAO,cAAc,SAAS;EAClC,CAAG;AAED,SAAO,UAAU,KAAK,KAAK;AAC7B;AAOA,UAAU,UAAUc,cAAa;AAC/B,aAAW,CAAC,gBAAgB,cAAc,KAAKA,cAAa;AAC1D,aAAS,IAAI,gBAAgB,KAAK,gBAAgB,KAAK;AACrD,UAAI,WAAW,OAAO,aAAa,CAAC;AACpC,UAAI,SAAS,UAAU,QAAQ;AAE/B,UAAI,UAAU,SAAS,YAAW,GAAI;AACpC;MACR;AAOM,UAAI,OAAO,SAAS,iBAAiB;AACnC;MACR;AAEM,UAAI,OAAO,UAAU,GAAG;AACtB;MACR;AAEM,YAAM;QACJ;QACA;QACA,YAAY;MACpB;IACA;EACA;AACA;AAOA,IAAM,eAAe,CAAAA,iBAAe;AAElC,QAAM,eAAe,CAAA;AAMrB,QAAM,cAAc,CAAC,QAAQ,WAAW;AAEtC,UAAM,aAAa,aAAa,WAAW,oBAAI,IAAG;AAClD,UAAM,OAAO,IAAI,OAAO,MAAM,aAAa,UAAU,IAAI,KAAK,IAAI;AAElE,QAAI,OAAO,MAAM,IAAI,GAAG;AACtB;IACN;AAEI,eAAW,IAAI,aAAa,MAAM,CAAC;AACnC,iBAAa,UAAU;EAC3B;AAEE,WAAS,SAAS,UAAUA,YAAW,GAAG;AACxC,gBAAY,MAAM,QAAQ,MAAM,MAAM;AACtC,gBAAY,MAAM,QAAQ,MAAM,QAAQ;EAC5C;AAEE,SAAO;AACT;AASA,IAAM,cAAc,CAAAA,iBAAe;AAEjC,QAAM,eAAe,aAAaA,YAAW;AAG7C,QAAMC,eAAc,CAAA;AAGpB,MAAI,aAAa,CAAA;AAEjB,WAAS,UAAU,cAAc;AAC/B,QAAI,MAAM,aAAa;AAEvB,QAAI,KAAK;AACP,MAAAA,aAAY,UAAU,aAAa,GAAG;IAC5C;AAEI,QAAI,OAAO,SAAS,GAAG;AACrB,iBAAW,KAAK,aAAa,MAAM,CAAC;IAC1C;EACA;AAEE,aAAW,KAAK,CAAC,GAAG,MAAM,EAAE,SAAS,EAAE,MAAM;AAC7C,QAAM,kBAAkB,eAAe,UAAU;AACjD,mBAAiB,IAAI,OAAO,MAAM,iBAAiB,GAAG;AACtD,SAAOA;AACT;AAQA,IAAM,cAAc,CAAC,SAAS,kBAAkB,MAAM;AACpD,MAAI,iBAAiB;AACrB,YAAU,QAAQ,IAAI,SAAO;AAC3B,QAAI,YAAY,MAAM;AACpB,wBAAkB,IAAI;IAC5B;AAEI,WAAO,YAAY,QAAQ;EAC/B,CAAG;AAED,MAAI,kBAAkB,iBAAiB;AACrC,WAAO,gBAAgB,OAAO;EAClC;AAEE,SAAO;AACT;AAeA,IAAM,sBAAsB,CAAC,KAAK,kBAAkB,MAAM;AACxD,oBAAkB,KAAK,IAAI,iBAAiB,IAAI,SAAS,CAAC;AAC1D,SAAO,eAAe,cAAc,GAAG,EAAE,IAAI,aAAW;AACtD,WAAO,YAAY,SAAS,eAAe;EAC/C,CAAG,CAAC;AACJ;AASA,IAAM,qBAAqB,CAAC,WAAW,MAAM,SAAS;AACpD,MAAI,kBAAkB,UAAU,SAAS,IAAI,IAAI;AACjD,SAAO,eAAe,UAAU,IAAI,cAAY;AAC9C,QAAI,MAAM,CAAA;AACV,UAAM,MAAM,MAAM,SAAS,OAAM,IAAK,SAAS,OAAM,IAAK;AAE1D,aAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC5B,UAAI,KAAK,oBAAoB,SAAS,QAAQ,MAAM,IAAI,eAAe,CAAC;IAC9E;AAEI,WAAO,gBAAgB,GAAG;EAC9B,CAAG,CAAC;AACJ;AAQA,IAAM,cAAc,CAAC,YAAY,cAAc;AAC7C,aAAW,OAAO,WAAW;AAC3B,QAAI,IAAI,SAAS,WAAW,SAAS,IAAI,OAAO,WAAW,KAAK;AAC9D;IACN;AAEI,QAAI,IAAI,QAAQ,KAAK,EAAE,MAAM,WAAW,QAAQ,KAAK,EAAE,GAAG;AACxD;IACN;AAEI,QAAI,eAAe,WAAW;AAK9B,UAAM,SAAS,UAAQ;AACrB,iBAAW,eAAe,cAAc;AACtC,YAAI,YAAY,UAAU,KAAK,SAAS,YAAY,WAAW,KAAK,QAAQ;AAC1E,iBAAO;QACjB;AAEQ,YAAI,KAAK,UAAU,KAAK,YAAY,UAAU,GAAG;AAC/C;QACV;AAOQ,YAAI,KAAK,QAAQ,YAAY,SAAS,KAAK,MAAM,YAAY,OAAO;AAClE,iBAAO;QACjB;AAEQ,YAAI,YAAY,QAAQ,KAAK,SAAS,YAAY,MAAM,KAAK,OAAO;AAClE,iBAAO;QACjB;MACA;AAEM,aAAO;IACb;AAEI,QAAI,WAAW,IAAI,MAAM,OAAO,MAAM;AAEtC,QAAI,SAAS,SAAS,GAAG;AACvB;IACN;AAEI,WAAO;EACX;AAEE,SAAO;AACT;AAEA,IAAM,WAAN,MAAe;EACb,cAAc;AAEZ,SAAK,QAAQ,CAAA;AAGb,SAAK,UAAU,CAAA;AACf,SAAK,QAAQ;AACb,SAAK,MAAM;EACf;EAME,IAAI,MAAM;AACR,QAAI,MAAM;AACR,WAAK,MAAM,KAAK,IAAI;AACpB,WAAK,QAAQ,KAAK,KAAK,MAAM;AAC7B,WAAK,QAAQ,KAAK,IAAI,KAAK,OAAO,KAAK,KAAK;AAC5C,WAAK,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,GAAG;IAC5C;EACA;EAEE,OAAO;AACL,WAAO,KAAK,MAAM,KAAK,MAAM,SAAS;EAC1C;EAEE,SAAS;AACP,WAAO,KAAK,MAAM;EACtB;EAOE,MAAM,UAAU,YAAY;AAC1B,QAAI,QAAQ,IAAI,SAAQ;AACxB,QAAI,QAAQ,KAAK,MAAM,KAAK,UAAU,KAAK,KAAK,CAAC;AACjD,QAAI,YAAY,MAAM,IAAG;AAEzB,eAAW,QAAQ,OAAO;AACxB,YAAM,IAAI,IAAI;IACpB;AAEI,QAAI,cAAc,WAAW,OAAO,UAAU,GAAG,WAAW,UAAU,KAAK;AAC3E,QAAI,iBAAiB,YAAY;AACjC,UAAM,IAAI;MACR,OAAO,UAAU;MACjB,KAAK,UAAU,QAAQ;MACvB,QAAQ;MACR,QAAQ;IACd,CAAK;AACD,WAAO;EACX;AAEA;AAkBA,IAAM,aAAa,SAAO;AACxB,aAAU;AACV,QAAM,UAAU,GAAG;AACnB,MAAI,UAAU;AACd,MAAI,YAAY,CAAC,IAAI,SAAQ,CAAE;AAE/B,WAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,QAAI,SAAS,IAAI,UAAU,CAAC;AAC5B,QAAI,QAAQ,OAAO,MAAM,cAAc;AACvC,UAAM,OAAO,IAAI,UAAU,GAAG,IAAI,CAAC;AACnC,UAAM,YAAY,QAAQ,MAAM,KAAK;AAGrC,QAAI,cAAc,CAAA;AAClB,QAAI,cAAc,oBAAI,IAAG;AAEzB,eAAW,YAAY,WAAW;AAChC,YAAM,aAAa,SAAS,KAAI;AAEhC,UAAI,CAAC,cAAc,WAAW,UAAU,KAAK,WAAW,OAAO,GAAG;AAEhE,YAAI,WAAW;AACb,gBAAM,MAAM,UAAU;AACtB,mBAAS,IAAI;YACX,OAAO;YACP,KAAK,IAAI;YACT,QAAQ;YACR,QAAQ;UACpB,CAAW;AACD,sBAAY,IAAI,GAAG;QAC7B,OAAe;AACL,mBAAS,IAAI;YACX,OAAO;YACP,KAAK,IAAI;YACT,QAAQ;YACR,QAAQ;UACpB,CAAW;AACD,sBAAY,IAAI,GAAG;QAC7B;MACA,WAAiB,WAAW;AACpB,YAAI,QAAQ,SAAS,MAAM,GAAG,UAAU;AACxC,cAAM,MAAM,UAAU;AACtB,cAAM,IAAI;UACR,OAAO;UACP,KAAK,IAAI;UACT,QAAQ;UACR,QAAQ;QAClB,CAAS;AACD,oBAAY,KAAK,KAAK;MAC9B,OAAa;AAGL,oBAAY,IAAI,GAAG;MAC3B;IACA;AAGI,QAAI,YAAY,SAAS,GAAG;AAE1B,oBAAc,YAAY,KAAK,CAAC,GAAG,MAAM;AACvC,eAAO,EAAE,OAAM,IAAK,EAAE,OAAM;MACpC,CAAO;AAED,eAAS,SAAS,aAAa;AAE7B,YAAI,YAAY,OAAO,SAAS,GAAG;AACjC;QACV;AAEQ,kBAAU,KAAK,KAAK;MAC5B;AAEM;IACN;AAMI,QAAI,IAAI,KAAK,YAAY,QAAQ,KAAK,CAAC,YAAY,IAAI,GAAG,GAAG;AAC3D,iBAAW,mBAAmB,WAAW,KAAK;AAC9C,UAAI,UAAU,IAAI,SAAQ;AAC1B,YAAM,UAAU,UAAU;AAE1B,UAAI,SAAS;AACX,gBAAQ,IAAI,QAAQ,KAAI,CAAE;MAClC;AAEM,kBAAY,CAAC,OAAO;IAC1B;EACA;AAEE,aAAW,mBAAmB,WAAW,IAAI;AAC7C,SAAO;AACT;AC3gBA,IAAM,UAAU,CAAC,KAAK,SAAS;AAC7B,MAAI,CAAC;AAAK;AACV,SAAO,IAAI;AACb;AAQA,IAAM,iBAAiB,CAAC,KAAK,SAAS;AACpC,MAAI,CAAC;AAAK;AACV,MAAI,MACA,QAAQ,KAAK,MAAM,GAAG;AAE1B,UAAQ,OAAO,MAAM,MAAK,OAAQ,MAAM,IAAI;AAAO;AAEnD,SAAO;AACT;AAOA,IAAM,aAAa,CAAC,OAAO,OAAO,WAAW;AAC3C,MAAI,OAAO;AACX,MAAI,CAAC;AAAO,WAAO;AACnB,UAAQ,QAAQ;AAChB,MAAI,MAAM,SAAS;AAAM,WAAO;AAChC,QAAM,MAAM,OAAO,MAAM,KAAK;AAC9B,MAAI,QAAQ;AAAI,WAAO;AACvB,UAAQ,MAAM,OAAO,SAAS,MAAM;AACpC,MAAI,QAAQ;AAAG,aAAS;AACxB,SAAO,QAAQ;AACjB;AAMA,IAAM,cAAc,CAAC,KAAK,QAAQ;AAChC,MAAI,QAAQ,IAAI;AAChB,MAAI,OAAO,SAAS;AAAY,WAAO;AAEvC,MAAI,SAAS,CAAC,MAAM,QAAQ,KAAK,GAAG;AAClC,QAAI,OAAO,CAAC,KAAK;EACrB;AACA;AAYA,IAAMC,YAAU,CAAC,QAAQ,aAAa;AACpC,MAAI,MAAM,QAAQ,MAAM,GAAG;AACzB,WAAO,QAAQ,QAAQ;EAC3B,OAAS;AACL,aAAS,OAAO,QAAQ;AACtB,UAAI,OAAO,eAAe,GAAG,GAAG;AAC9B,iBAAS,OAAO,MAAM,GAAG;MACjC;IACA;EACA;AACA;AACA,IAAM,MAAM,CAAC,GAAG,MAAM;AACpB,MAAI,OAAO,MAAM,YAAY,OAAO,MAAM,UAAU;AAClD,WAAO,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK;EACpC;AAEE,MAAI,UAAU,IAAI,EAAE,EAAE,YAAW;AACjC,MAAI,UAAU,IAAI,EAAE,EAAE,YAAW;AACjC,MAAI,IAAI;AAAG,WAAO;AAClB,MAAI,IAAI;AAAG,WAAO;AAClB,SAAO;AACT;ACrEA,IAAM,SAAN,MAAa;EASX,YAAY,OAAO,UAAU;AAC3B,SAAK,QAAQ;AACb,SAAK,WAAW;AAChB,SAAK,QAAQ;AACb,SAAK,WAAW,YAAY;MAC1B,YAAY;IAClB;EACA;EAOE,SAAS,OAAO,yBAAyB,SAAS;AAChD,QAAI,CAAC,SAAS,CAAC,MAAM;AAAQ,aAAO,CAAA;AACpC,UAAM,SAAS,CAAA;AACf,UAAM,QAAQ,MAAM,MAAM,KAAK;AAC/B,QAAI;AAEJ,QAAI,SAAS;AACX,oBAAc,IAAI,OAAO,OAAO,OAAO,KAAK,OAAO,EAAE,IAAI,YAAY,EAAE,KAAK,GAAG,IAAI,SAAU;IACnG;AAEI,UAAM,QAAQ,UAAQ;AACpB,UAAI;AACJ,UAAI,QAAQ;AACZ,UAAI,QAAQ;AAEZ,UAAI,gBAAgB,cAAc,KAAK,MAAM,WAAW,IAAI;AAC1D,gBAAQ,YAAY;AACpB,eAAO,YAAY;MAC3B;AAEM,UAAI,KAAK,SAAS,GAAG;AACnB,YAAI,KAAK,SAAS,YAAY;AAC5B,kBAAQ,WAAW,IAAI,KAAK;QACtC,OAAe;AACL,kBAAQ,aAAa,IAAI;QACnC;AAEQ,YAAI,SAAS;AAAyB,kBAAQ,QAAQ;MAC9D;AAEM,aAAO,KAAK;QACV,QAAQ;QACR,OAAO,QAAQ,IAAI,OAAO,OAAO,IAAI,IAAI;QACzC;MACR,CAAO;IACP,CAAK;AACD,WAAO;EACX;EAUE,iBAAiB,OAAO,SAAS;AAC/B,QAAI,SAAS,KAAK,cAAc,OAAO,OAAO;AAC9C,WAAO,KAAK,kBAAkB,MAAM;EACxC;EAOE,kBAAkB,QAAQ;AACxB,UAAM,SAAS,OAAO,QAChB,cAAc,OAAO;AAE3B,QAAI,CAAC,aAAa;AAChB,aAAO,WAAY;AACjB,eAAO;MACf;IACA;AAEI,UAAM,SAAS,OAAO,QAAQ,QACxB,UAAU,OAAO,SACjB,cAAc,OAAO,QACrB,YAAY,OAAO;AAEzB,QAAI,CAAC,aAAa;AAChB,aAAO,WAAY;AACjB,eAAO;MACf;IACA;AAQI,UAAM,cAAc,WAAY;AAC9B,UAAI,gBAAgB,GAAG;AACrB,eAAO,SAAU,OAAO,MAAM;AAC5B,gBAAM,QAAQ,OAAO,GAAG;AACxB,iBAAO,WAAW,UAAU,MAAM,KAAK,GAAG,OAAO,QAAQ,UAAU,CAAC;QAC9E;MACA;AAEM,aAAO,SAAU,OAAO,MAAM;AAC5B,YAAI,MAAM;AAEV,YAAI,MAAM,OAAO;AACf,gBAAM,QAAQ,UAAU,MAAM,MAAM,KAAK;AAEzC,cAAI,CAAC,MAAM,SAAS,OAAO;AACzB,mBAAO,IAAI;UACvB,OAAiB;AACL,mBAAO,WAAW,OAAO,OAAO,CAAC;UAC7C;QACA,OAAe;AACLA,oBAAQ,SAAS,CAAC,QAAQ,UAAU;AAClC,mBAAO,WAAW,UAAU,MAAM,KAAK,GAAG,OAAO,MAAM;UACnE,CAAW;QACX;AAEQ,eAAO,MAAM;MACrB;IACA,EAAK;AAED,QAAI,gBAAgB,GAAG;AACrB,aAAO,SAAU,MAAM;AACrB,eAAO,YAAY,OAAO,IAAI,IAAI;MAC1C;IACA;AAEI,QAAI,OAAO,QAAQ,gBAAgB,OAAO;AACxC,aAAO,SAAU,MAAM;AACrB,YAAI,OACA,MAAM;AAEV,iBAAS,SAAS,QAAQ;AACxB,kBAAQ,YAAY,OAAO,IAAI;AAC/B,cAAI,SAAS;AAAG,mBAAO;AACvB,iBAAO;QACjB;AAEQ,eAAO,MAAM;MACrB;IACA,OAAW;AACL,aAAO,SAAU,MAAM;AACrB,YAAI,MAAM;AACVA,kBAAQ,QAAQ,WAAS;AACvB,iBAAO,YAAY,OAAO,IAAI;QACxC,CAAS;AACD,eAAO,MAAM;MACrB;IACA;EACA;EASE,gBAAgB,OAAO,SAAS;AAC9B,QAAI,SAAS,KAAK,cAAc,OAAO,OAAO;AAC9C,WAAO,KAAK,iBAAiB,MAAM;EACvC;EAEE,iBAAiB,QAAQ;AACvB,QAAI,gBACA,YAAY,CAAA;AAChB,UAAM,OAAO,MACP,UAAU,OAAO,SACjB,OAAO,CAAC,OAAO,SAAS,QAAQ,aAAa,QAAQ,aAAa,QAAQ;AAEhF,QAAI,OAAO,QAAQ,YAAY;AAC7B,aAAO,KAAK,KAAK,IAAI;IAC3B;AAQI,UAAM,YAAY,SAASC,WAAU,MAAM,QAAQ;AACjD,UAAI,SAAS;AAAU,eAAO,OAAO;AACrC,aAAO,OAAO,UAAU,KAAK,MAAM,OAAO,KAAK,IAAI;IACzD;AAGI,QAAI,MAAM;AACR,eAAS,KAAK,MAAM;AAClB,YAAI,OAAO,SAAS,EAAE,UAAU,UAAU;AACxC,oBAAU,KAAK,CAAC;QAC1B;MACA;IACA;AAII,QAAI,OAAO,OAAO;AAChB,uBAAiB;AAEjB,eAAS,OAAO,WAAW;AACzB,YAAI,IAAI,UAAU,UAAU;AAC1B,2BAAiB;AACjB;QACV;MACA;AAEM,UAAI,gBAAgB;AAClB,kBAAU,QAAQ;UAChB,OAAO;UACP,WAAW;QACrB,CAAS;MACT;IAEA,OAAW;AACL,kBAAY,UAAU,OAAO,SAAO,IAAI,UAAU,QAAQ;IAChE;AAGI,UAAM,kBAAkB,UAAU;AAElC,QAAI,CAAC,iBAAiB;AACpB,aAAO;IACb;AAEI,WAAO,SAAU,GAAG,GAAG;AACrB,UAAI,QAAQ;AAEZ,eAAS,YAAY,WAAW;AAC9B,gBAAQ,SAAS;AACjB,YAAI,aAAa,SAAS,cAAc,SAAS,KAAK;AACtD,iBAAS,aAAa,IAAI,UAAU,OAAO,CAAC,GAAG,UAAU,OAAO,CAAC,CAAC;AAClE,YAAI;AAAQ,iBAAO;MAC3B;AAEM,aAAO;IACb;EACA;EAQE,cAAc,OAAO,UAAU;AAC7B,UAAM,UAAU,CAAA;AAChB,QAAI,UAAU,OAAO,OAAO,CAAA,GAAI,QAAQ;AACxC,gBAAY,SAAS,MAAM;AAC3B,gBAAY,SAAS,YAAY;AAEjC,QAAI,QAAQ,QAAQ;AAClB,kBAAY,SAAS,QAAQ;AAC7B,YAAM,SAAS,CAAA;AACf,cAAQ,OAAO,QAAQ,WAAS;AAC9B,YAAI,OAAO,SAAS,UAAU;AAC5B,kBAAQ;YACN;YACA,QAAQ;UACpB;QACA;AAEQ,eAAO,KAAK,KAAK;AACjB,gBAAQ,MAAM,SAAS,YAAY,QAAQ,MAAM,SAAS;MAClE,CAAO;AACD,cAAQ,SAAS;IACvB;AAEI,WAAO;MACL;MACA,OAAO,MAAM,YAAW,EAAG,KAAI;MAC/B,QAAQ,KAAK,SAAS,OAAO,QAAQ,yBAAyB,OAAO;MACrE,OAAO;MACP,OAAO,CAAA;MACP;MACA,WAAW,QAAQ,UAAU,iBAAiB;IACpD;EACA;EAME,OAAO,OAAO,SAAS;AACrB,QAAI,OAAO,MACP,OACA;AACJ,aAAS,KAAK,cAAc,OAAO,OAAO;AAC1C,cAAU,OAAO;AACjB,YAAQ,OAAO;AAEf,UAAM,WAAW,QAAQ,SAAS,KAAK,kBAAkB,MAAM;AAG/D,QAAI,MAAM,QAAQ;AAChBD,gBAAQ,KAAK,OAAO,CAAC,MAAM,OAAO;AAChC,gBAAQ,SAAS,IAAI;AAErB,YAAI,QAAQ,WAAW,SAAS,QAAQ,GAAG;AACzC,iBAAO,MAAM,KAAK;YAChB,SAAS;YACT,MAAM;UAClB,CAAW;QACX;MACA,CAAO;IACP,OAAW;AACLA,gBAAQ,KAAK,OAAO,CAAC,GAAG,OAAO;AAC7B,eAAO,MAAM,KAAK;UAChB,SAAS;UACT,MAAM;QAChB,CAAS;MACT,CAAO;IACP;AAEI,UAAM,UAAU,KAAK,iBAAiB,MAAM;AAE5C,QAAI;AAAS,aAAO,MAAM,KAAK,OAAO;AAEtC,WAAO,QAAQ,OAAO,MAAM;AAE5B,QAAI,OAAO,QAAQ,UAAU,UAAU;AACrC,aAAO,QAAQ,OAAO,MAAM,MAAM,GAAG,QAAQ,KAAK;IACxD;AAEI,WAAO;EACX;AAEA;AC/RO,IAAMA,UAAU,CAACE,QAA8BhD,aAAsC;AAE3F,MAAKmC,MAAMC,QAAQY,MAAd,GAAuB;AAC3BA,WAAO9C,QAAQF,QAAf;EAEA,OAAI;AAEJ,aAASiC,OAAOe,QAAQ;AACvB,UAAIA,OAAOT,eAAeN,GAAtB,GAA4B;AAC/BjC,iBAASgD,OAAOf,MAAMA,GAAd;MACR;IACD;EACD;AACD;AChFM,IAAMgB,SAAWC,WAA2B;AAE9CA,MAAAA,MAAMC,QAAQ;AACVD,WAAAA,MAAM;EACb;AAEGA,MAAAA,iBAAiBE,aAAa;AACjC,WAAOF;EACP;AAED,MAAIG,aAAaH,KAAD,GAAS;AACxB,QAAII,MAAMC,SAASC,cAAc,UAAvB;AACVF,QAAIG,YAAYP,MAAMQ,KAAN;AAChB,WAAOJ,IAAIK,QAAQC;EACnB;AAED,SAAOL,SAASM,cAAcX,KAAvB;AACP;AAEM,IAAMG,eAAgBS,SAAqB;AACjD,MAAI,OAAOA,QAAQ,YAAYA,IAAI7C,QAAQ,GAAZ,IAAmB,IAAI;AACrD,WAAO;EACP;AACD,SAAO;AACP;AAEM,IAAM8C,cAAeb,WAAwB;AACnD,SAAOA,MAAMc,QAAQ,WAAW,MAAzB;AACP;AAMM,IAAMC,eAAe,CAAEC,QAAoBC,eAA4B;AAC7E,MAAIhE,QAAQoD,SAASa,YAAY,YAArB;AACZjE,QAAMkE,UAAUF,YAAY,MAAM,KAAlC;AACAD,SAAOI,cAAcnE,KAArB;AACA;AAMM,IAAMoE,WAAW,CAAEL,QAAoBM,QAA8C;AAC3FC,SAAOC,OAAOR,OAAOS,OAAOH,GAA5B;AACA;AAOM,IAAMI,aAAa,CAAEC,UAAoCC,YAAiC;AAEhG,MAAIC,eAAgBC,aAAaF,OAAD;AAChCD,UAAWI,YAAYJ,KAAD;AAEtBA,QAAMK,IAAKC,QAAM;AAChBJ,iBAAaG,IAAKE,SAAO;AACxBD,SAAGE,UAAUC,IAAKF,GAAlB;IACA,CAFD;EAGA,CAJD;AAKA;AAMO,IAAMG,gBAAgB,CAAEV,UAAoCC,YAAiC;AAEnG,MAAIC,eAAgBC,aAAaF,OAAD;AACjCD,UAAWI,YAAYJ,KAAD;AAEtBA,QAAMK,IAAKC,QAAM;AAChBJ,iBAAaG,IAAIE,SAAO;AACtBD,SAAGE,UAAUG,OAAQJ,GAArB;IACD,CAFD;EAGC,CAJF;AAKC;AAOK,IAAMJ,eAAgB7D,UAAsC;AAC9D2D,MAAAA,UAAmB,CAAA;AACvBhC,UAAS3B,MAAOsE,cAAY;AAC3B,QAAI,OAAOA,aAAa,UAAU;AACjCA,iBAAWA,SAAS/B,KAAT,EAAgBzD,MAAM,mBAAtB;IACX;AACD,QAAIkC,MAAMC,QAAQqD,QAAd,GAAyB;AAC5BX,gBAAUA,QAAQY,OAAOD,QAAf;IACV;EACD,CAPM;AASP,SAAOX,QAAQa,OAAOC,OAAf;AACP;AAOM,IAAMX,cAAenB,SAAuB;AAClD,MAAI,CAAC3B,MAAMC,QAAQ0B,GAAd,GAAoB;AACvBA,UAAM,CAACA,GAAD;EACN;AACF,SAAOA;AACP;AAQM,IAAM+B,cAAc,CAAEC,QAAyBC,UAAiBC,YAA2C;AAE7GA,MAAAA,WAAW,CAACA,QAAQC,SAASH,MAAjB,GAA0B;AACzC;EACA;AAED,SAAOA,UAAUA,OAAOI,SAAS;AAEhC,QAAIJ,OAAOI,QAAQH,QAAf,GAA0B;AAC7B,aAAOD;IACP;AAEDA,aAASA,OAAOK;EAChB;AACD;AAUM,IAAMC,UAAU,CAAEC,MAA0BC,YAAiB,MAAW;AAE1EA,MAAAA,YAAY,GAAG;AAClB,WAAOD,KAAKA,KAAKvF,SAAO;EACxB;AAEMuF,SAAAA,KAAK;AACZ;AAMM,IAAME,gBAAiBC,SAAuB;AAC5C/B,SAAAA,OAAOgC,KAAKD,GAAZ,EAAiB1F,WAAW;AACpC;AAOM,IAAM4F,YAAY,CAAEvB,IAAiBwB,YAA4B;AACvE,MAAI,CAACxB;AAAI,WAAO;AAEhBwB,YAAUA,WAAWxB,GAAGyB;AAEpBC,MAAAA,IAAI;AACR,SAAO1B,KAAKA,GAAG2B,wBAAwB;AAEtC,QAAI3B,GAAGe,QAAQS,OAAX,GAAqB;AACxBE;IACA;EACD;AACD,SAAOA;AACP;AAOM,IAAME,UAAU,CAAC5B,IAAW6B,UAAgD;AAClFlE,UAASkE,OAAM,CAACC,KAAIC,SAAS;AACxBD,QAAAA,OAAO,MAAM;AAChB9B,SAAGgC,gBAAgBD,IAAnB;IACA,OAAI;AACJ/B,SAAGiC,aAAaF,MAAgB,KAAGD,GAAnC;IACA;EACD,CANM;AAOP;AAMM,IAAMI,cAAc,CAAEC,UAAeC,gBAAsB;AACjE,MAAID,SAASnB;AAAamB,aAASnB,WAAWqB,aAAaD,aAAaD,QAA9C;AAC1B;ACtMM,IAAMG,YAAY,CAACC,SAAqBC,UAAwB;AAEtE,MAAIA,UAAU;AAAO;AAGrB,MAAI,OAAOA,UAAU,UAAU;AAE9B,QAAI,CAACA,MAAM7G;AAAS;AACpB6G,YAAQ,IAAIC,OAAOD,OAAO,GAAlB;EACR;AAKKE,QAAAA,gBAAkBC,UAAsB;AAEzCC,QAAAA,QAAQD,KAAKE,KAAKD,MAAMJ,KAAhB;AACRI,QAAAA,SAASD,KAAKE,KAAKlH,SAAS,GAAG;AAClC,UAAImH,WAAY1E,SAASC,cAAc,MAAvB;AAChByE,eAASC,YAAY;AACjBC,UAAAA,YAAaL,KAAKM,UAAUL,MAAMM,KAArB;AAEjBF,gBAAUC,UAAUL,MAAM,GAAIjH,MAA9B;AACA,UAAIwH,cAAeH,UAAUI,UAAU,IAApB;AAEnBN,eAASO,YAAYF,WAArB;AACAjB,kBAAYc,WAAWF,QAAZ;AACX,aAAO;IACP;AAED,WAAO;EACP;AAIKQ,QAAAA,oBAAsBX,UAAuB;AAClD,QAAIA,KAAKY,aAAa,KAAKZ,KAAKa,cAAc,CAAC,kBAAkBC,KAAKd,KAAKe,OAA5B,MAA0Cf,KAAKI,cAAc,eAAeJ,KAAKe,YAAY,SAAU;AACrJ1G,YAAM2G,KAAKhB,KAAKa,UAAhB,EAA4BzI,QAAQwH,CAAAA,aAAW;AAC9CqB,2BAAmBrB,QAAD;MAClB,CAFD;IAGA;EACD;AAGKqB,QAAAA,qBAAuBjB,UAA8B;AAE1D,QAAIA,KAAKY,aAAa,GAAG;AACjBb,aAAAA,cAAcC,IAAD;IACpB;AAEDW,sBAAkBX,IAAD;AAEjB,WAAO;EACP;AAEDiB,qBAAoBrB,OAAF;AAClB;AAMM,IAAMsB,kBAAmB7D,QAAmB;AAClD,MAAI8D,WAAW9D,GAAG+D,iBAAiB,gBAApB;AACf/G,QAAMgH,UAAUjJ,QAAQkJ,KAAKH,UAAU,SAAS9D,KAAe;AAC9D,QAAIkE,SAASlE,IAAGgB;AAChBkD,WAAO7B,aAAarC,IAAGvB,YAAoBuB,GAA3C;AACAkE,WAAOC,UAAP;EACA,CAJD;AAKA;AChFM,IAAMC,QAAW;AACjB,IAAMC,aAAe;AACrB,IAAMC,UAAY;AAClB,IAAMC,WAAa;AACnB,IAAMC,SAAY;AAClB,IAAMC,YAAc;AACpB,IAAMC,WAAa;AACnB,IAAMC,gBAAiB;AACvB,IAAMC,aAAe;AACrB,IAAMC,UAAY;AAElB,IAAMC,SAAgB,OAAOC,cAAc,cAAc,QAAQ,MAAMtB,KAAKsB,UAAUC,SAArB;AACjE,IAAMC,eAAgBH,SAAS,YAAY;ACXlD,IAAA,WAAe;EACd3H,SAAS,CAAA;EACT+H,WAAW,CAAA;EAEX7I,SAAS,CAAA;EACT8I,WAAW;EACXC,SAAS;EACTC,SAAS;EACTC,YAAY;EACZC,QAAQ;EACRC,cAAc;EACdC,cAAc;EACdnD,WAAW;EACXoD,aAAa;EACbC,YAAY;EACZC,YAAY;EACZC,UAAU;EACVC,cAAc;EACdC,YAAY;EACZC,eAAe;EACfC,aAAa;EACbC,SAAS;EACTC,kBAAkB;EAGlBC,cAAc;EACdC,cAAc;EAEdC,UAAU;EACVC,eAAe;EACfC,YAAY;EACZC,YAAY;EACZC,eAAe;EACfC,oBAAoB;EACpBC,oBAAoB;EACpBC,mBAAmB;EAEnBC,WAAW;EACXC,aAAa,CAAC,MAAD;EACbC,mBAAmB;EAEnBC,MAAM;EACNC,cAAc;EACdC,cAAc;EACdC,eAAe;EACfC,sBAAsB;EACtBC,WAAW;EACXC,aAAa;EAEbC,gBAAgB;EAChBC,cAAc;EAEdC,uBAAuB;EAEvBC,aAAa;EACbC,iBAAiB;EAEjBC,YAAY,SAAS9J,OAAqB;AACzC,WAAOA,MAAMpC,SAAS;EACtB;EAsBDmM,QAAQ,CAAA;AAjFM;ACkBR,IAAMC,WAAYC,WAA2D;AAC/E,MAAA,OAAOA,UAAU,eAAeA,UAAU;AAAM,WAAO;AACpDC,SAAAA,SAASD,KAAD;AACf;AAEM,IAAMC,WAAYD,WAAuC;AAC3D,MAAA,OAAOA,UAAU;AAAW,WAAOA,QAAQ,MAAM;AAC9CA,SAAAA,QAAQ;AACf;AAMM,IAAME,cAAeC,SAAsB;AACjD,UAAQA,MAAM,IACZtJ,QAAQ,MAAM,OADT,EAELA,QAAQ,MAAM,MAFT,EAGLA,QAAQ,MAAM,MAHT,EAILA,QAAQ,MAAM,QAJT;AAKP;AAOM,IAAMuJ,eAAe,CAACxL,IAAmDyL,UAAiB;AAChG,MAAIC;AACJ,SAAO,SAAyBN,OAAanN,UAA0B;AAClEoB,QAAAA,OAAO;AAEX,QAAIqM,SAAS;AACZrM,WAAKsM,UAAUC,KAAKC,IAAIxM,KAAKsM,UAAU,GAAG,CAA3B;AACfG,mBAAaJ,OAAD;IACZ;AACDA,cAAUK,WAAW,WAAW;AAC/BL,gBAAU;AACVrM,WAAK2M,eAAeZ,SAAS;AAC7BpL,SAAGqH,KAAKhI,MAAM+L,OAAOnN,QAArB;IAEA,GAAEwN,KALiB;EAMpB;AACD;AAQM,IAAMQ,kBAAkB,CAAE5M,MAAgB6M,OAAgBlM,OAAmB;AACnF,MAAImM;AACJ,MAAIhN,UAAUE,KAAKF;AACnB,MAAIiN,aAAoC,CAAA;AAGxC/M,OAAKF,UAAU,WAAU;AACxB,QAAIgN,QAAOrN,UAAU;AACjBoN,QAAAA,MAAMhN,QAAQiN,KAAd,MAAwB,IAAI;AAC/BC,iBAAWD,SAAQrN;IACnB,OAAM;AACN,aAAOK,QAAQG,MAAMD,MAAMP,SAApB;IACP;EACD;AAGDkB,KAAGV,MAAMD,MAAM,CAAA,CAAf;AACAA,OAAKF,UAAUA;AAGVgN,OAAAA,QAAQD,OAAO;AACfC,QAAAA,QAAQC,YAAY;AACvBjN,cAAQG,MAAMD,MAAM+M,WAAWD,KAA/B;IACA;EACD;AACD;AAUM,IAAME,eAAgBC,WAA6D;AAClF,SAAA;IACNC,OAAQD,MAAME,kBAAkB;IAChCzN,SAAUuN,MAAMG,gBAAc,MAAMH,MAAME,kBAAgB;EAFpD;AAIP;AAOM,IAAME,iBAAiB,CAACC,KAAYC,OAAa,UAAe;AACtE,MAAID,KAAK;AACRA,QAAID,eAAJ;AACA,QAAIE,MAAM;AACTD,UAAIE,gBAAJ;IACA;EACD;AACD;AAOM,IAAMC,WAAW,CAAC/I,QAAoBoI,MAAalO,UAA6CsC,YAAyB;AAC/HwD,SAAOgJ,iBAAiBZ,MAAKlO,UAASsC,OAAtC;AACA;AASM,IAAMyM,YAAY,CAAEC,UAA2CN,QAAmC;AAEpG,MAAA,CAACA,KAAK;AACT,WAAO;EACP;AAED,MAAI,CAACA,IAAIM,WAAW;AACnB,WAAO;EACP;AAED,MAAIC,SAASP,IAAIQ,SAAO,IAAE,MAAMR,IAAIS,UAAQ,IAAE,MAAMT,IAAIU,WAAS,IAAE,MAAMV,IAAIW,UAAQ,IAAE;AAEnFJ,MAAAA,UAAU,GAAG;AAChB,WAAO;EACP;AAED,SAAO;AACP;AAQM,IAAMK,QAAQ,CAACnK,IAAWoK,OAAc;AAC9C,QAAMC,cAAcrK,GAAGsK,aAAa,IAAhB;AACpB,MAAID,aAAa;AAChB,WAAOA;EACP;AAEDrK,KAAGiC,aAAa,MAAKmI,EAArB;AACA,SAAOA;AACP;AAMM,IAAMG,aAAcpC,SAAsB;AAChD,SAAOA,IAAItJ,QAAQ,WAAW,MAAvB;AACP;AAKM,IAAM2L,SAAS,CAAEtG,QAAiCvB,SAA0C;AAClG,MAAIA;AAAOuB,WAAOsG,OAAO7H,IAAd;AACX;ACvLc,SAAS8H,YAAavB,OAAgBwB,eAAwD;AACxGnO,MAAAA,WAAuB+C,OAAOC,OAAO,CAAA,GAAIoL,UAAUD,aAA5B;AAE3B,MAAIE,YAAerO,SAAS+J;AAC5B,MAAIuE,cAAiBtO,SAASkK;AAC9B,MAAIqE,cAAiBvO,SAASiK;AAC9B,MAAIuE,iBAAmBxO,SAASmK;AAChC,MAAIsE,iBAAmBzO,SAASgK;AAChC,MAAI0E,uBAAuB1O,SAASoK;AACpC,MAAIuE,uBAAuB3O,SAASqK;AAEpC,MAAIuE,WAAcjC,MAAMxF,QAAQ0H,YAAd;AAClB,MAAIzD,cAAiBuB,MAAMoB,aAAa,aAAnB,KAAqCpB,MAAMoB,aAAa,kBAAnB;AAE1D,MAAI,CAAC3C,eAAe,CAACpL,SAAS4J,kBAAkB;AAC/C,QAAIkF,SAAUnC,MAAMxK,cAAc,kBAApB;AACd,QAAI2M,QAAQ;AACX1D,oBAAc0D,OAAOC;IACrB;EAED;AAED,MAAIC,mBAMA;IACH5D;IACAxK,SAAW,CAAA;IACX+H,WAAY,CAAA;IACZsG,OAAS,CAAA;IACT3F,UAAW;EALR;AAaA4F,MAAAA,cAAc,MAAM;AACvB,QAAI/H;AACJ,QAAIvG,UAAUoO,iBAAiBpO;AAC3BuO,QAAAA,aAAgC,CAAA;AAChCC,QAAAA,cAAc;AAEdC,QAAAA,WAAY5L,QAA6B;AAE5C,UAAI6C,OAAOvD,OAAOC,OAAO,CAAA,GAAGS,GAAG6L,OAApB;AACX,UAAIC,OAAOlB,aAAa/H,KAAK+H;AAEzB,UAAA,OAAOkB,SAAS,YAAYA,KAAKnQ,QAAQ;AAC5CkH,eAAOvD,OAAOC,OAAOsD,MAAKkJ,KAAKC,MAAMF,IAAX,CAAnB;MACP;AAED,aAAOjJ;IACP;AAED,QAAIoJ,YAAY,CAACZ,QAA0Ba,UAAkB;AAE5D,UAAIlE,QAAQD,SAASsD,OAAOrD,KAAR;AACfA,UAAAA,SAAS;AAAO;AAChB,UAAA,CAACA,SAAS,CAACzL,SAAS4J;AAAkB;AAM3C,UAAIuF,WAAWtO,eAAe4K,KAA1B,GAAkC;AACrC,YAAIkE,OAAO;AACNC,cAAAA,MAAMT,WAAW1D,OAAOgD;AACxB,cAAA,CAACmB,KAAK;AACTT,uBAAW1D,OAAOgD,kBAAkBkB;UACpC,WAAU,CAAClP,MAAMC,QAAQkP,GAAd,GAAoB;AAC/BT,uBAAW1D,OAAOgD,kBAAkB,CAACmB,KAAKD,KAAN;UACpC,OAAM;AACNC,gBAAI5Q,KAAK2Q,KAAT;UACA;QACD;MAED,OAAI;AAEJ,YAAIE,cAA0BR,SAASP,MAAD;AACtCe,oBAAYvB,eAAkBuB,YAAYvB,gBAAgBQ,OAAOC;AACjEc,oBAAYtB,eAAkBsB,YAAYtB,gBAAgB9C;AAC1DoE,oBAAYrB,kBAAkBqB,YAAYrB,mBAAmBM,OAAOgB;AACpED,oBAAYpB,kBAAkBoB,YAAYpB,mBAAmBkB;AAC7DE,oBAAYE,UAAYjB;AAExBK,mBAAW1D,SAASoE;AACpBjP,gBAAQ5B,KAAK6Q,WAAb;MACA;AAEGf,UAAAA,OAAOkB,UAAU;AACpBhB,yBAAiBC,MAAMjQ,KAAKyM,KAA5B;MACA;IACD;AAEGwE,QAAAA,WAAaC,cAAkC;AAC9CrC,UAAAA,IAAWsC;AAEfA,sBAAsBd,SAASa,QAAD;AAC9BC,oBAAczB,wBAAyByB,cAAczB,yBAAyBwB,SAASnC,aAAa,OAAtB,KAAkC;AAChHoC,oBAAcxB,wBAAyBwB,cAAcxB,yBAAyBS;AAC9Ee,oBAAc3B,kBAAoB2B,cAAc3B,mBAAmB0B,SAASJ;AAC5Ed,uBAAiBrG,UAAU3J,KAAKmR,aAAhC;AAEAtC,WAAKsC,cAAcxB;AAEnBvN,cAAQ8O,SAASE,UAAWtB,YAAS;AACpCY,kBAAUZ,QAA6BjB,EAA9B;MACT,CAFM;IAIP;AAEDmB,qBAAiB1F,WAAWqD,MAAM0D,aAAa,UAAnB,IAAiC,OAAO;AAEpEjP,YAAQuL,MAAMyD,UAAUE,WAAQ;AAC/BnJ,gBAAUmJ,MAAMnJ,QAAQ0H,YAAd;AACN1H,UAAAA,YAAY,YAAY;AAC3B8I,iBAASK,KAAD;MACR,WAAUnJ,YAAY,UAAU;AAChCuI,kBAAUY,KAAD;MACT;IACD,CAPM;EASP;AAOGC,MAAAA,eAAe,MAAM;AACxB,UAAMC,WAAW7D,MAAMoB,aAAaM,SAAnB;AAEb,QAAA,CAACmC,UAAU;AACV/E,UAAAA,QAAQkB,MAAMlB,MAAMzJ,KAAZ,KAAsB;AAC9B,UAAA,CAAChC,SAAS4J,oBAAoB,CAAC6B,MAAMrM;AAAQ;AAC3CqR,YAAAA,SAAShF,MAAMlN,MAAMyB,SAAS4I,SAArB;AAEfxH,cAASqP,QAAShF,CAAAA,WAAU;AACrBqD,cAAAA,SAAmB,CAAA;AACzBA,eAAOR,eAAe7C;AACtBqD,eAAOP,eAAe9C;AACtBuD,yBAAiBpO,QAAQ5B,KAAK8P,MAA9B;MACA,CALM;AAMPE,uBAAiBC,QAAQwB;IACzB,OAAM;AACNzB,uBAAiBpO,UAAU4O,KAAKC,MAAMe,QAAX;AAC3BpP,cAAS4N,iBAAiBpO,SAAU8P,SAAQ;AAC3C1B,yBAAiBC,MAAMjQ,KAAK0R,IAAInC,YAAhC;MACA,CAFM;IAGP;EACD;AAGGK,MAAAA,aAAa,UAAU;AAC1BM,gBAAW;EACX,OAAM;AACNqB,iBAAY;EACZ;AAEMxN,SAAAA,OAAOC,OAAQ,CAAA,GAAIoL,UAAUY,kBAAkBb,aAA/C;AACP;ACpID,IAAIwC,aAAa;AAEF,IAAMC,YAAN,cAAwBhR,YAAYlB,UAAD,EAAY;EAiD7DC,YAAakS,WAA4BC,eAA6C;AACrF,UAAA;AADqF,SA/C/EC,gBA+C+E;AAAA,SA9C/EzM,UA8C+E;AAAA,SA7C/E0M,WA6C+E;AAAA,SA5C/EC,UA4C+E;AAAA,SA3C/EC,mBA2C+E;AAAA,SA1C/EC,aA0C+E;AAxC/EC,SAAAA,QAAqB;AAwC0D,SAvC/EpR,WAuC+E;AAAA,SAtC/E2M,QAsC+E;AAAA,SArC/E0E,WAqC+E;AAAA,SApC/EC,gBAoC+E;AAAA,SAnC/EC,MAmC+E;AAAA,SAlC9EC,UAkC8E;AAAA,SAhC9EC,WAgC8E;AAAA,SA/B/EC,SA+B+E;AA5B/EC,SAAAA,SAAuB;AACvBC,SAAAA,aAA0B;AA2BqD,SA1B/EC,aA0B+E;AAzB/EC,SAAAA,YAAyB;AACzBC,SAAAA,UAAwB;AACxBC,SAAAA,WAAyB;AACzBC,SAAAA,YAAyB;AACzBC,SAAAA,gBAA4B;AAC5BC,SAAAA,UAAwB;AACxBC,SAAAA,cAA2B;AAC3BC,SAAAA,cAA2B;AAC3BC,SAAAA,aAA0B;AAiBqD,SAhB/EC,iBAgB+E;AAf/EC,SAAAA,YAAwB;AACxBC,SAAAA,WAAwB;AACxBzG,SAAAA,UAAuB;AACvBK,SAAAA,iBAAgD,CAAA;AAEhDqG,SAAAA,eAAqC;AACrCC,SAAAA,cAA6B,CAAA;AAE7BhK,SAAAA,YAA4B,CAAA;AAC5B/H,SAAAA,UAA2B,CAAA;AAC3BgS,SAAAA,cAA0C,CAAA;AAC1C3D,SAAAA,QAAuB,CAAA;AAO7B0B;AAEA,QAAIkC;AACJ,QAAIlG,QAAWpL,OAAQsP,SAAF;AAEjBlE,QAAAA,MAAMmG,WAAW;AACpB,YAAM,IAAI7R,MAAM,gDAAV;IACN;AAGD0L,UAAMmG,YAAc;AAIpB,QAAIC,gBAAiBC,OAAOC,oBAAoBD,OAAOC,iBAAiBtG,OAAO,IAA/B;AAChDkG,UAAWE,cAAcG,iBAAiB,WAA/B;AAGX,UAAMlT,WAAakO,YAAavB,OAAOmE,aAAT;AACzB9Q,SAAAA,WAAaA;AACb2M,SAAAA,QAAWA;AAChB,SAAK0E,WAAa1E,MAAM0E,YAAY;AAC/BC,SAAAA,gBAAiB3E,MAAMxF,QAAQ0H,YAAd,MAAgC;AACtD,SAAK0C,MAAS,OAAOrK,KAAK2L,GAAZ;AACTrB,SAAAA,UAAY5D,MAAMjB,OAAO,eAAagE,UAArB;AACtB,SAAKkB,aAAelF,MAAMwG;AAI1B,SAAKzB,SAAS,IAAI0B,OAAO,KAAKxS,SAAS;MAACmI,YAAY/I,SAAS+I;IAAtB,CAAzB;AAGd/I,aAAS0K,OAAO1K,SAAS0K,SAAS1K,SAASsJ,aAAa,IAAI,WAAW;AACvE,QAAI,OAAOtJ,SAASuJ,iBAAiB,WAAW;AAC/CvJ,eAASuJ,eAAevJ,SAAS0K,SAAS;IAC1C;AAED,QAAI,OAAO1K,SAASqL,oBAAoB,WAAW;AAClDrL,eAASqL,kBAAkBrL,SAAS0K,SAAS;IAC7C;AAGD,QAAIzG,SAASjE,SAASkJ;AACtB,QAAI,OAAOjF,WAAW,YAAY;AAEjC,UAAI,OAAOA,WAAW,UAAU;AAC/BA,iBAAS,IAAIiC,OAAOjC,MAAX;MACT;AAEGA,UAAAA,kBAAkBiC,QAAQ;AAC7BlG,iBAASkJ,eAAgByD,CAAAA,WAAW1I,OAAkBiD,KAAKyF,MAAxB;MACnC,OAAI;AACJ3M,iBAASkJ,eAAgBuC,WAAU;AAC3B,iBAAA,KAAKzL,SAASwJ,cAAc,CAAC,KAAK5I,QAAQ6K;QACjD;MACD;IACD;AAGD,SAAKnL,kBAAkBN,SAASF,OAAhC;AACA,SAAKuT,eAAL;AACKC,SAAAA,eAAL;AAIA,UAAMhP,UAAY/C,OAAO,OAAD;AACxB,UAAM0P,UAAY1P,OAAO,OAAD;AACxB,UAAMyP,WAAa,KAAKuC,QAAQ,UAAb;AACnB,UAAMrC,mBAAmB3P,OAAQ,oCAAF;AAEzB6B,UAAAA,UAAY,KAAKuJ,MAAMoB,aAAa,OAAxB,KAAoC;AACtD,UAAMyF,YAAcxT,SAAS0K;AAE7B,QAAIqG;AAGJ7N,eAAYoB,SAAStE,SAAS2K,cAAcvH,SAASoQ,SAA3C;AAGVtQ,eAAW+N,SAAQjR,SAAS4K,YAAlB;AACVqD,WAAQ3J,SAAS2M,OAAX;AAGN/N,eAAW8N,UAAUhR,SAAS6K,eAAe2I,SAAnC;AACNxT,QAAAA,SAASmL,uBAAuB;AACnCjI,iBAAY8N,UAAU5N,OAAZ;IACV;AAGDF,eAAWgO,kBAAkBlR,SAAS8K,oBAA5B;AACVmD,WAAQ+C,UAAUE,gBAAZ;AAEN3P,WAAQvB,SAASiL,kBAAkB3G,OAA7B,EAAuCwC,YAAakK,QAA1D;AAIA,QAAIrP,aAAa3B,SAASkL,YAAV,GAAyB;AACxC6F,sBAAiBxP,OAAOvB,SAASkL,YAAV;AAGnB5F,UAAAA,QAAQ,CAAC,eAAc,kBAAiB,cAAhC;AACZlE,gBAAQkE,OAAOE,UAAgB;AAC9B,YAAImH,MAAMoB,aAAavI,IAAnB,GAA0B;AAC7BH,kBAAQ0L,eAAc;YAAC,CAACvL,OAAMmH,MAAMoB,aAAavI,IAAnB;UAAR,CAAf;QACP;MACD,CAJM;AAMPuL,oBAAcM,WAAW;AACzBJ,cAAQnK,YAAaiK,aAArB;AACA,WAAKI,aAAcJ;IAGnB,WAAS/Q,SAASkL,cAAc;AAChC6F,sBAAiBxP,OAAQvB,SAASkL,YAAX;AAClBiG,WAAAA,aAAcJ;IAEnB,OAAI;AACJA,sBAAiBxP,OAAO,UAAD;AAClB4P,WAAAA,aAAcF;IACnB;AAEI3M,SAAAA,UAAYA;AACZ0M,SAAAA,WAAaA;AACbE,SAAAA,mBAAmBA;AACnBD,SAAAA,UAAaA;AACbF,SAAAA,gBAAiBA;AAEtB,SAAK0C,MAAL;EACA;EAMDA,QAAO;AAEA/T,UAAAA,OAAO;AACb,UAAMM,WAAcN,KAAKM;AACzB,UAAM+Q,gBAAkBrR,KAAKqR;AAC7B,UAAMC,WAActR,KAAKsR;AACzB,UAAME,mBAAoBxR,KAAKwR;AAC/B,UAAM5M,UAAa5E,KAAK4E;AACxB,UAAM2M,UAAavR,KAAKuR;AACxB,UAAMtE,QAAYjN,KAAKiN;AACvB,UAAMwE,aAAezR,KAAKyR;AAC1B,UAAMuC,gBAAkB;MAAEC,SAAS;IAAX;AACxB,UAAMC,YAAelU,KAAK8R,UAAS;AAGnCnM,YAAQ6L,kBAAiB;MACxBrD,IAAI+F;IADoB,CAAlB;AAIPvO,YAAQ8L,YAAW;MAClB0C,MAAK;MACL,iBAAgB;MAChB,iBAAgB;MACAD,iBAAAA;IAJE,CAAZ;AAODE,UAAAA,aAAalG,MAAMuD,YAAWzR,KAAK8R,UAAU,aAA3B;AAClBhQ,UAAAA,QAAU,gBAAca,YAAY3C,KAAK8R,OAAN,IAAe;AACxD,UAAMuC,QAAUlS,SAASM,cAAcX,KAAvB;AACVwS,UAAAA,cAActU,KAAKuU,MAAMC,KAAKxU,IAAhB;AACpB,QAAIqU,OAAO;AACV5G,eAAS4G,OAAM,SAASC,WAAhB;AACR3O,cAAQ0O,OAAM;QAACI,KAAIL;MAAL,CAAP;AACDM,YAAAA,WAAWxG,MAAMmG,OAAMrU,KAAK8R,UAAQ,WAApB;AACtBnM,cAAQ8L,YAAW;QAAmBiD,mBAAAA;MAAnB,CAAZ;AACP/O,cAAQ6L,kBAAiB;QAAmBkD,mBAAAA;MAAnB,CAAlB;IACP;AAED9P,YAAQrB,MAAMoR,QAAQ1H,MAAM1J,MAAMoR;AAElC,QAAI3U,KAAKI,QAAQC,MAAMX,QAAQ;AAC9B,YAAMkV,kBAAkB,YAAY5U,KAAKI,QAAQC,MAAMwU,KAAK,UAAxB;AACpCrR,iBAAY,CAACoB,SAAQ0M,QAAT,GAAoBsD,eAAtB;IACV;AAED,SAAKtU,SAASsJ,aAAa,QAAQtJ,SAASsJ,WAAW,MAAM5J,KAAK4R,eAAe;AAChFjM,cAAQsH,OAAM;QAAC6H,UAAS;MAAV,CAAP;IACP;AAEGxU,QAAAA,SAASoL,aAAa;AACzB/F,cAAQ0L,eAAc;QAAC3F,aAAYpL,SAASoL;MAAtB,CAAf;IACP;AAGG,QAAA,CAACpL,SAAS6I,WAAW7I,SAAS4I,WAAW;AAC5C5I,eAAS6I,UAAU,IAAI3C,OAAO,SAASuO,aAAazU,SAAS4I,SAAV,IAAuB,OAAvD;IACnB;AAID,QAAI5I,SAAS0U,QAAQ1U,SAAS6J,cAAc;AAC3C7J,eAAS0U,OAAO7I,aAAa7L,SAAS0U,MAAK1U,SAAS6J,YAAxB;IAC5B;AAEDnK,SAAKqR,cAAcvE,OAAOG,MAAMH;AAEhCW,aAAS6D,UAAS,aAAa,MAAM;AACpCtR,WAAK2S,cAAc;IACnB,CAFO;AAIRlF,aAAS6D,UAAS,cAAe2D,OAAM;AAElCC,UAAAA,eAAezQ,YAAYwQ,EAAEvQ,QAAuB,qBAAqB4M,QAA/C;AAC1B4D,UAAAA;AAAelV,aAAKmV,cAAeF,GAAiBC,YAArC;IAEnB,GAAE;MAACE,SAAQ;IAAT,CALK;AAQR3H,aAAS6D,UAAS,SAAShE,SAAQ;AAC5B8B,YAAAA,SAAS3K,YAAY6I,IAAI5I,QAAuB,mBAA5B;AAC1B,UAAI0K,QAAQ;AACXpP,aAAKqV,eAAgB/H,KAAmB8B,MAAxC;AACA/B,uBAAeC,KAAI,IAAL;MACd;IACD,CANO;AAQRG,aAAS8D,SAAQ,SAAUjE,SAAQ;AAE9B4H,UAAAA,eAAezQ,YAAa6I,IAAI5I,QAAuB,kBAAkB6M,OAA/C;AAC1B2D,UAAAA,gBAAgBlV,KAAKsV,aAAahI,KAAmB4H,YAArC,GAA+D;AAClF7H,uBAAeC,KAAI,IAAL;AACd;MACA;AAGD,UAAI+D,cAActF,SAAS,IAAI;AAC9B;MACA;AAED/L,WAAKuV,QAAL;AACAlI,qBAAeC,KAAI,IAAL;IACd,CAfO;AAmBRG,aAASgE,YAAW,WAAawD,OAAMjV,KAAKwV,UAAUP,CAAf,CAA/B;AAGRxH,aAAS4D,eAAc,YAAa4D,OAAMjV,KAAKyV,WAAWR,CAAhB,CAAlC;AACRxH,aAAS4D,eAAc,SAAW4D,OAAMjV,KAAK0V,QAAQT,CAAb,CAAhC;AACRxH,aAASgE,YAAW,QAAWwD,OAAMjV,KAAK2V,OAAOV,CAAZ,CAA7B;AACRxH,aAASgE,YAAW,SAAWwD,OAAMjV,KAAK4V,QAAQX,CAAb,CAA7B;AACRxH,aAAS4D,eAAc,SAAW4D,OAAMjV,KAAK6V,QAAQZ,CAAb,CAAhC;AAGFa,UAAAA,gBAAiBxI,SAAc;AAIpC,YAAM5I,SAAS4I,IAAIyI,aAAJ,EAAmB;AAClC,UAAI,CAACnR,QAAQC,SAASH,MAAjB,KAA2C,CAAC4M,SAASzM,SAASH,MAAlB,GAA0C;AACtF1E,YAAAA,KAAKuS,WAAW;AACnBvS,eAAKgW,KAAL;QACA;AACDhW,aAAKiW,WAAL;AACA;MACA;AAOD,UAAIvR,UAAU2M,iBAAiBrR,KAAKiS,QAAQ;AAC3C3E,YAAIE,gBAAJ;MAGA,OAAI;AACJH,uBAAeC,KAAI,IAAL;MACd;IAED;AAEK4I,UAAAA,aAAa,MAAM;AACpBlW,UAAAA,KAAKiS,QAAQ;AAChBjS,aAAKmW,iBAAL;MACA;IACD;AAGD1I,aAAStL,UAAS,aAAa2T,aAAvB;AACRrI,aAAS6F,QAAO,UAAU4C,YAAYlC,aAA9B;AACRvG,aAAS6F,QAAO,UAAU4C,YAAYlC,aAA9B;AAEHjC,SAAAA,WAAW,MAAM;AACrB5P,eAASiU,oBAAoB,aAAYN,aAAzC;AACAxC,aAAO8C,oBAAoB,UAASF,UAApC;AACA5C,aAAO8C,oBAAoB,UAASF,UAApC;AACI7B,UAAAA;AAAQA,cAAM+B,oBAAoB,SAAQ9B,WAAlC;IACZ;AAID,SAAK+B,iBAAiB;MACrBhU,WAAY4K,MAAM5K;MAClBsP,UAAW1E,MAAM0E;IAFI;AAMtB1E,UAAM0E,WAAW;AACjB1E,UAAMqJ,sBAAsB,YAAYtW,KAAK4E,OAA7C;AAEA5E,SAAKuW,KAAK,KAAV;AACAjW,aAASiP,QAAQ,CAAA;AACVjP,WAAAA,SAAS2I;AACT3I,WAAAA,SAASY;AAEhBuM,aAASR,OAAM,WAAW,MAAM;AAC3BjN,UAAAA,KAAKqS,SAAS;AACjBrS,aAAKqS,UAAU;AACfrS,aAAKoS,YAAY;AACjBpS,aAAKwW,aAAL;MACA;IACD,CANO;AAQRxW,SAAKyW,oBAAL;AACAzW,SAAK0W,aAAL;AACA1W,SAAK2W,MAAM,KAAX;AACA3W,SAAKiW,WAAL;AACAjW,SAAKyS,UAAU;AAEXxF,QAAAA,MAAMmD,UAAU;AACnBpQ,WAAK4W,QAAL;IACA,OAAI;AACJ5W,WAAK6W,OAAL;IACA;AAED7W,SAAKb,GAAG,UAAU,KAAK2X,QAAvB;AAEAtT,eAAWyJ,OAAM,eAAc,sBAArB;AACVjN,SAAKF,QAAQ,YAAb;AAGA,QAAIQ,SAAS2J,YAAY,MAAM;AAC9BjK,WAAKiK,QAAL;IACA;EAED;EAOD8M,aAAa7V,UAAsB,CAAA,GAAI+H,YAAwB,CAAA,GAAG;AAGjE,SAAK+N,WAAW9V,OAAhB;AAIAQ,cAASuH,WAAYuH,cAAuB;AACtCyG,WAAAA,oBAAoBzG,QAAzB;IACA,CAFM;EAGP;EAKDoD,iBAAiB;AACZ5T,QAAAA,OAAO;AACX,QAAI4O,cAAc5O,KAAKM,SAASkK;AAChC,QAAIuE,iBAAiB/O,KAAKM,SAASoK;AAEnC,QAAIwM,YAAY;MACf,YAAatQ,UAAmB;AAC/B,YAAI4J,WAAWrO,SAASC,cAAc,KAAvB;AACfoO,iBAAS1J,YAAY;AACrB0J,iBAASpJ,YAAYR,KAAK1F,OAA1B;AACA,eAAOsP;MAEP;MACD,mBAAmB,CAAC5J,MAAgBuQ,WAA8B;AAC1D,eAAA,kCAAkCA,OAAOvQ,KAAKmI,eAAN,IAAyB;MACxE;MACD,UAAU,CAACnI,MAAgBuQ,WAA8B;AACjD,eAAA,UAAUA,OAAOvQ,KAAKgI,YAAN,IAAsB;MAC7C;MACD,QAAQ,CAAChI,MAAgBuQ,WAA8B;AAC/C,eAAA,UAAUA,OAAOvQ,KAAKgI,YAAN,IAAsB;MAC7C;MACD,iBAAiB,CAAChI,MAAgBuQ,WAA8B;AACxD,eAAA,qCAAqCA,OAAOvQ,KAAKqG,KAAN,IAAe;MACjE;MACD,cAAa,MAAM;AAClB,eAAO;MACP;MACD,WAAU,MAAM;AACf,eAAO;MACP;MACa,eAAA,MAAM;MAAA;MACpB,YAAW,MAAM;AAChB,eAAO;MACP;IA7Bc;AAiChBjN,SAAKM,SAASuL,SAASxI,OAAOC,OAAO,CAAA,GAAI4T,WAAWlX,KAAKM,SAASuL,MAA3C;EACvB;EAMD8H,iBAAiB;AACZ9S,QAAAA,KAAKF;AACT,QAAIyW,YAAkC;MACrC,cAAoB;MACpB,UAAoB;MACpB,YAAoB;MACpB,eAAoB;MACpB,eAAoB;MACpB,SAAoB;MACpB,cAAoB;MACpB,iBAAoB;MACpB,gBAAoB;MACpB,gBAAoB;MACpB,mBAAoB;MACpB,kBAAoB;MACpB,iBAAoB;MACpB,kBAAoB;MACpB,QAAoB;MACpB,QAAoB;MACpB,SAAoB;MACA,QAAA;IAlBiB;AAqBjCvW,SAAAA,OAAOuW,WAAW;AAEtBzW,WAAK,KAAKL,SAAS8W,UAAUvW;AAC7B,UAAIF;AAAI,aAAKxB,GAAG0B,KAAKF,EAAb;IAER;EACD;EAMD4V,KAAKc,eAAqB,MAAU;AAC7BrX,UAAAA,OAAQ;AACRM,UAAAA,WAAW+W,eAAe7I,YAAaxO,KAAKiN,OAAO;MAAC/D,WAAUlJ,KAAKM,SAAS4I;IAAzB,CAAd,IAAuFlJ,KAAKM;AAEvIN,SAAK+W,aAAazW,SAASY,SAAQZ,SAAS2I,SAA5C;AAEAjJ,SAAKsX,SAAShX,SAASiP,SAAO,CAAA,GAAG,IAAjC;AAEAvP,SAAKuX,YAAY;EACjB;EAODhC,UAAe;AACVvV,QAAAA,OAAO;AAEX,QAAIA,KAAKiT,YAAYvT,SAAS,GAAG;AAChCM,WAAKwX,iBAAL;AACAxX,WAAKuU,MAAL;AACA;IACA;AAED,QAAIvU,KAAKuS,aAAavS,KAAKiS,QAAQ;AAClCjS,WAAKgW,KAAL;IACA,OAAM;AACNhW,WAAKuU,MAAL;IACA;EACD;EAMDkD,cAAmB;EAAA;EAOnBX,WAAW;AACVjU,iBAAa,KAAKoK,OAAO,OAAb;AACZpK,iBAAa,KAAKoK,OAAO,QAAb;EACZ;EAMD4I,QAAQZ,GAAiC;AACpCjV,QAAAA,OAAO;AAEX,QAAIA,KAAKwS,iBAAiBxS,KAAKsS,UAAU;AACxCjF,qBAAe4H,CAAD;AACd;IACA;AAID,QAAI,CAACjV,KAAKM,SAAS6I,SAAS;AAC3B;IACA;AAGDuD,eAAW,MAAM;AAChB,UAAIgL,aAAa1X,KAAK2X,WAAL;AACb,UAAA,CAACD,WAAW/Q,MAAM3G,KAAKM,SAAS6I,OAA/B,GAAwC;AAC5C;MACA;AAED,UAAIyO,aAAaF,WAAWpV,KAAX,EAAkBzD,MAAMmB,KAAKM,SAAS6I,OAAtC;AACjBzH,gBAASkW,YAAaC,WAAiB;AAEtC,cAAMC,OAAOhM,SAAS+L,KAAD;AACrB,YAAIC,MAAM;AACT,cAAI,KAAK5W,QAAQ2W,QAAQ;AACxB7X,iBAAK+X,QAAQF,KAAb;UACA,OAAI;AACJ7X,iBAAKgY,WAAWH,KAAhB;UACA;QACD;MACD,CAVM;IAWP,GAAE,CAlBO;EAoBV;EAMDpC,WAAWR,GAAsB;AAC5BjV,QAAAA,OAAO;AACRA,QAAAA,KAAKsS,UAAS;AAChBjF,qBAAe4H,CAAD;AACd;IACA;AACD,QAAIgD,YAAYC,OAAOC,aAAalD,EAAEmD,WAAWnD,EAAEoD,KAAnC;AACZrY,QAAAA,KAAKM,SAASgJ,UAAUtJ,KAAKM,SAAS0K,SAAS,WAAWiN,cAAcjY,KAAKM,SAAS4I,WAAW;AACpGlJ,WAAKgY,WAAL;AACA3K,qBAAe4H,CAAD;AACd;IACA;EACD;EAMDO,UAAUP,GAAsB;AAC3BjV,QAAAA,OAAO;AAEXA,SAAK2S,cAAc;AAEf3S,QAAAA,KAAKsS,UAAU;AAClB,UAAI2C,EAAEmD,YAAYE,SAAmB;AACpCjL,uBAAe4H,CAAD;MACd;AACD;IACA;AAEOA,YAAAA,EAAEmD,SAAV;MAGME,KAAAA;AACA3K,YAAAA,UAAU2K,cAAuBrD,CAAxB,GAA4B;AACxC,cAAIjV,KAAKqR,cAActF,SAAS,IAAI;AACnCsB,2BAAe4H,CAAD;AACdjV,iBAAKuY,UAAL;AACA;UACA;QACD;AACD;MAGID,KAAAA;AACAtY,YAAAA,KAAKiS,QAAQ;AAChB5E,yBAAe4H,GAAE,IAAH;AACdjV,eAAK2W,MAAL;QACA;AACD3W,aAAKwX,iBAAL;AACA;MAGIc,KAAAA;AACA,YAAA,CAACtY,KAAKiS,UAAUjS,KAAK4S,YAAY;AACpC5S,eAAKwY,KAAL;QACA,WAAUxY,KAAKgT,cAAc;AACzByF,cAAAA,OAAOzY,KAAK0Y,YAAY1Y,KAAKgT,cAAc,CAApC;AACX,cAAIyF;AAAMzY,iBAAK2Y,gBAAgBF,IAArB;QACV;AACDpL,uBAAe4H,CAAD;AACd;MAGIqD,KAAAA;AACAtY,YAAAA,KAAKgT,cAAc;AACtB,cAAI4F,OAAO5Y,KAAK0Y,YAAY1Y,KAAKgT,cAAc,EAApC;AACX,cAAI4F;AAAM5Y,iBAAK2Y,gBAAgBC,IAArB;QACV;AACDvL,uBAAe4H,CAAD;AACd;MAGIqD,KAAAA;AACAtY,YAAAA,KAAK6Y,UAAU7Y,KAAKgT,YAApB,GAAmC;AACtChT,eAAKqV,eAAeJ,GAAEjV,KAAKgT,YAA3B;AACA3F,yBAAe4H,CAAD;QAGd,WAASjV,KAAKM,SAASgJ,UAAUtJ,KAAKgY,WAAL,GAAmB;AACpD3K,yBAAe4H,CAAD;QAGd,WAAS9S,SAAS2W,iBAAiB9Y,KAAKqR,iBAAiBrR,KAAKiS,QAAQ;AACtE5E,yBAAe4H,CAAD;QACd;AAED;MAGIqD,KAAAA;AACJtY,aAAK+Y,iBAAiB,IAAI9D,CAA1B;AACA;MAGIqD,KAAAA;AACJtY,aAAK+Y,iBAAiB,GAAG9D,CAAzB;AACA;MAGIqD,KAAAA;AAEJ,YAAItY,KAAKM,SAAS0J,aAAa;AAC1BhK,cAAAA,KAAK6Y,UAAU7Y,KAAKgT,YAApB,GAAmC;AACtChT,iBAAKqV,eAAeJ,GAAEjV,KAAKgT,YAA3B;AAIA3F,2BAAe4H,CAAD;UACd;AACGjV,cAAAA,KAAKM,SAASgJ,UAAUtJ,KAAKgY,WAAL,GAAmB;AAC9C3K,2BAAe4H,CAAD;UACd;QACD;AACD;MAGIqD,KAAAA;MACAA,KAAAA;AACJtY,aAAKgZ,gBAAgB/D,CAArB;AACA;IA1FF;AA8FA,QAAIjV,KAAKwS,iBAAiB,CAAC7E,UAAU2K,cAAuBrD,CAAxB,GAA4B;AAC/D5H,qBAAe4H,CAAD;IACd;EACD;EAMDS,QAAQT,GAAiC;AACpCjV,QAAAA,OAAO;AAEPA,QAAAA,KAAKsS,UAAU;AAClB;IACA;AAED,QAAIvG,QAAQ/L,KAAK2X,WAAL;AACZ,QAAI3X,KAAK8S,cAAc/G,OAAO;AAC7B/L,WAAK8S,YAAY/G;AAEjB,UAAI/L,KAAKM,SAASsL,WAAW5D,KAAKhI,MAAK+L,KAAnC,GAA2C;AAC9C/L,aAAKgV,KAAKjJ,KAAV;MACA;AAED/L,WAAKiZ,eAAL;AACAjZ,WAAKF,QAAQ,QAAQiM,KAArB;IACA;EACD;EAODoJ,cAAe7H,KAA8B8B,QAAyB;AACjE,QAAA,KAAKuD;AAAc;AACvB,SAAKgG,gBAAgBvJ,QAAQ,KAA7B;EACA;EAMDwG,QAAQX,GAAkC;AACrCjV,QAAAA,OAAO;AACX,QAAIkZ,aAAalZ,KAAKuS;AAElBvS,QAAAA,KAAKkS,YAAY;AACpBlS,WAAKgW,KAAL;AACA3I,qBAAe4H,CAAD;AACd;IACA;AAEGjV,QAAAA,KAAK0S;AAAa;AACtB1S,SAAKuS,YAAY;AACbvS,QAAAA,KAAKM,SAAS2J,YAAY;AAAUjK,WAAKiK,QAAL;AAExC,QAAI,CAACiP;AAAYlZ,WAAKF,QAAQ,OAAb;AAEjB,QAAI,CAACE,KAAKiT,YAAYvT,QAAQ;AAC7BM,WAAKmZ,UAAL;AACAnZ,WAAKiZ,eAAe,CAAC,CAACjZ,KAAKM,SAASmJ,WAApC;IACA;AAEDzJ,SAAKwW,aAAL;EACA;EAMDb,OAAOV,GAAoB;AAE1B,QAAI9S,SAASiX,SAAT,MAAwB;AAAQ;AAEhCpZ,QAAAA,OAAO;AACX,QAAI,CAACA,KAAKuS;AAAW;AACrBvS,SAAKuS,YAAY;AACjBvS,SAAK0S,cAAc;AAEf2G,QAAAA,aAAa,MAAM;AACtBrZ,WAAK2W,MAAL;AACA3W,WAAKsZ,cAAL;AACAtZ,WAAKuZ,SAASvZ,KAAKuP,MAAM7P,MAAzB;AACAM,WAAKF,QAAQ,MAAb;IACA;AAEGE,QAAAA,KAAKM,SAASgJ,UAAUtJ,KAAKM,SAASiJ,cAAc;AACvDvJ,WAAKgY,WAAW,MAAMqB,UAAtB;IACA,OAAM;AACNA,iBAAU;IACV;EACD;EAQDhE,eAAgB/H,KAA8B8B,QAAoB;AACjE,QAAIrD,OAAO/L,OAAO;AAIlB,QAAIoP,OAAOoK,iBAAiBpK,OAAOoK,cAAc1U,QAAQ,iBAA7B,GAAiD;AAC5E;IACA;AAGGsK,QAAAA,OAAOnL,UAAUY,SAAS,QAA1B,GAAqC;AACxC7E,WAAKgY,WAAW,MAAM,MAAM;AAC3B,YAAIhY,KAAKM,SAASmZ,kBAAkB;AACnCzZ,eAAK2W,MAAL;QACA;MACD,CAJD;IAKA,OAAM;AACN5K,cAAQqD,OAAOQ,QAAQ7D;AACvB,UAAI,OAAOA,UAAU,aAAa;AACjC/L,aAAKuX,YAAY;AACjBvX,aAAK+X,QAAQhM,KAAb;AACA,YAAI/L,KAAKM,SAASmZ,kBAAkB;AACnCzZ,eAAK2W,MAAL;QACA;AAED,YAAI,CAAC3W,KAAKM,SAASuJ,gBAAgByD,IAAIR,QAAQ,QAAQtF,KAAK8F,IAAIR,IAAjB,GAAwB;AACtE9M,eAAK2Y,gBAAgBvJ,MAArB;QACA;MACD;IACD;EACD;EAMDyJ,UAAUzJ,QAAgC;AAEzC,QAAI,KAAK6C,UAAU7C,UAAU,KAAKoC,iBAAiB3M,SAASuK,MAA/B,GAAyC;AACrE,aAAO;IACP;AACD,WAAO;EACP;EAODkG,aAAchI,KAAiBoM,MAAuB;AACjD1Z,QAAAA,OAAO;AAEX,QAAI,CAACA,KAAKsS,YAAYtS,KAAKM,SAAS0K,SAAS,SAAS;AACrDqC,qBAAeC,GAAD;AACdtN,WAAKsZ,cAAcI,MAAMpM,GAAzB;AACA,aAAO;IACP;AACD,WAAO;EACP;EAkBDqM,QAAQ5N,OAAqB;AAE5B,QAAI,CAAC,KAAKzL,SAAS0U;AAAO,aAAO;AAC7B,QAAA,KAAKrI,eAAexL,eAAe4K,KAAnC;AAA4C,aAAO;AAEvD,WAAO;EACP;EAMDiJ,KAAKjJ,OAAmB;AACjB/L,UAAAA,OAAO;AAEb,QAAI,CAACA,KAAK2Z,QAAQ5N,KAAb;AAAsB;AAE3BvI,eAAWxD,KAAK4E,SAAQ5E,KAAKM,SAAS8J,YAA5B;AACVpK,SAAKsM;AAEC1N,UAAAA,WAAWoB,KAAK4Z,aAAapF,KAAKxU,IAAvB;AACjBA,SAAKM,SAAS0U,KAAKhN,KAAKhI,MAAM+L,OAAOnN,QAArC;EACA;EAMDgb,aAAc1Y,SAAqB+H,WAA4B;AACxDjJ,UAAAA,OAAO;AACbA,SAAKsM,UAAUC,KAAKC,IAAIxM,KAAKsM,UAAU,GAAG,CAA3B;AACftM,SAAKuX,YAAY;AAEjBvX,SAAK6Z,kBAAL;AACA7Z,SAAK+W,aAAa7V,SAAQ+H,SAA1B;AAEAjJ,SAAKiZ,eAAejZ,KAAKuS,aAAa,CAACvS,KAAKwS,aAA5C;AAEA,QAAI,CAACxS,KAAKsM,SAAS;AAClBnI,oBAAcnE,KAAK4E,SAAQ5E,KAAKM,SAAS8J,YAA5B;IACb;AAEDpK,SAAKF,QAAQ,QAAQoB,SAAS+H,SAA9B;EACA;EAEDgB,UAAc;AACb,QAAIhG,YAAY,KAAKW,QAAQX;AAC7B,QAAIA,UAAUY,SAAS,WAAnB;AAAkC;AACtCZ,cAAUC,IAAI,WAAd;AACK8Q,SAAAA,KAAK,EAAV;EACA;EAOD8E,gBAAgB/N,QAAe,IAAI;AAC9BkB,QAAAA,QAAQ,KAAKoE;AACjB,QAAI0I,UAAU9M,MAAMlB,UAAUA;AAC9B,QAAIgO,SAAS;AACZ9M,YAAMlB,QAAQA;AACdlJ,mBAAaoK,OAAM,QAAP;AACP6F,WAAAA,YAAY/G;IACjB;EACD;EASDiO,WAA2B;AAEtB,QAAA,KAAKpI,iBAAiB,KAAK3E,MAAM0D,aAAa,UAAxB,GAAqC;AAC9D,aAAO,KAAKpB;IACZ;AAEM,WAAA,KAAKA,MAAMsF,KAAK,KAAKvU,SAAS4I,SAA9B;EACP;EAMDoO,SAAUvL,OAAuBkO,QAAsB;AAClDtb,QAAAA,SAASsb,SAAS,CAAA,IAAK,CAAC,QAAD;AAE3BrN,oBAAgB,MAAMjO,QAAO,MAAM;AAC7Bub,WAAAA,MAAMD,MAAX;AACA,WAAKE,SAASpO,OAAOkO,MAArB;IACA,CAHc;EAIf;EAODG,YAAYrO,OAAkB;AAC1BA,QAAAA,UAAU;AAAGA,cAAQ;AACxB,SAAKzL,SAASsJ,WAAWmC;AACzB,SAAKyK,aAAL;EACA;EAMD8C,cAAeI,MAAezE,GAA6B;AACtDjV,QAAAA,OAAO;AACX,QAAIqa;AACJ,QAAI5U,GAAG6U,OAAOC,KAAKC;AACnB,QAAIC;AAEAza,QAAAA,KAAKM,SAAS0K,SAAS;AAAU;AAGjC,QAAA,CAAC0O,MAAM;AACV1Z,WAAKwX,iBAAL;AACIxX,UAAAA,KAAKuS,WAAW;AACnBvS,aAAKmZ,UAAL;MACA;AACD;IACA;AAGDkB,gBAAYpF,KAAKA,EAAEnI,KAAKqC,YAAP;AAEjB,QAAIkL,cAAc,WAAW1M,UAAU,YAAWsH,CAAZ,KAAkBjV,KAAKiT,YAAYvT,QAAQ;AAChF+a,aAAOza,KAAK0a,cAAL;AACPJ,cAAQvZ,MAAMgH,UAAUlI,QAAQmI,KAAKhI,KAAKuR,QAAQb,UAAU+J,IAApD;AACRF,YAAOxZ,MAAMgH,UAAUlI,QAAQmI,KAAKhI,KAAKuR,QAAQb,UAAUgJ,IAApD;AAEHY,UAAAA,QAAQC,KAAK;AAChBC,eAAQF;AACRA,gBAAQC;AACRA,cAAQC;MACR;AACI/U,WAAAA,IAAI6U,OAAO7U,KAAK8U,KAAK9U,KAAK;AAC9BiU,eAAO1Z,KAAKuR,QAAQb,SAASjL;AACzBzF,YAAAA,KAAKiT,YAAYpT,QAAQ6Z,IAAzB,MAAmC,IAAI;AAC1C1Z,eAAK2a,mBAAmBjB,IAAxB;QACA;MACD;AACDrM,qBAAe4H,CAAD;IACd,WAAWoF,cAAc,WAAW1M,UAAU2K,cAAuBrD,CAAxB,KAAiCoF,cAAc,aAAa1M,UAAU,YAAWsH,CAAZ,GAAiB;AAC/HyE,UAAAA,KAAKzV,UAAUY,SAAS,QAAxB,GAAmC;AACtC7E,aAAK4a,iBAAkBlB,IAAvB;MACA,OAAM;AACN1Z,aAAK2a,mBAAmBjB,IAAxB;MACA;IACD,OAAM;AACN1Z,WAAKwX,iBAAL;AACAxX,WAAK2a,mBAAmBjB,IAAxB;IACA;AAGD1Z,SAAK6a,UAAL;AACA,QAAI,CAAC7a,KAAKuS,WAAW;AACpBvS,WAAKuU,MAAL;IACA;EACD;EAMDoG,mBAAoBjB,MAAc;AAC3B1Z,UAAAA,OAAO;AACP8a,UAAAA,cAAc9a,KAAKuR,QAAQ9O,cAAc,cAA3B;AACpB,QAAIqY;AAAc3W,oBAAc2W,aAA2B,aAA5B;AAE/BtX,eAAWkW,MAAK,oBAAN;AACV1Z,SAAKF,QAAQ,eAAe4Z,IAA5B;AACI1Z,QAAAA,KAAKiT,YAAYpT,QAAQ6Z,IAAzB,KAAkC,IAAI;AACzC1Z,WAAKiT,YAAY3T,KAAMoa,IAAvB;IACA;EACD;EAMDkB,iBAAkBlB,MAAc;AAC3BqB,QAAAA,MAAM,KAAK9H,YAAYpT,QAAQ6Z,IAAzB;AACV,SAAKzG,YAAYrT,OAAOmb,KAAK,CAA7B;AACA5W,kBAAcuV,MAAK,QAAN;EACb;EAMDlC,mBAAkB;AACjBrT,kBAAc,KAAK8O,aAAY,QAAlB;AACRA,SAAAA,cAAc,CAAA;EACnB;EAOD0F,gBAAiBvJ,QAAwB4L,SAAe,MAAW;AAElE,QAAI5L,WAAW,KAAK4D,cAAc;AACjC;IACA;AAED,SAAK6G,kBAAL;AACI,QAAA,CAACzK;AAAS;AAET4D,SAAAA,eAAe5D;AACpBzJ,YAAQ,KAAK8L,YAAW;MAAC,yBAAwBrC,OAAOf,aAAa,IAApB;IAAzB,CAAjB;AACP1I,YAAQyJ,QAAO;MAAiB,iBAAA;IAAjB,CAAR;AACP5L,eAAW4L,QAAO,QAAR;AACV,QAAI4L;AAAS,WAAKC,eAAe7L,MAApB;EACb;EAMD6L,eAAgB7L,QAAyB8L,UAAuB;AAE3D,QAAA,CAAC9L;AAAS;AAER7M,UAAAA,UAAW,KAAKiP;AACtB,UAAM2J,cAAc5Y,QAAQ6Y;AAC5B,UAAMC,YAAa9Y,QAAQ8Y,aAAa;AACxC,UAAMC,cAAclM,OAAOmM;AAC3B,UAAMC,IAAOpM,OAAOqM,sBAAP,EAA+BC,MAAMnZ,QAAQkZ,sBAAR,EAAgCC,MAAML;AAExF,QAAIG,IAAIF,cAAcH,cAAcE,WAAW;AACzCL,WAAAA,OAAOQ,IAAIL,cAAcG,aAAaJ,QAA3C;IAEA,WAAUM,IAAIH,WAAW;AACzB,WAAKL,OAAOQ,GAAGN,QAAf;IACA;EACD;EAMDF,OAAQK,WAAkBH,UAAuB;AAC1C3Y,UAAAA,UAAU,KAAKiP;AACrB,QAAI0J,UAAU;AACb3Y,cAAQgB,MAAMoY,iBAAiBT;IAC/B;AACD3Y,YAAQ8Y,YAAYA;AACpB9Y,YAAQgB,MAAMoY,iBAAiB;EAC/B;EAMD9B,oBAAmB;AACd,QAAA,KAAK7G,cAAc;AACtB7O,oBAAc,KAAK6O,cAAa,QAAnB;AACbrN,cAAQ,KAAKqN,cAAa;QAAiB,iBAAA;MAAjB,CAAnB;IACP;AACIA,SAAAA,eAAe;AACpBrN,YAAQ,KAAK8L,YAAW;MAAyB,yBAAA;IAAzB,CAAjB;EACP;EAMD8G,YAAY;AACLvY,UAAAA,OAAO;AAEb,QAAIA,KAAKM,SAAS0K,SAAS;AAAU;AAErC,UAAMiI,cAAcjT,KAAK4b,gBAAL;AAEpB,QAAI,CAAC3I,YAAYvT;AAAS;AAE1BM,SAAK6a,UAAL;AACA7a,SAAK2W,MAAL;AAEA3W,SAAKiT,cAAcA;AACnBvR,cAASuR,aAAcyG,UAAiB;AACvC1Z,WAAK2a,mBAAmBjB,IAAxB;IACA,CAFM;EAIP;EAMDzD,aAAY;AACPjW,QAAAA,OAAO;AAEP,QAAA,CAACA,KAAKuR,QAAQ1M,SAAS7E,KAAKqR,aAA3B;AAA4C;AAEjD1L,YAAQ3F,KAAKqR,eAAc;MAAC3F,aAAY1L,KAAKM,SAASoL;IAA3B,CAApB;AAEH1L,QAAAA,KAAKiT,YAAYvT,SAAS,KAAM,CAACM,KAAKuS,aAAavS,KAAKM,SAASqL,mBAAmB3L,KAAKuP,MAAM7P,SAAS,GAAI;AAC/GM,WAAK8Z,gBAAL;AACA9Z,WAAKwS,gBAAgB;IAErB,OAAI;AAEJ,UAAIxS,KAAKM,SAASqL,mBAAmB3L,KAAKuP,MAAM7P,SAAS,GAAG;AAC3DiG,gBAAQ3F,KAAKqR,eAAc;UAAC3F,aAAY;QAAb,CAApB;MACP;AACD1L,WAAKwS,gBAAgB;IACrB;AAEDxS,SAAK4E,QAAQX,UAAU4X,OAAO,gBAAgB7b,KAAKwS,aAAnD;EACA;EAODqI,YAAY;AACX,SAAK5E,WAAL;EACA;EAMDkD,YAAY;AACX,SAAKlD,WAAL;EACA;EAKD0B,aAAY;AACX,WAAO,KAAKtG,cAActF,MAAMzJ,KAAzB;EACP;EAKDiS,QAAQ;AACHvU,QAAAA,OAAO;AACPA,QAAAA,KAAKkS;AAAY;AAErBlS,SAAK0S,cAAc;AAEnB,QAAI1S,KAAKqR,cAAcyK,aAAa;AACnC9b,WAAKqR,cAAckD,MAAnB;IACA,OAAI;AACJvU,WAAKyR,WAAW8C,MAAhB;IACA;AAED7H,eAAW,MAAM;AAChB1M,WAAK0S,cAAc;AACnB1S,WAAK4V,QAAL;IACA,GAAE,CAHO;EAIV;EAMDI,OAAY;AACNvE,SAAAA,WAAWuE,KAAhB;AACA,SAAKL,OAAL;EACA;EASDoG,iBAAiBja,OAAc;AACvB,WAAA,KAAKkQ,OAAO+J,iBAAiBja,OAAO,KAAKka,iBAAL,CAApC;EACP;EASDA,mBAAmB;AACd1b,QAAAA,WAAW,KAAKA;AACpB,QAAI2b,OAAO3b,SAASuK;AACpB,QAAI,OAAOvK,SAASuK,cAAc,UAAU;AAC3CoR,aAAO,CAAC;QAACC,OAAO5b,SAASuK;MAAjB,CAAD;IACP;AAEM,WAAA;MACNsR,QAAc7b,SAASwK;MACvBsR,aAAc9b,SAASyK;MACvBkR;MACAI,SAAc/b,SAAS+b;IAJjB;EAMP;EAODC,OAAOxa,OAA4C;AAC9Cya,QAAAA,QAAQC;AACRxc,QAAAA,OAAW;AACf,QAAIkB,UAAW,KAAK8a,iBAAL;AAGf,QAAKhc,KAAKM,SAASmc,OAAO;AACzBD,uBAAiBxc,KAAKM,SAASmc,MAAMzU,KAAKhI,MAAK8B,KAA9B;AACjB,UAAI,OAAO0a,mBAAmB,YAAY;AACzC,cAAM,IAAIjb,MAAM,uEAAV;MACN;IACD;AAGD,QAAIO,UAAU9B,KAAKuX,WAAW;AAC7BvX,WAAKuX,YAAczV;AACnBya,eAAavc,KAAKgS,OAAOsK,OAAOxa,OAAOuB,OAAOC,OAAOpC,SAAS;QAACub,OAAOD;MAAR,CAAvB,CAA1B;AACbxc,WAAK6S,iBAAkB0J;IACvB,OAAM;AACNA,eAAalZ,OAAOC,OAAQ,CAAA,GAAItD,KAAK6S,cAAxB;IACb;AAGD,QAAI7S,KAAKM,SAASuJ,cAAc;AAC/B0S,aAAOhN,QAAQgN,OAAOhN,MAAMhL,OAAQmV,UAAS;AAC5C,YAAIgD,SAAS5Q,SAAS4N,KAAKvL,EAAN;AACrB,eAAO,EAAEuO,UAAU1c,KAAKuP,MAAM1P,QAAQ6c,MAAnB,MAA+B;MAClD,CAHc;IAIf;AAED,WAAOH;EACP;EAODtD,eAAgB0D,kBAA0B,MAAM;AAC/C,QAAIlX,GAAGmX,GAAGC,GAAGrd,GAAGgR,UAAUvH,WAAW6T,MAAuBC,mBAAmBC;AAC/E,QAAI1T;AACE2T,UAAAA,SAA0C,CAAA;AAE1CC,UAAAA,eAAwB,CAAA;AAC1Bld,QAAAA,OAAW;AACf,QAAI8B,QAAY9B,KAAK2X,WAAL;AAChB,UAAMwF,aAAerb,UAAU9B,KAAKuX,aAAczV,SAAS,MAAM9B,KAAKuX,aAAa;AACnF,QAAI6F,UAAcpd,KAAKsc,OAAOxa,KAAZ;AACdub,QAAAA,gBAAkB;AAClBC,QAAAA,gBAAkBtd,KAAKM,SAASoJ,cAAc;AAClD,QAAI8H,mBAAoBxR,KAAKwR;AAG7B,QAAI2L,YAAY;AACfE,sBAAkBrd,KAAKgT;AAEvB,UAAIqK,eAAe;AAClBL,uBAAeK,cAAcE,QAAQ,cAAtB;MACf;IACD;AAGD/d,QAAI4d,QAAQ7N,MAAM7P;AACd,QAAA,OAAOM,KAAKM,SAASqJ,eAAe,UAAU;AACjDnK,UAAI+M,KAAKiR,IAAIhe,GAAGQ,KAAKM,SAASqJ,UAA1B;IACJ;AAEGnK,QAAAA,IAAI,GAAG;AACV8d,sBAAgB;IAChB;AAGI7X,SAAAA,IAAI,GAAGA,IAAIjG,GAAGiG,KAAK;AAGvB,UAAIiU,OAAS0D,QAAQ7N,MAAM9J;AACvB,UAAA,CAACiU;AAAO;AAEZ,UAAI+D,YAAa/D,KAAKvL;AACtB,UAAIiB,SAAWpP,KAAKkB,QAAQuc;AAExBrO,UAAAA,WAAWzP;AAAY;AAE3B,UAAI+d,WAAY1R,SAASyR,SAAD;AACpBE,UAAAA,YAAa3d,KAAK4d,UAAUF,UAAS,IAAxB;AAGjB,UAAI,CAAC1d,KAAKM,SAASuJ,cAAc;AAChC8T,kBAAU1Z,UAAU4X,OAAO,YAAY7b,KAAKuP,MAAMsO,SAASH,QAApB,CAAvC;MACA;AAEDlN,iBAAcpB,OAAOpP,KAAKM,SAASgK,kBAAkB;AACrDrB,kBAAclI,MAAMC,QAAQwP,QAAd,IAA0BA,WAAW,CAACA,QAAD;AAEnD,WAAKoM,IAAI,GAAGC,IAAI5T,aAAaA,UAAUvJ,QAAQkd,IAAIC,GAAGD,KAAK;AAC1DpM,mBAAWvH,UAAU2T;AACjB,YAAA,CAAC5c,KAAKiJ,UAAU9H,eAAeqP,QAA9B,GAAyC;AAC7CA,qBAAW;QACX;AAED,YAAIsN,iBAAiBb,OAAOzM;AACxBsN,YAAAA,mBAAmBne,QAAW;AACjCme,2BAAiB3b,SAAS4b,uBAAT;AACjBb,uBAAa5d,KAAKkR,QAAlB;QACA;AAGGoM,YAAAA,IAAI,GAAG;AACVe,sBAAYA,UAAUxW,UAAU,IAApB;AACZxB,kBAAQgY,WAAU;YAACxP,IAAIiB,OAAO4O,MAAI,YAAUpB;YAAkB,iBAAA;UAA5C,CAAX;AACPe,oBAAU1Z,UAAUC,IAAI,WAAxB;AACAC,wBAAcwZ,WAAU,QAAX;AAIb,cAAI3d,KAAKgT,gBAAgBhT,KAAKgT,aAAapD,QAAQ7D,SAAS0R,WAAW;AACtE,gBAAIT,gBAAgBA,aAAapN,QAAQK,UAAUO,SAASyN,SAAT,GAAqB;AACvEZ,8BAAgBM;YAChB;UACD;QACD;AAEDG,uBAAe1W,YAAYuW,SAA3B;AACAV,eAAOzM,YAAYsN;MACnB;IACD;AAGD,QAAI9d,KAAKM,SAASsK,mBAAmB;AACpCsS,mBAAajB,KAAK,CAACiC,GAAGC,MAAM;AAC3B,cAAMC,QAASpe,KAAKiJ,UAAUiV;AAC9B,cAAMG,QAASre,KAAKiJ,UAAUkV;AACxBG,cAAAA,UAAUF,SAASA,MAAMG,UAAU;AACnCC,cAAAA,UAAUH,SAASA,MAAME,UAAU;AAClCD,eAAAA,UAAUE;MACjB,CAND;IAOA;AAGD1B,WAAO3a,SAAS4b,uBAAT;AACPrc,cAASwb,cAAe1M,CAAAA,cAAoB;AAE3C,UAAIsN,iBAAiBb,OAAOzM;AAExB,UAAA,CAACsN,kBAAkB,CAACA,eAAepN,SAAShR;AAAS;AAEzD,UAAI+e,gBAAgBze,KAAKiJ,UAAUuH;AAE/BiO,UAAAA,kBAAkB9e,QAAW;AAEhC,YAAI+e,gBAAgBvc,SAAS4b,uBAAT;AAChBY,YAAAA,SAAS3e,KAAK6L,OAAO,mBAAmB4S,aAA/B;AACblQ,eAAQmQ,eAAeC,MAAjB;AACNpQ,eAAQmQ,eAAeZ,cAAjB;AAEN,YAAIc,aAAa5e,KAAK6L,OAAO,YAAY;UAACoE,OAAMwO;UAAcvd,SAAQwd;QAA7B,CAAxB;AAEjBnQ,eAAQuO,MAAM8B,UAAR;MAEN,OAAM;AACNrQ,eAAQuO,MAAMgB,cAAR;MACN;IACD,CAtBM;AAwBPtM,qBAAiBnP,YAAY;AAC7BkM,WAAQiD,kBAAkBsL,IAApB;AAGN,QAAI9c,KAAKM,SAAS+F,WAAW;AAC5BuB,sBAAiB4J,gBAAF;AACX4L,UAAAA,QAAQtb,MAAMpC,UAAU0d,QAAQyB,OAAOnf,QAAQ;AAClDgC,kBAAS0b,QAAQyB,QAASC,SAAQ;AACjCzY,oBAAWmL,kBAAkBsN,IAAIvY,KAAxB;QACT,CAFM;MAGP;IACD;AAGGwY,QAAAA,eAAgBC,cAA8B;AACjD,UAAIzc,UAAUvC,KAAK6L,OAAOmT,UAAS;QAAC/R,OAAMnL;MAAP,CAArB;AACd,UAAIS,SAAS;AACZ+a,wBAAgB;AAChB9L,yBAAiByN,aAAa1c,SAASiP,iBAAiBhP,UAAxD;MACA;AACD,aAAOD;IACP;AAIGvC,QAAAA,KAAKsM,SAAS;AACjByS,mBAAa,SAAD;IAGZ,WAAS,CAAC/e,KAAKM,SAASsL,WAAW5D,KAAKhI,MAAK8B,KAAnC,GAA2C;AACrDid,mBAAa,aAAD;IAGZ,WAAS3B,QAAQ7N,MAAM7P,WAAW,GAAG;AACrCqf,mBAAa,YAAD;IAEZ;AAKDhC,wBAAoB/c,KAAKkf,UAAUpd,KAAf;AACpB,QAAIib,mBAAmB;AACtBzT,eAASyV,aAAa,eAAD;IACrB;AAID/e,SAAK4S,aAAawK,QAAQ7N,MAAM7P,SAAS,KAAKqd;AAC9C,QAAIO,eAAe;AAElB,UAAIF,QAAQ7N,MAAM7P,SAAS,GAAG;AAE7B,YAAI,CAAC2d,iBAAiBrd,KAAKM,SAAS0K,SAAS,YAAYhL,KAAKuP,MAAM,MAAM5P,QAAW;AACpF0d,0BAAgBrd,KAAK4d,UAAU5d,KAAKuP,MAAM,EAA1B;QAChB;AAED,YAAI,CAACiC,iBAAiB3M,SAASwY,aAA1B,GAA2C;AAE3C8B,cAAAA,eAAe;AACf7V,cAAAA,UAAU,CAACtJ,KAAKM,SAASyJ,eAAe;AAC3CoV,2BAAe;UACf;AACD9B,0BAAgBrd,KAAKof,WAAL,EAAkBD;QAClC;MAED,WAAS7V,QAAQ;AACjB+T,wBAAgB/T;MAChB;AAED,UAAIqT,mBAAmB,CAAC3c,KAAKiS,QAAQ;AACpCjS,aAAKwY,KAAL;AACAxY,aAAKib,eAAeoC,eAAc,MAAlC;MACA;AACDrd,WAAK2Y,gBAAgB0E,aAArB;IAEA,OAAI;AACJrd,WAAK6Z,kBAAL;AACA,UAAI8C,mBAAmB3c,KAAKiS,QAAQ;AACnCjS,aAAK2W,MAAM,KAAX;MACA;IACD;EACD;EAMDyI,aAAqB;AACpB,WAAO,KAAK5N,iBAAiB1J,iBAAiB,mBAAvC;EACP;EAeDkI,UAAWpJ,MAAgByY,eAAe,OAAqB;AAC9D,UAAMrf,OAAO;AAIb,QAAIe,MAAMC,QAAQ4F,IAAd,GAAqB;AACxB5G,WAAKgX,WAAYpQ,MAAMyY,YAAvB;AACA,aAAO;IACP;AAED,UAAMxe,MAAMiL,SAASlF,KAAK5G,KAAKM,SAASiK,WAApB;AACpB,QAAI1J,QAAQ,QAAQb,KAAKkB,QAAQC,eAAeN,GAA5B,GAAkC;AACrD,aAAO;IACP;AAED+F,SAAK2X,SAAW3X,KAAK2X,UAAU,EAAEve,KAAK0R;AACtC9K,SAAKoX,MAAQhe,KAAK8R,UAAU,UAAUlL,KAAK2X;AAC3Cve,SAAKkB,QAAQL,OAAO+F;AACpB5G,SAAKuX,YAAa;AAElB,QAAI8H,cAAc;AACjBrf,WAAKkT,YAAYrS,OAAOwe;AACxBrf,WAAKF,QAAQ,cAAce,KAAK+F,IAAhC;IACA;AAED,WAAO/F;EACP;EAMDmW,WAAYpQ,MAAkByY,eAAe,OAAY;AACxD3d,cAASkF,MAAO0Y,SAAkB;AACjC,WAAKtP,UAAUsP,KAAKD,YAApB;IACA,CAFM;EAGP;EAKDE,eAAgB3Y,MAA8B;AAC7C,WAAO,KAAKoJ,UAAUpJ,IAAf;EACP;EAODqQ,oBAAoBrQ,MAAgB;AAC/B/F,QAAAA,MAAMiL,SAASlF,KAAK,KAAKtG,SAASqK,mBAApB;AAElB,QAAK9J,QAAQ;AAAO,aAAO;AAE3B+F,SAAK2X,SAAS3X,KAAK2X,UAAU,EAAE,KAAK7M;AACpC,SAAKzI,UAAUpI,OAAO+F;AACtB,WAAO/F;EACP;EAOD2e,eAAerR,IAAWvH,MAAgB;AACzC,QAAI6Y;AACJ7Y,SAAK,KAAKtG,SAASqK,sBAAsBwD;AAEzC,QAAIsR,YAAY,KAAKxI,oBAAoBrQ,IAAzB,GAAgC;AAC/C,WAAK9G,QAAQ,gBAAgB2f,WAAW7Y,IAAxC;IACA;EACD;EAMD8Y,kBAAkBvR,IAAW;AAC5B,QAAI,KAAKlF,UAAU9H,eAAegN,EAA9B,GAAmC;AACtC,aAAO,KAAKlF,UAAUkF;AACtB,WAAKwR,WAAL;AACA,WAAK7f,QAAQ,mBAAmBqO,EAAhC;IACA;EACD;EAKDyR,oBAAoB;AACd3W,SAAAA,YAAY,CAAA;AACjB,SAAK0W,WAAL;AACK7f,SAAAA,QAAQ,gBAAb;EACA;EAQD+f,aAAa9T,OAAcnF,MAAgB;AACpC5G,UAAAA,OAAO;AACb,QAAI8f;AACJ,QAAIC;AAEJ,UAAMC,YAAalU,SAASC,KAAD;AAC3B,UAAMkU,YAAanU,SAASlF,KAAK5G,KAAKM,SAASiK,WAApB;AAGvByV,QAAAA,cAAc;AAAO;AAEzB,UAAME,WAAYlgB,KAAKkB,QAAQ8e;AAE3BE,QAAAA,YAAYvgB;AAAY;AACxB,QAAA,OAAOsgB,cAAc;AAAW,YAAM,IAAI1e,MAAM,kCAAV;AAG1C,UAAM6N,SAAUpP,KAAK4d,UAAUoC,SAAf;AAChB,UAAMtG,OAAS1Z,KAAKmgB,QAAQH,SAAb;AAGfpZ,SAAK2X,SAAS3X,KAAK2X,UAAU2B,SAAS3B;AACtC,WAAOve,KAAKkB,QAAQ8e;AAIpBhgB,SAAKogB,aAAaH,SAAlB;AAEAjgB,SAAKkB,QAAQ+e,aAAarZ;AAG1B,QAAIwI,QAAQ;AACPpP,UAAAA,KAAKwR,iBAAiB3M,SAASuK,MAA/B,GAAwC;AAErCiR,cAAAA,aAAargB,KAAK6T,QAAQ,UAAUjN,IAAvB;AACnBX,oBAAYmJ,QAAQiR,UAAT;AAEX,YAAIrgB,KAAKgT,iBAAiB5D,QAAQ;AACjCpP,eAAK2Y,gBAAgB0H,UAArB;QACA;MACD;AACDjR,aAAOhL,OAAP;IACA;AAGD,QAAIsV,MAAM;AACTqG,mBAAa/f,KAAKuP,MAAM1P,QAAQmgB,SAAnB;AACb,UAAID,eAAe,IAAI;AACtB/f,aAAKuP,MAAM3P,OAAOmgB,YAAY,GAAGE,SAAjC;MACA;AAEDH,iBAAW9f,KAAK6T,QAAQ,QAAQjN,IAArB;AAEX,UAAI8S,KAAKzV,UAAUY,SAAS,QAAxB;AAAoCrB,mBAAWsc,UAAS,QAAV;AAElD7Z,kBAAayT,MAAMoG,QAAR;IACX;AAGD9f,SAAKuX,YAAY;EACjB;EAMD+I,aAAavU,OAAckO,QAAsB;AAC1Cja,UAAAA,OAAO;AACb+L,YAAQC,SAASD,KAAD;AAEhB/L,SAAKogB,aAAarU,KAAlB;AAEA,WAAO/L,KAAKkT,YAAYnH;AACxB,WAAO/L,KAAKkB,QAAQ6K;AACpB/L,SAAKuX,YAAY;AACjBvX,SAAKF,QAAQ,iBAAiBiM,KAA9B;AACA/L,SAAKugB,WAAWxU,OAAOkO,MAAvB;EACA;EAKDuG,aAAajc,QAAyB;AAE/Bkc,UAAAA,eAAelc,UAAU,KAAKmc,aAAalM,KAAK,IAAlC;AAEf7H,SAAAA,iBAAkB,CAAA;AAClBuG,SAAAA,cAAe,CAAA;AACpB,SAAKyM,WAAL;AAEMrP,UAAAA,WAAsB,CAAA;AAC5B5O,cAAQ,KAAKR,SAAQ,CAACkO,QAAiBvO,QAAa;AACnD,UAAI4f,YAAYrR,QAAOvO,GAAR,GAAwB;AACtCyP,iBAASzP,OAAOuO;MAChB;IACD,CAJM;AAMP,SAAKlO,UAAU,KAAK8Q,OAAOzC,QAAQe;AAC9BiH,SAAAA,YAAY;AACZzX,SAAAA,QAAQ,cAAb;EACA;EAOD4gB,YAAYtR,QAAiBrD,OAAa;AACrC,QAAA,KAAKwD,MAAM1P,QAAQkM,KAAnB,KAA6B,GAAG;AACnC,aAAO;IACP;AACD,WAAO;EACP;EAOD6R,UAAU7R,OAA4CzC,SAAe,OAAwB;AAE5F,UAAMoT,SAAS5Q,SAASC,KAAD;AACvB,QAAI2Q,WAAW;AAAO,aAAO;AAE7B,UAAMtN,SAAS,KAAKlO,QAAQwb;AACxBtN,QAAAA,UAAUzP,QAAW;AAEpByP,UAAAA,OAAOuR,MAAM;AACTvR,eAAAA,OAAOuR;MACd;AAED,UAAIrX,QAAQ;AACX,eAAO,KAAKuK,QAAQ,UAAUzE,MAAvB;MACP;IACD;AAED,WAAO;EACP;EAODsJ,YAAatJ,QAAyBlK,WAAkB4H,OAAc,UAA6B;AAC9F9M,QAAAA,OAAO,MAAM4gB;AAEb,QAAA,CAACxR,QAAQ;AACZ,aAAO;IACP;AAEGtC,QAAAA,QAAQ,QAAQ;AACnB8T,YAAQ5gB,KAAK4b,gBAAL;IACR,OAAI;AACJgF,YAAQ5gB,KAAKwR,iBAAiB1J,iBAAiB,mBAAvC;IACR;AAED,aAASrC,IAAI,GAAGA,IAAImb,IAAIlhB,QAAQ+F,KAAK;AACpC,UAAImb,IAAInb,MAAM2J,QAAQ;AACrB;MACA;AAEGlK,UAAAA,YAAY,GAAG;AAClB,eAAO0b,IAAInb,IAAE;MACb;AAED,aAAOmb,IAAInb,IAAE;IACb;AACD,WAAO;EACP;EAQD0a,QAAQzG,MAAuC;AAE9C,QAAI,OAAOA,QAAQ,UAAU;AAC5B,aAAOA;IACP;AAED,QAAI3N,QAAQD,SAAS4N,IAAD;AACpB,WAAO3N,UAAU,OACd,KAAKwF,QAAQ9O,cAAe,gBAAe6L,WAAWvC,KAAD,KAArD,IACA;EACH;EAODoO,SAAUpJ,QAAwBkJ,QAAsB;AACnDja,QAAAA,OAAO;AAEX,QAAIuP,QAAQxO,MAAMC,QAAQ+P,MAAd,IAAwBA,SAAS,CAACA,MAAD;AAC7CxB,YAAQA,MAAMhL,OAAOsc,OAAK7gB,KAAKuP,MAAM1P,QAAQghB,CAAnB,MAA0B,EAA5C;AACFC,UAAAA,YAAYvR,MAAMA,MAAM7P,SAAS;AACvC6P,UAAMzQ,QAAQ4a,UAAQ;AACrB1Z,WAAK+gB,YAAarH,SAASoH;AAC3B9gB,WAAK+X,QAAQ2B,MAAMO,MAAnB;IACA,CAHD;EAIA;EAODlC,QAAShM,OAAckO,QAAsB;AACxCtb,QAAAA,SAASsb,SAAS,CAAA,IAAK,CAAC,UAAS,gBAAV;AAE3BrN,oBAAgB,MAAMjO,QAAQ,MAAM;AAC/B+a,UAAAA,MAAMsH;AACJhhB,YAAAA,OAAO;AACZ,YAAM8T,YAAY9T,KAAKM,SAAS0K;AACjC,YAAM0R,SAAS5Q,SAASC,KAAD;AAEvB,UAAI2Q,UAAU1c,KAAKuP,MAAM1P,QAAQ6c,MAAnB,MAA+B,IAAI;AAE5C5I,YAAAA,cAAc,UAAU;AAC3B9T,eAAK2W,MAAL;QACA;AAEG7C,YAAAA,cAAc,YAAY,CAAC9T,KAAKM,SAASwJ,YAAY;AACxD;QACA;MACD;AAED,UAAI4S,WAAW,QAAQ,CAAC1c,KAAKkB,QAAQC,eAAeub,MAA5B;AAAqC;AACzD5I,UAAAA,cAAc;AAAU9T,aAAKka,MAAMD,MAAX;AACxBnG,UAAAA,cAAc,WAAW9T,KAAKihB,OAAL;AAAe;AAE5CvH,aAAO1Z,KAAK6T,QAAQ,QAAQ7T,KAAKkB,QAAQwb,OAAlC;AAEH1c,UAAAA,KAAKuR,QAAQ1M,SAAS6U,IAAtB,GAA6B;AAChCA,eAAOA,KAAKvS,UAAU,IAAf;MACP;AAED6Z,gBAAUhhB,KAAKihB,OAAL;AACVjhB,WAAKuP,MAAM3P,OAAOI,KAAK+S,UAAU,GAAG2J,MAApC;AACA1c,WAAKkhB,cAAcxH,IAAnB;AAEI1Z,UAAAA,KAAKyS,SAAS;AAGb,YAAA,CAACzS,KAAK+gB,aAAa/gB,KAAKM,SAASuJ,cAAc;AAClD,cAAIuF,SAASpP,KAAK4d,UAAUlB,MAAf;AACTjE,cAAAA,OAAOzY,KAAK0Y,YAAYtJ,QAAQ,CAAzB;AACX,cAAIqJ,MAAM;AACTzY,iBAAK2Y,gBAAgBF,IAArB;UACA;QACD;AAIG,YAAA,CAACzY,KAAK+gB,aAAa,CAAC/gB,KAAKM,SAASmZ,kBAAkB;AACvDzZ,eAAKiZ,eAAejZ,KAAKuS,aAAauB,cAAc,QAApD;QACA;AAGD,YAAI9T,KAAKM,SAASmZ,oBAAoB,SAASzZ,KAAKihB,OAAL,GAAe;AAC7DjhB,eAAK2W,MAAL;QACA,WAAU,CAAC3W,KAAK+gB,WAAW;AAC3B/gB,eAAKmW,iBAAL;QACA;AAEDnW,aAAKF,QAAQ,YAAY4c,QAAQhD,IAAjC;AAEA,YAAI,CAAC1Z,KAAK+gB,WAAW;AACpB/gB,eAAKyW,oBAAoB;YAACwD;UAAD,CAAzB;QACA;MACD;AAED,UAAI,CAACja,KAAK+gB,aAAc,CAACC,WAAWhhB,KAAKihB,OAAL,GAAgB;AACnDjhB,aAAKiW,WAAL;AACAjW,aAAKwW,aAAL;MACA;IAED,CAnEc;EAoEf;EAOD+J,WAAY7G,OAAyB,MAAMO,QAAiB;AACrDja,UAAAA,OAAQ;AACd0Z,WAAS1Z,KAAKmgB,QAAQzG,IAAb;AAEL,QAAA,CAACA;AAAO;AAERjU,QAAAA,GAAEsV;AACN,UAAMhP,QAAQ2N,KAAK9J,QAAQ7D;AAC3BtG,QAAIH,UAAUoU,IAAD;AAEbA,SAAKtV,OAAL;AACIsV,QAAAA,KAAKzV,UAAUY,SAAS,QAAxB,GAAmC;AACtCkW,YAAM/a,KAAKiT,YAAYpT,QAAQ6Z,IAAzB;AACN1Z,WAAKiT,YAAYrT,OAAOmb,KAAK,CAA7B;AACA5W,oBAAcuV,MAAK,QAAN;IACb;AAED1Z,SAAKuP,MAAM3P,OAAO6F,GAAG,CAArB;AACAzF,SAAKuX,YAAY;AACjB,QAAI,CAACvX,KAAKM,SAAS8I,WAAWpJ,KAAKkT,YAAY/R,eAAe4K,KAAhC,GAAwC;AACrE/L,WAAKsgB,aAAavU,OAAOkO,MAAzB;IACA;AAED,QAAIxU,IAAIzF,KAAK+S,UAAU;AACtB/S,WAAKuZ,SAASvZ,KAAK+S,WAAW,CAA9B;IACA;AAED/S,SAAKyW,oBAAoB;MAACwD;IAAD,CAAzB;AACAja,SAAKwW,aAAL;AACAxW,SAAKmW,iBAAL;AACAnW,SAAKF,QAAQ,eAAeiM,OAAO2N,IAAnC;EAEA;EAWD1B,WAAY/K,QAAkB,MAAMrO,WAA6B,MAAI;EAAA,GAAY;AAGhF,QAAIa,UAAUC,WAAW,GAAG;AAC3Bd,iBAAWa,UAAU;IACrB;AACD,QAAI,OAAOb,YAAY,YAAY;AAClCA,iBAAW,MAAM;MAAA;IACjB;AAEGoB,QAAAA,OAAQ;AACZ,QAAImhB,QAAQnhB,KAAK+S;AACjB,QAAIqO;AACJnU,YAAQA,SAASjN,KAAK2X,WAAL;AAEjB,QAAI,CAAC3X,KAAKkf,UAAUjS,KAAf,GAAuB;AAC3BrO,eAAQ;AACR,aAAO;IACP;AAEDoB,SAAKqhB,KAAL;AAEIC,QAAAA,UAAU;AACVhY,QAAAA,SAAU1C,UAA4B;AACzC5G,WAAKuhB,OAAL;AAEI,UAAA,CAAC3a,QAAQ,OAAOA,SAAS;AAAU,eAAOhI,SAAQ;AACtD,UAAImN,QAAQD,SAASlF,KAAK5G,KAAKM,SAASiK,WAApB;AACpB,UAAI,OAAOwB,UAAU,UAAU;AAC9B,eAAOnN,SAAQ;MACf;AAEDoB,WAAK8Z,gBAAL;AACA9Z,WAAKgQ,UAAUpJ,MAAK,IAApB;AACA5G,WAAKuZ,SAAS4H,KAAd;AACAnhB,WAAK+X,QAAQhM,KAAb;AACAnN,eAASgI,IAAD;AACR0a,gBAAU;IACV;AAEG,QAAA,OAAOthB,KAAKM,SAASgJ,WAAW,YAAY;AAC/C8X,eAASphB,KAAKM,SAASgJ,OAAOtB,KAAK,MAAMiF,OAAO3D,MAAvC;IACT,OAAI;AACJ8X,eAAS;QACR,CAACphB,KAAKM,SAASkK,aAAayC;QAC5B,CAACjN,KAAKM,SAASiK,aAAa0C;MAFpB;IAIT;AAEG,QAAA,CAACqU,SAAS;AACbhY,aAAO8X,MAAD;IACN;AAED,WAAO;EACP;EAKD1K,eAAe;AACV1W,QAAAA,OAAO;AACXA,SAAKuX,YAAY;AAEbvX,QAAAA,KAAKyS,SAAS;AACjBzS,WAAKma,SAASna,KAAKuP,KAAnB;IACA;AAEDvP,SAAKyW,oBAAL;AACAzW,SAAKwW,aAAL;EACA;EAMDA,eAAe;AACRxW,UAAAA,OAAW;AAEjBA,SAAKwhB,qBAAL;AAEA,UAAMP,SAASjhB,KAAKihB,OAAL;AACf,UAAM3O,WAAWtS,KAAKsS;AAEtBtS,SAAK4E,QAAQX,UAAU4X,OAAO,OAAM7b,KAAK6R,GAAzC;AAGA,UAAM4P,iBAAiBzhB,KAAK4E,QAAQX;AAEpCwd,mBAAe5F,OAAO,SAAS7b,KAAKuS,SAApC;AACAkP,mBAAe5F,OAAO,YAAY7b,KAAKkS,UAAvC;AACAuP,mBAAe5F,OAAO,YAAY7b,KAAKmS,UAAvC;AACAsP,mBAAe5F,OAAO,WAAW,CAAC7b,KAAKqS,OAAvC;AACAoP,mBAAe5F,OAAO,UAAUvJ,QAAhC;AACAmP,mBAAe5F,OAAO,QAAQoF,MAA9B;AACAQ,mBAAe5F,OAAO,gBAAgB7b,KAAKuS,aAAa,CAACvS,KAAKwS,aAA9D;AACAiP,mBAAe5F,OAAO,mBAAmB7b,KAAKiS,MAA9C;AACAwP,mBAAe5F,OAAO,eAAe1W,cAAcnF,KAAKkB,OAAN,CAAlD;AACAugB,mBAAe5F,OAAO,aAAa7b,KAAKuP,MAAM7P,SAAS,CAAvD;EAEA;EAWD8hB,uBAAuB;AAClBxhB,QAAAA,OAAO;AAEX,QAAI,CAACA,KAAKiN,MAAMyU,UAAU;AACzB;IACA;AAED1hB,SAAKqS,UAAUrS,KAAKiN,MAAMyU,SAASC;AACnC3hB,SAAKoS,YAAY,CAACpS,KAAKqS;EACvB;EAQD4O,SAAS;AACR,WAAO,KAAK3gB,SAASsJ,aAAa,QAAQ,KAAK2F,MAAM7P,UAAU,KAAKY,SAASsJ;EAC7E;EAOD6M,oBAAqBmL,OAAoB,CAAA,GAAI;AACtC5hB,UAAAA,OAAO;AACToP,QAAAA,QAAQiF;AAENwN,UAAAA,eAAe7hB,KAAKiN,MAAMxK,cAAc,kBAAzB;AAEjBzC,QAAAA,KAAK4R,eAAe;AAKvB,UAASkQ,cAAT,SAAqBnE,WAAkC5R,OAAcsI,QAA+B;AAE/F,YAAA,CAACsJ,WAAW;AACfA,sBAAY9b,OAAO,oBAAoBoK,YAAYF,KAAD,IAAU,OAAOE,YAAYoI,MAAD,IAAU,WAAtE;QAClB;AAIGsJ,YAAAA,aAAakE,cAAc;AAC9B7hB,eAAKiN,MAAMsB,OAAOoP,SAAlB;QACA;AAEDrN,iBAAShR,KAAKqe,SAAd;AAIA,YAAIA,aAAakE,gBAAgBE,eAAe,GAAG;AAClDpE,oBAAUrN,WAAW;QACrB;AAED,eAAOqN;MACP;AAxBKrN,YAAAA,WAAgC,CAAA;AAChCyR,YAAAA,eAAyB/hB,KAAKiN,MAAMnF,iBAAiB,gBAA5B,EAA8CpI;AA0B7EM,WAAKiN,MAAMnF,iBAAiB,gBAA5B,EAA8ChJ,QAAS6e,eAAsB;AACxDA,kBAAWrN,WAAW;MAC1C,CAFD;AAMA,UAAItQ,KAAKuP,MAAM7P,UAAU,KAAKM,KAAKM,SAAS0K,QAAQ,UAAU;AAE7D8W,oBAAYD,cAAc,IAAI,EAAnB;MAGX,OAAI;AAEJ7hB,aAAKuP,MAAMzQ,QAASiN,WAAQ;AAC3BqD,mBAAWpP,KAAKkB,QAAQ6K;AACxBsI,kBAAUjF,OAAOpP,KAAKM,SAASkK,eAAe;AAE1C8F,cAAAA,SAASuN,SAASzO,OAAOiB,OAAzB,GAAmC;AACtC,kBAAM2R,YAAYhiB,KAAKiN,MAAMxK,cAAe,iBAAgB6L,WAAWvC,KAAD,mBAApD;AAClB+V,wBAAYE,WAAWjW,OAAOsI,KAAnB;UACX,OAAI;AACJjF,mBAAOiB,UAAUyR,YAAY1S,OAAOiB,SAAStE,OAAOsI,KAAxB;UAC5B;QACD,CAVD;MAYA;IAED,OAAM;AACNrU,WAAKiN,MAAMlB,QAAQ/L,KAAKga,SAAL;IACnB;AAEGha,QAAAA,KAAKyS,SAAS;AACjB,UAAI,CAACmP,KAAK3H,QAAQ;AACjBja,aAAKF,QAAQ,UAAUE,KAAKga,SAAL,CAAvB;MACA;IACD;EACD;EAMDxB,OAAO;AACFxY,QAAAA,OAAO;AAEPA,QAAAA,KAAKsS,YAAYtS,KAAKiS,UAAWjS,KAAKM,SAAS0K,SAAS,WAAWhL,KAAKihB,OAAL;AAAgB;AACvFjhB,SAAKiS,SAAS;AACdtM,YAAQ3F,KAAKyR,YAAW;MAAkB,iBAAA;IAAlB,CAAjB;AACPzR,SAAKwW,aAAL;AACArT,aAASnD,KAAKsR,UAAS;MAAC2Q,YAAY;MAAUC,SAAS;IAAhC,CAAf;AACRliB,SAAKmW,iBAAL;AACAhT,aAASnD,KAAKsR,UAAS;MAAC2Q,YAAY;MAAWC,SAAS;IAAjC,CAAf;AACRliB,SAAKuU,MAAL;AACAvU,SAAKF,QAAQ,iBAAiBE,KAAKsR,QAAnC;EACA;EAKDqF,MAAMmD,kBAAgB,MAAM;AACvB9Z,QAAAA,OAAO;AACX,QAAIF,UAAUE,KAAKiS;AAEnB,QAAI6H,iBAAiB;AAGpB9Z,WAAK8Z,gBAAL;AAEA,UAAI9Z,KAAKM,SAAS0K,SAAS,YAAYhL,KAAKuP,MAAM7P,QAAQ;AACzDM,aAAK6a,UAAL;MACA;IACD;AAED7a,SAAKiS,SAAS;AACdtM,YAAQ3F,KAAKyR,YAAW;MAAkB,iBAAA;IAAlB,CAAjB;AACPtO,aAASnD,KAAKsR,UAAS;MAAC4Q,SAAS;IAAV,CAAf;AACR,QAAIliB,KAAKM,SAASuJ,cAAc;AAC/B7J,WAAK6Z,kBAAL;IACA;AACD7Z,SAAKwW,aAAL;AAEI1W,QAAAA;AAASE,WAAKF,QAAQ,kBAAkBE,KAAKsR,QAApC;EACb;EAOD6E,mBAAkB;AAEjB,QAAI,KAAK7V,SAASiL,mBAAmB,QAAQ;AAC5C;IACA;AAEG4W,QAAAA,UAAY,KAAK5Q;AACrB,QAAI6Q,OAASD,QAAQ1G,sBAAR;AACb,QAAIC,MAASyG,QAAQ5G,eAAe6G,KAAK1G,MAAOpI,OAAO+O;AACnDC,QAAAA,OAASF,KAAKE,OAAOhP,OAAOiP;AAGhCpf,aAAS,KAAKmO,UAAS;MACtBqD,OAAQyN,KAAKzN,QAAQ;MACrB+G,KAAQA,MAAM;MACd4G,MAAQA,OAAO;IAHO,CAAf;EAMR;EAODpI,MAAMD,QAAiB;AAClBja,QAAAA,OAAO;AAEX,QAAI,CAACA,KAAKuP,MAAM7P;AAAQ;AAExB,QAAI6P,QAAQvP,KAAK4b,gBAAL;AACZla,cAAQ6N,OAAOmK,UAAe;AAC7B1Z,WAAKugB,WAAW7G,MAAK,IAArB;IACA,CAFM;AAIP1Z,SAAKmZ,UAAL;AACA,QAAI,CAACc;AAASja,WAAKyW,oBAAL;AACdzW,SAAKF,QAAQ,OAAb;EACA;EAODohB,cAAcnd,IAAgB;AACvB/D,UAAAA,OAAQ;AACd,UAAMmhB,QAASnhB,KAAK+S;AACpB,UAAMrO,SAAS1E,KAAKuR;AAEpB7M,WAAOua,aAAalb,IAAIW,OAAOgM,SAASyQ,UAAU,IAAlD;AACAnhB,SAAKuZ,SAAS4H,QAAQ,CAAtB;EACA;EAMDnI,gBAAgB/D,GAAyB;AACxC,QAAI/P,WAAWsd,WAAWrB,OAAOsB;AAC7BziB,QAAAA,OAAO;AAEXkF,gBAAa+P,KAAKA,EAAEmD,YAAYE,gBAA2B,KAAK;AAChEkK,gBAAYxV,aAAahN,KAAKqR,aAAN;AAIlBqR,UAAAA,WAAqB,CAAA;AAE3B,QAAI1iB,KAAKiT,YAAYvT,QAAQ;AAE5B+iB,aAAOzd,QAAQhF,KAAKiT,aAAa/N,SAAnB;AACdic,cAAQ7b,UAAUmd,IAAD;AAEbvd,UAAAA,YAAY,GAAG;AAAEic;MAAU;AAE/Bzf,gBAAQ1B,KAAKiT,aAAcyG,UAAiBgJ,SAASpjB,KAAKoa,IAAd,CAArC;IAEP,YAAW1Z,KAAKuS,aAAavS,KAAKM,SAAS0K,SAAS,aAAahL,KAAKuP,MAAM7P,QAAQ;AACpF,YAAM6P,QAAQvP,KAAK4b,gBAAL;AACd,UAAI+G;AACJ,UAAIzd,YAAY,KAAKsd,UAAUtV,UAAU,KAAKsV,UAAU9iB,WAAW,GAAG;AACrEijB,kBAAUpT,MAAMvP,KAAK+S,WAAW;MAEhC,WAAS7N,YAAY,KAAKsd,UAAUtV,UAAUlN,KAAK2X,WAAL,EAAkBjY,QAAQ;AACxEijB,kBAAUpT,MAAMvP,KAAK+S;MACrB;AAEG4P,UAAAA,YAAYhjB,QAAW;AAC1B+iB,iBAASpjB,KAAMqjB,OAAf;MACA;IACD;AAEG,QAAA,CAAC3iB,KAAK4iB,aAAaF,UAASzN,CAA3B,GAA+B;AACnC,aAAO;IACP;AAED5H,mBAAe4H,GAAE,IAAH;AAGd,QAAI,OAAOkM,UAAU,aAAa;AACjCnhB,WAAKuZ,SAAS4H,KAAd;IACA;AAEMuB,WAAAA,SAAShjB,QAAQ;AACvBM,WAAKugB,WAAWmC,SAASG,IAAT,CAAhB;IACA;AAED7iB,SAAKmZ,UAAL;AACAnZ,SAAKmW,iBAAL;AACAnW,SAAKiZ,eAAe,KAApB;AAEA,WAAO;EACP;EAKD2J,aAAarT,OAAgBjC,KAA6B;AAEzD,UAAMyD,SAASxB,MAAMzL,IAAI4V,UAAQA,KAAK9J,QAAQ7D,KAA/B;AAGX,QAAA,CAACgF,OAAOrR,UAAW,OAAO,KAAKY,SAASwiB,aAAa,cAAc,KAAKxiB,SAASwiB,SAAS/R,QAAOzD,GAA9B,MAAuC,OAAQ;AACrH,aAAO;IACP;AAED,WAAO;EACP;EASDyL,iBAAiB7T,WAAkB+P,GAA6B;AAC/D,QAAI6F,aAAaiI,UAAU/iB,OAAO;AAElC,QAAIA,KAAK6R;AAAK3M,mBAAa;AAC3B,QAAIlF,KAAK2X,WAAL,EAAkBjY;AAAS;AAI/B,QAAIiO,UAAU2K,cAAuBrD,CAAxB,KAA8BtH,UAAU,YAAWsH,CAAZ,GAAgB;AAEnE6F,oBAAgB9a,KAAK0a,cAAcxV,SAAnB;AAChB,UAAI4V,aAAa;AAEZ,YAAA,CAACA,YAAY7W,UAAUY,SAAS,QAA/B,GAA0C;AAC9Cke,qBAAajI;QACb,OAAI;AACJiI,qBAAa/iB,KAAK0Y,YAAYoC,aAAY5V,WAAU,MAAvC;QACb;MAGD,WAASA,YAAY,GAAG;AACxB6d,mBAAa/iB,KAAKqR,cAAc2R;MAChC,OAAI;AACJD,mBAAa/iB,KAAKqR,cAAc3L;MAChC;AAGD,UAAIqd,UAAU;AACTA,YAAAA,SAAS9e,UAAUY,SAAS,QAA5B,GAAuC;AAC1C7E,eAAK4a,iBAAiBE,WAAtB;QACA;AACD9a,aAAK2a,mBAAmBoI,QAAxB;MACA;IAGD,OAAI;AACJ/iB,WAAKijB,UAAU/d,SAAf;IACA;EACD;EAED+d,UAAU/d,WAAiB;EAAA;EAM3BwV,cAAcxV,WAAkB;AAE3B4V,QAAAA,cAAc,KAAKvJ,QAAQ9O,cAAc,cAA3B;AAClB,QAAIqY,aAAa;AAChB,aAAOA;IACP;AAGGyB,QAAAA,SAAS,KAAKhL,QAAQzJ,iBAAiB,SAA9B;AACb,QAAIyU,QAAQ;AACX,aAAOvX,QAAQuX,QAAOrX,SAAR;IACd;EACD;EAWDqU,SAAS2J,SAAgB;AACxB,SAAKnQ,WAAW,KAAKxD,MAAM7P;EAC3B;EAMDkc,kBAA2B;AACnB7a,WAAAA,MAAM2G,KAAM,KAAK6J,QAAQzJ,iBAAiB,gBAA9B,CAAZ;EACP;EAMDuZ,OAAO;AACD/O,SAAAA,WAAW;AAChB,SAAKkE,aAAL;EACA;EAKD+K,SAAS;AACHjP,SAAAA,WAAW;AAChB,SAAKkE,aAAL;EACA;EAMDI,UAAU;AACL5W,QAAAA,OAAO;AACXA,SAAKiN,MAAMmD,WAAc;AACzBpQ,SAAKqR,cAAcjB,WAAY;AAC/BpQ,SAAKyR,WAAWE,WAAY;AAC5B3R,SAAKkS,aAAiB;AACtB,SAAKyE,MAAL;AACA3W,SAAKqhB,KAAL;EACA;EAMDxK,SAAS;AACJ7W,QAAAA,OAAO;AACXA,SAAKiN,MAAMmD,WAAc;AACzBpQ,SAAKqR,cAAcjB,WAAY;AAC/BpQ,SAAKyR,WAAWE,WAAY3R,KAAK2R;AACjC3R,SAAKkS,aAAiB;AACtBlS,SAAKuhB,OAAL;EACA;EAOD4B,UAAU;AACLnjB,QAAAA,OAAO;AACX,QAAIqW,iBAAiBrW,KAAKqW;AAE1BrW,SAAKF,QAAQ,SAAb;AACAE,SAAKT,IAAL;AACAS,SAAK4E,QAAQR,OAAb;AACApE,SAAKsR,SAASlN,OAAd;AAEApE,SAAKiN,MAAM5K,YAAYgU,eAAehU;AACtCrC,SAAKiN,MAAM0E,WAAW0E,eAAe1E;AAErCxN,kBAAcnE,KAAKiN,OAAM,eAAc,sBAA1B;AAEbjN,SAAK+R,SAAL;AAEA,WAAO/R,KAAKiN,MAAMmG;EAClB;EAODvH,OAAQuX,cAA+Bxc,MAA4B;AAC9DuH,QAAAA,IAAI2O;AACF9c,UAAAA,OAAO;AAET,QAAA,OAAO,KAAKM,SAASuL,OAAOuX,kBAAkB,YAAY;AAC7D,aAAO;IACP;AAGDtG,WAAO9c,KAAKM,SAASuL,OAAOuX,cAAcpb,KAAK,MAAMpB,MAAMqF,WAApD;AAEH,QAAA,CAAC6Q,MAAM;AACV,aAAO;IACP;AAEDA,WAAOjb,OAAQib,IAAF;AAGb,QAAIsG,iBAAiB,YAAYA,iBAAiB,iBAAiB;AAE9Dxc,UAAAA,KAAK5G,KAAKM,SAASmK,gBAAgB;AACtC9E,gBAAQmX,MAAK;UAAiB,iBAAA;QAAjB,CAAN;MACP,OAAI;AACJnX,gBAAQmX,MAAK;UAAoB,mBAAA;QAApB,CAAN;MACP;IAED,WAASsG,iBAAiB,YAAY;AACtCjV,WAAKvH,KAAKqJ,MAAMjQ,KAAKM,SAASqK;AAC9BhF,cAAQmX,MAAK;QAAe3O,cAAAA;MAAf,CAAN;AACJvH,UAAAA,KAAKqJ,MAAMjQ,KAAKM,SAASmK,gBAAgB;AAC3C9E,gBAAQmX,MAAK;UAAkB,iBAAA;QAAlB,CAAN;MACP;IACD;AAED,QAAIsG,iBAAiB,YAAYA,iBAAiB,QAAQ;AACzD,YAAMrX,QAAQC,SAASpF,KAAK5G,KAAKM,SAASiK,WAApB;AACtB5E,cAAQmX,MAAK;QAAe/Q,cAAAA;MAAf,CAAN;AAIHqX,UAAAA,iBAAiB,QAAQ;AAC5B5f,mBAAWsZ,MAAK9c,KAAKM,SAAS+K,SAApB;AACV1F,gBAAQmX,MAAK;UAAgB,gBAAA;QAAhB,CAAN;MACP,OAAI;AACJtZ,mBAAWsZ,MAAK9c,KAAKM,SAASgL,WAApB;AACV3F,gBAAQmX,MAAK;UACZ3I,MAAK;UACLhG,IAAGvH,KAAKoX;QAFI,CAAN;AAMPpX,aAAK+Z,OAAO7D;AACZ9c,aAAKkB,QAAQ6K,SAASnF;MACtB;IAGD;AAED,WAAOkW;EAEP;EAODjJ,QAASuP,cAA+Bxc,MAAuB;AACxDkW,UAAAA,OAAO,KAAKjR,OAAOuX,cAAcxc,IAA1B;AAETkW,QAAAA,QAAQ,MAAM;AACjB,YAAM;IACN;AACD,WAAOA;EACP;EASD6C,aAAiB;AAEhBje,cAAQ,KAAKR,SAAUkO,YAAmB;AACrCA,UAAAA,OAAOuR,MAAM;AAChBvR,eAAOuR,KAAKvc,OAAZ;AACOgL,eAAAA,OAAOuR;MACd;IACD,CALM;EAOP;EAMDP,aAAarU,OAAa;AAEzB,UAAM4R,YAAc,KAAKC,UAAU7R,KAAf;AACpB,QAAI4R;AAAYA,gBAAUvZ,OAAV;EAEhB;EAOD8a,UAAWjS,OAAuB;AAC1B,WAAA,KAAK3M,SAASgJ,UAAW2D,MAAMvN,SAAS,KAAO,KAAKY,SAASkJ,aAAkCxB,KAAK,MAAMiF,KAA5D;EACrD;EAUDoW,KAAMC,MAAaC,QAAeC,QAAY;AACzCxjB,QAAAA,OAAO;AACX,QAAIyjB,cAAczjB,KAAKujB;AAGvBvjB,SAAKujB,UAAU,WAAU;AACpBhH,UAAAA,QAAQmH;AAERJ,UAAAA,SAAS,SAAS;AACrB/G,iBAASkH,YAAYxjB,MAAMD,MAAMP,SAAxB;MACT;AAEDikB,mBAAaF,OAAOvjB,MAAMD,MAAMP,SAAnB;AAET6jB,UAAAA,SAAS,WAAW;AACvB,eAAOI;MACP;AAEGJ,UAAAA,SAAS,UAAU;AACtB/G,iBAASkH,YAAYxjB,MAAMD,MAAMP,SAAxB;MACT;AAED,aAAO8c;IACP;EAED;AA3oF4D;ACxB/C,SAAA,kBAAyB;AACvC9O,WAAS,KAAKR,OAAM,UAAS,MAAI;AAChC,SAAKsJ,KAAL;EACA,CAFO;AAGR;ACFc,SAAA,mBAAyB;AACnCvW,MAAAA,OAAO;AACX,MAAI2jB,sBAAsB3jB,KAAKqV;AAE/BrV,OAAKM,SAASuJ,eAAe;AAI7B,MAAI+Z,iBAAiB,SAAjBA,gBAA0BxU,QAAmB;AAChD1C,eAAW,MAAI;AACd,UAAImX,WAAWzU,OAAO3M,cAAc,OAArB;AACXohB,UAAAA,oBAAoBC,kBAAkB;AACrC1U,YAAAA,OAAOnL,UAAUY,SAAS,UAA1B,GAAuC;AAC1Cgf,mBAASE,UAAU;QACnB,OAAI;AACJF,mBAASE,UAAU;QACnB;MACD;IACD,GAAC,CATQ;EAUV;AAGD/jB,OAAKqjB,KAAK,SAAQ,kBAAiB,MAAM;AAEpCW,QAAAA,qBAAqBhkB,KAAKM,SAASuL,OAAOuD;AAE9CpP,SAAKM,SAASuL,OAAOuD,SAAS,CAACxI,MAAMqF,iBAAgB;AACpD,UAAIgY,WAAWpiB,OAAOmiB,mBAAmBhc,KAAKhI,MAAM4G,MAAMqF,YAApC,CAAD;AACrB,UAAI4X,WAAW1hB,SAASC,cAAc,OAAvB;AACfyhB,eAASnW,iBAAiB,SAAQ,SAASJ,KAAI;AAC9CD,uBAAeC,GAAD;MACd,CAFD;AAIAuW,eAAS/W,OAAO;AAChB,YAAM4P,SAAS5Q,SAASlF,KAAK5G,KAAKM,SAASiK,WAApB;AAGvB,UAAImS,UAAU1c,KAAKuP,MAAM1P,QAAQ6c,MAAnB,IAA6B,IAAI;AAC9CmH,iBAASE,UAAU;MACnB;AAEDE,eAASC,QAAQL,QAAjB;AACA,aAAOI;IACP;EACD,CAtBD;AAyBAjkB,OAAKb,GAAG,eAAe4M,WAAiB;AACvC,QAAIqD,SAASpP,KAAK4d,UAAU7R,KAAf;AAEb,QAAIqD,QAAQ;AACXA,aAAOnL,UAAUG,OAAO,UAAxB;AACAwf,qBAAexU,MAAD;IACd;EACD,CAPD;AAUApP,OAAKb,GAAG,YAAY4M,WAAiB;AACpC,QAAIqD,SAASpP,KAAK4d,UAAU7R,KAAf;AAEb,QAAIqD,QAAQ;AACXwU,qBAAexU,MAAD;IACd;EACD,CAND;AAUApP,OAAKqjB,KAAK,WAAU,kBAAiB,CAAE/V,KAAmB8B,WAAsB;AAE3EA,QAAAA,OAAOnL,UAAUY,SAAS,UAA1B,GAAuC;AAC1CuK,aAAOnL,UAAUG,OAAO,UAAxB;AACApE,WAAKugB,WAAWnR,OAAOQ,QAAQ7D,KAA/B;AACA/L,WAAKiZ,eAAL;AACA5L,qBAAeC,KAAI,IAAL;AACd;IACM;AAEPqW,wBAAoB3b,KAAKhI,MAAMsN,KAAK8B,MAApC;AAEAwU,mBAAexU,MAAD;EACd,CAbD;AAeA;ACnFc,SAAA,aAAyB8D,aAAuB;AACxDlT,QAAAA,OAAO;AAEb,QAAMkB,UAAUmC,OAAOC,OAAO;IAC7BwD,WAAW;IACXqd,OAAO;IACPrH,MAAOlW,UAAmB;AACjB,aAAA,eAAcA,KAAKE,qBAAqBF,KAAKud;IACrD;EAL4B,GAM3BjR,WANa;AAQhBlT,OAAKb,GAAG,cAAa,MAAI;AACpBilB,QAAAA,SAASviB,OAAOX,QAAQ4b,KAAK5b,OAAb,CAAD;AACnBkjB,WAAO1W,iBAAiB,SAASJ,SAAM;AAElCtN,UAAAA,KAAKkS,YAAY;AACpB;MACA;AAEDlS,WAAKka,MAAL;AAEA,UAAIla,KAAKM,SAAS0K,SAAS,YAAYhL,KAAKM,SAAS4J,kBAAkB;AACtElK,aAAK+X,QAAQ,EAAb;MACA;AAEDzK,UAAID,eAAJ;AACAC,UAAIE,gBAAJ;IACA,CAdD;AAeAxN,SAAKuR,QAAQnK,YAAYgd,MAAzB;EACA,CAlBD;AAoBA;ACjCc,SAAA,YAAyB;AACnCpkB,MAAAA,OAAO;AACX,MAAI,CAACqkB,EAAE1jB,GAAG2jB;AAAU,UAAM,IAAI/iB,MAAM,uDAAV;AAC1B,MAAIvB,KAAKM,SAAS0K,SAAS;AAAS;AAEpC,MAAIuZ,YAAavkB,KAAKqhB;AACtB,MAAImD,cAAexkB,KAAKuhB;AAExBvhB,OAAKqjB,KAAK,WAAU,QAAO,MAAI;AAC9B,QAAIiB,WAAWD,EAAErkB,KAAKuR,OAAN,EAAe3K,KAAK,UAArB;AACf,QAAI0d;AAAUA,eAAS1N,QAAT;AACd,WAAO2N,UAAUvc,KAAKhI,IAAf;EACP,CAJD;AAMAA,OAAKqjB,KAAK,WAAU,UAAS,MAAI;AAChC,QAAIiB,WAAWD,EAAErkB,KAAKuR,OAAN,EAAe3K,KAAK,UAArB;AACf,QAAI0d;AAAUA,eAASzN,OAAT;AACd,WAAO2N,YAAYxc,KAAKhI,IAAjB;EACP,CAJD;AAMAA,OAAKb,GAAG,cAAa,MAAI;AACpBslB,QAAAA,WAAWJ,EAAErkB,KAAKuR,OAAN,EAAe+S,SAAS;MACvC/U,OAAO;MACPmV,sBAAsB;MACtBtU,UAAUpQ,KAAKsS;MACfpF,OAAO,CAAC+H,GAAG0P,OAAO;AACjBA,WAAGjZ,YAAYtI,IAAI,SAASuhB,GAAGC,OAAOxhB,IAAI,OAAd,CAA5B;AACAqhB,iBAASrhB,IAAI;UAACyhB,UAAU;QAAX,CAAb;MACA;MACDtX,MAAM,MAAI;AACTkX,iBAASrhB,IAAI;UAACyhB,UAAU;QAAX,CAAb;AAEI9T,YAAAA,SAAkB,CAAA;AACtB0T,iBAAS/T,SAAS,cAAlB,EAAkCoU,KAAK,WAA0B;AAChE,cAAI,KAAKlV,QAAQ7D;AAAQgF,mBAAOzR,KAAK,KAAKsQ,QAAQ7D,KAAzB;QACzB,CAFD;AAIA/L,aAAKsX,SAASvG,MAAd;MACA;IAjBsC,CAAzB;EAoBf,CArBD;AAuBA;ACxCc,SAAA,gBAAyBmC,aAAuB;AACxDlT,QAAAA,OAAO;AAEb,QAAMkB,UAAUmC,OAAOC,OAAO;IAC7B6gB,OAAgB;IAChBY,aAAgB;IAChBC,eAAgB;IAChBC,YAAgB;IAChBC,YAAgB;IAEhBpI,MAAOlW,UAAmB;AACzB,aACC,iBAAiBA,KAAKme,cAAc,mBAClBne,KAAKoe,gBAAgB,oBACnBpe,KAAKqe,aAAa,OAAOre,KAAKud,QAAQ,sBACzCvd,KAAKse,aAAa;IAIpC;EAhB4B,GAiB3BhS,WAjBa;AAmBhBlT,OAAKb,GAAG,cAAa,MAAI;AACpBwf,QAAAA,SAAS9c,OAAOX,QAAQ4b,KAAK5b,OAAb,CAAD;AAEfikB,QAAAA,aAAaxG,OAAOlc,cAAc,MAAIvB,QAAQgkB,UAAjC;AACjB,QAAIC,YAAY;AACfA,iBAAWzX,iBAAiB,SAASJ,SAAM;AAC1CD,uBAAeC,KAAI,IAAL;AACdtN,aAAK2W,MAAL;MACA,CAHD;IAIA;AAED3W,SAAKsR,SAAS2N,aAAaN,QAAQ3e,KAAKsR,SAAS9O,UAAjD;EACA,CAZD;AAcA;ACrCc,SAAA,iBAAyB;AACnCxC,MAAAA,OAAO;AAUXA,OAAKqjB,KAAK,WAAU,YAAYH,aAAmB;AAElD,QAAIljB,KAAKM,SAAS0K,SAAS,YAAY,CAAChL,KAAKuR,QAAQ1M,SAAS7E,KAAKqR,aAA3B,GAA4C;AACnF6R,gBAAUljB,KAAKuP,MAAM7P;IACrB,OAAM;AACNwjB,gBAAU3W,KAAKC,IAAI,GAAGD,KAAKiR,IAAIxd,KAAKuP,MAAM7P,QAAQwjB,OAA5B,CAAZ;AAENA,UAAAA,WAAWljB,KAAK+S,YAAY,CAAC/S,KAAK+gB,WAAW;AAEhD/gB,aAAK4b,gBAAL,EAAuB9c,QAAQ,CAAC8R,OAAMgM,MAAM;AACvCA,cAAAA,IAAIsG,SAAS;AAChBljB,iBAAKqR,cAAciF,sBAAsB,eAAe1F,KAAxD;UACA,OAAM;AACN5Q,iBAAKuR,QAAQnK,YAAawJ,KAA1B;UACA;QACD,CAND;MAOA;IACD;AAED5Q,SAAK+S,WAAWmQ;EAChB,CApBD;AAsBAljB,OAAKqjB,KAAK,WAAU,aAAane,eAAqB;AAErD,QAAI,CAAClF,KAAKuS;AAAY;AAGtB,UAAMuI,cAAe9a,KAAK0a,cAAcxV,SAAnB;AACrB,QAAI4V,aAAa;AAChB,YAAMC,MAAMzV,UAAUwV,WAAD;AACrB9a,WAAKuZ,SAASrU,YAAY,IAAI6V,MAAM,IAAGA,GAAvC;AACA/a,WAAKsZ,cAAL;AACAnV,oBAAc2W,aAA2B,aAA5B;IAGb,OAAI;AACJ9a,WAAKuZ,SAASvZ,KAAK+S,WAAW7N,SAA9B;IAEA;EAED,CAlBD;AAoBA;ACnDc,SAAA,iBAAyB;AACjClF,QAAAA,OAAO;AAEbA,OAAKM,SAASoJ,aAAa;AAE3B1J,OAAKqjB,KAAK,UAAS,SAAQ,MAAI;AAC9BrjB,SAAKyR,aAAczR,KAAKuR;AAExB/N,eAAYxD,KAAKqR,eAAe,gBAAtB;AAET,UAAM+T,MAAMvjB,OAAO,mCAAD;AACnBujB,QAAI7W,OAAOvO,KAAKqR,aAAhB;AACArR,SAAKsR,SAAS2N,aAAamG,KAAKplB,KAAKsR,SAAS9O,UAA9C;AAGA,UAAMkJ,cAAc7J,OAAO,mDAAD;AAC1B6J,gBAAYA,cAAc1L,KAAKM,SAASoL,eAAc;AACtD1L,SAAKuR,QAAQhD,OAAO7C,WAApB;EAEA,CAdD;AAiBA1L,OAAKb,GAAG,cAAa,MAAI;AAGxBa,SAAKqR,cAAc3D,iBAAiB,WAAWJ,SAAqB;AAE3DA,cAAAA,IAAI8K,SAAZ;QACME,KAAAA;AACAtY,cAAAA,KAAKiS,QAAQ;AAChB5E,2BAAeC,KAAI,IAAL;AACdtN,iBAAK2W,MAAL;UACA;AACD3W,eAAKwX,iBAAL;AACD;QACKc,KAAAA;AACJtY,eAAKyR,WAAWE,WAAW;AAC5B;MAVD;AAYO3R,aAAAA,KAAKwV,UAAUxN,KAAKhI,MAAKsN,GAAzB;IACP,CAfD;AAiBAtN,SAAKb,GAAG,QAAO,MAAI;AAClBa,WAAKyR,WAAWE,WAAW3R,KAAKkS,aAAa,KAAKlS,KAAK2R;IACvD,CAFD;AAMA3R,SAAKb,GAAG,iBAAgB,MAAK;AAC5Ba,WAAKqR,cAAckD,MAAnB;IACA,CAFD;AAKA,UAAM8Q,cAAcrlB,KAAK2V;AACzB3V,SAAKqjB,KAAK,WAAU,UAAU/V,SAAkB;AAC3CA,UAAAA,OAAOA,IAAIgY,iBAAiBtlB,KAAKqR;AAAgB;AACrD,aAAOgU,YAAYrd,KAAKhI,IAAjB;IACP,CAHD;AAKAyN,aAASzN,KAAKqR,eAAc,QAAQ,MAAMrR,KAAK2V,OAAL,CAAlC;AAGR3V,SAAKqjB,KAAK,UAAS,SAAQ,MAAK;AAE/B,UAAI,CAACrjB,KAAKiS;AAAS;AACnBjS,WAAKyR,WAAW8C,MAAM;QAACgR,eAAe;MAAhB,CAAtB;IACA,CAJD;EAMA,CA9CD;AAgDA;AC1Ec,SAAA,iBAAyB;AACnCvlB,MAAAA,OAAW;AAEfA,OAAKb,GAAG,cAAa,MAAI;AAGxB,QAAIqmB,aAAgBrjB,SAASC,cAAc,MAAvB;AACpB,QAAImP,UAAcvR,KAAKqR;AACvBmU,eAAWjiB,MAAMkiB,UAAU;AAE3BzlB,SAAK4E,QAAQwC,YAAYoe,UAAzB;AAGA,QAAIE,kBAAoB,CAAE,iBAAiB,YAAY,cAAc,cAAc,eAA3D;AAExB,eAAWC,cAAcD,iBAAiB;AAEzCF,iBAAWjiB,MAAMoiB,cAAcpU,QAAQhO,MAAMoiB;IAC7C;AAOGC,QAAAA,SAAS,MAAI;AAChBJ,iBAAWnW,cAAckC,QAAQxF;AACjCwF,cAAQhO,MAAMoR,QAAS6Q,WAAWK,cAAY;IAC9C;AAEDD,WAAM;AACN5lB,SAAKb,GAAG,+BAA8BymB,MAAtC;AACAnY,aAAS8D,SAAQ,SAASqU,MAAlB;AACRnY,aAAS8D,SAAQ,SAASqU,MAAlB;AACRnY,aAAS8D,SAAQ,QAAQqU,MAAjB;AACRnY,aAAS8D,SAAQ,UAAUqU,MAAnB;EACR,CAjCD;AAmCA;ACvCc,SAAA,sBAAyB;AACnC5lB,MAAAA,OAAO;AACX,MAAI8lB,uBAAuB9lB,KAAKgZ;AAEhC,OAAKqK,KAAK,WAAU,mBAAmB/V,SAAsB;AAE5D,QAAItN,KAAKiT,YAAYvT,QAAQ;AAC5B,aAAOomB,qBAAqB9d,KAAKhI,MAAMsN,GAAhC;IACP;AAED,WAAO;EACP,CAPD;AASA;ACbc,SAAA,kBAAyB;AAClC+V,OAAAA,KAAK,WAAU,iBAAgB,MAAM;EAAA,CAA1C;AACKA,OAAAA,KAAK,WAAU,aAAY,MAAM;EAAA,CAAtC;AACA;ACAc,SAAA,mBAAyB;AACnCrjB,MAAAA,OAAO;AAEX,MAAI+lB,eAAe/lB,KAAKwV;AAExBxV,OAAKqjB,KAAK,WAAU,aAAa/V,SAAoB;AACpD,QAAIrG,OAAOmI,QAAQlO,SAASsP;AAExB,QAAA,CAACxQ,KAAKiS,UAAU,EAAE3E,IAAI8K,YAAYE,YAAsBhL,IAAI8K,YAAYE,YAAsB;AACjG,aAAOyN,aAAa/d,KAAKhI,MAAKsN,GAAvB;IACP;AAEDtN,SAAK2S,cAAc;AACnBnC,eAAa/L,YAAYzE,KAAKgT,cAAa,cAAnB;AACxB/L,YAAW3B,UAAUtF,KAAKgT,cAAa,mBAAnB;AAEhB,QAAA,CAACxC,UAAU;AACd;IACA;AAED,QAAIlD,IAAI8K,YAAYE,UAAoB;AACvC9H,iBAAWA,SAASwV;IACpB,OAAM;AACNxV,iBAAWA,SAASyV;IACpB;AAEG,QAAA,CAACzV,UAAU;AACd;IACA;AAEDtP,cAAmCsP,SAAU1I,iBAAiB,mBAAjD;AACbsH,aAAYlO,QAASqL,KAAKiR,IAAItc,QAAQxB,SAAS,GAAGuH,KAA7B;AAErB,QAAImI,QAAQ;AACXpP,WAAK2Y,gBAAgBvJ,MAArB;IACA;EAED,CAhCD;AAkCA;ACrCc,SAAA,cAAyB8D,aAAuB;AAE9D,QAAMhS,UAAUmC,OAAOC,OAAO;IAC5B+Q,OAAY;IACZ8P,OAAY;IACZrd,WAAY;IACZyH,QAAY;EAJgB,GAK1B2E,WALY;AAShB,MAAIlT,OAAS;AAGb,MAAI,CAACkB,QAAQqN,QAAQ;AACpB;EACA;AAEGuO,MAAAA,OAAO,yCAAyC5b,QAAQ4F,YAAY,4BAA4BmF,YAAY/K,QAAQijB,KAAT,IAAkB,OAAOjjB,QAAQmT,QAAQ;AAExJrU,OAAKqjB,KAAK,SAAQ,kBAAiB,MAAM;AAEpC6C,QAAAA,mBAAmBlmB,KAAKM,SAASuL,OAAO6N;AAE5C1Z,SAAKM,SAASuL,OAAO6N,OAAO,CAAC9S,MAAgBuQ,WAA8B;AAE1E,UAAIuC,OAAO7X,OAAOqkB,iBAAiBle,KAAKhI,MAAM4G,MAAMuQ,MAAlC,CAAD;AAEjB,UAAIgP,eAAetkB,OAAOib,IAAD;AACzBpD,WAAKtS,YAAY+e,YAAjB;AAEA1Y,eAAS0Y,cAAa,aAAa7Y,SAAQ;AAC1CD,uBAAeC,KAAI,IAAL;MACd,CAFO;AAIRG,eAAS0Y,cAAa,SAAS7Y,SAAQ;AAGtCD,uBAAeC,KAAI,IAAL;AAEVtN,YAAAA,KAAKsS;AAAW;AAChB,YAAA,CAACtS,KAAK4iB,aAAa,CAAClJ,IAAD,GAAOpM,GAAzB;AAA8C;AAEnDtN,aAAKugB,WAAW7G,IAAhB;AACA1Z,aAAKiZ,eAAe,KAApB;AACAjZ,aAAKiW,WAAL;MACA,CAXO;AAaR,aAAOyD;IACP;EAED,CA/BD;AAkCA;ACtDc,SAAA,qBAAyBxG,aAA4B;AAC7DlT,QAAAA,OAAO;AAEb,QAAMkB,UAAUmC,OAAOC,OAAO;IAC7B8iB,MAAOhX,YAAqB;AAC3B,aAAOA,OAAOpP,KAAKM,SAASkK;IAC5B;EAH4B,GAI5B0I,WAJc;AAMhBlT,OAAKb,GAAG,eAAc,SAAS4M,OAAa;AAC3C,QAAI,CAAC/L,KAAKuS,WAAW;AACpB;IACA;AAEGvS,QAAAA,KAAKqR,cAActF,MAAMzJ,KAAzB,MAAoC,IAAI;AAC3C,UAAI8M,SAASpP,KAAKkB,QAAQ6K;AAC1B,UAAIqD,QAAQ;AACXpP,aAAK8Z,gBAAgB5Y,QAAQklB,KAAKpe,KAAKhI,MAAMoP,MAAxB,CAArB;MACA;IACD;EACD,CAXD;AAaA;ACxBc,SAAA,iBAAyB;AACjCpP,QAAAA,OAAa;AACnB,QAAMqmB,eAAmBrmB,KAAK2Z;AAC9B,QAAM2M,yBAA0BtmB,KAAK6Z;AACrC,QAAM0M,oBAAuBvmB,KAAK4Z;AAE9B4M,MAAAA,aAAgC,CAAA;AACpC,MAAIhV;AACAiV,MAAAA,eAAmB;AACvB,MAAIC;AACAC,MAAAA,iBAA4B,CAAA;AAEhC,MAAI,CAAC3mB,KAAKM,SAASsmB,gBAAgB;AAGlC5mB,SAAKM,SAASsmB,iBAAiB,MAAY;AAE1C,YAAMC,iBAAiBrV,iBAAiB4J,gBAAgB5J,iBAAiBsV,eAAetV,iBAAiB6J;AACrGwL,UAAAA,iBAAiB,KAAK;AACzB,eAAO;MACP;AAEG7mB,UAAAA,KAAKgT,cAAc;AACtB,YAAIoM,aAAapf,KAAKof,WAAL;AACjB,YAAInY,QAASlG,MAAM2G,KAAK0X,UAAX,EAAuBvf,QAAQG,KAAKgT,YAApC;AACb,YAAI/L,SAAUmY,WAAW1f,SAAO,GAAI;AACnC,iBAAO;QACP;MACD;AAED,aAAO;IACP;EACD;AAGD,MAAI,CAACM,KAAKM,SAASymB,UAAU;AAC5B,UAAM;EACN;AAKD/mB,OAAKM,SAASuK,YAAc,CAAC;IAACqR,OAAM;EAAP,GAAiB;IAACA,OAAM;EAAP,CAAlB;AAItB8K,QAAAA,cAAellB,WAAyB;AAEzC,QAAA,OAAO9B,KAAKM,SAASqJ,eAAe,YAAY6H,iBAAiBd,SAAShR,UAAUM,KAAKM,SAASqJ,YAAY;AACjH,aAAO;IACP;AAEI7H,QAAAA,SAAS0kB,cAAeA,WAAW1kB,QAAQ;AAC/C,aAAO;IACP;AAED,WAAO;EACP;AAED,QAAM4e,cAAc,CAACtR,QAAkBrD,UAAyB;AAC/D,QAAI/L,KAAKuP,MAAM1P,QAAQkM,KAAnB,KAA6B,KAAK4a,eAAe9mB,QAAQkM,KAAvB,KAAiC,GAAG;AACzE,aAAO;IACP;AACD,WAAO;EACP;AAID/L,OAAKinB,aAAa,CAAClb,OAAamb,aAAsB;AACrDV,eAAWza,SAASmb;EACpB;AAGDlnB,OAAKmnB,SAAUrlB,WAAoB;AAE9BA,QAAAA,SAAS0kB,YAAY;AACxB,YAAMU,WAAWV,WAAW1kB;AAC5B0kB,iBAAW1kB,SAAS;AACpB,aAAOolB;IACP;AAIDV,iBAAa,CAAA;AAENxmB,WAAAA,KAAKM,SAASymB,SAAS/e,KAAKhI,MAAK8B,KAAjC;EACP;AAKD9B,OAAKqjB,KAAK,WAAU,qBAAoB,MAAI;AAE3C,QAAIoD,cAAc;AACjB;IACA;AAED,WAAOH,uBAAuBte,KAAKhI,IAA5B;EACP,CAPD;AAUAA,OAAKqjB,KAAK,WAAU,WAAWvhB,WAAe;AAG7C,QAAI,EAAEA,SAAS0kB,aAAa;AAC3B,aAAOH,aAAare,KAAKhI,MAAK8B,KAAvB;IACP;AAEMklB,WAAAA,YAAYllB,KAAD;EAClB,CARD;AAYA9B,OAAKqjB,KAAK,WAAU,gBAAe,CAAEniB,SAAqB+H,cAAwB;AAE7E,QAAA,CAACwd,cAAc;AAClBzmB,WAAKwgB,aAAaE,WAAlB;IACA,WAASgG,eAAe;AACxB,YAAMU,eAAelmB,QAAQ;AACzBkmB,UAAAA,iBAAiBznB,QAAW;AAC/B+mB,sBAAc9W,QAAQ7D,QAASqb,aAAapnB,KAAKM,SAASiK;MAC1D;IACD;AAEDgc,sBAAkBve,KAAMhI,MAAMkB,SAAS+H,SAAvC;AAEAwd,mBAAe;EACf,CAdD;AAoBAzmB,OAAKqjB,KAAK,SAAQ,kBAAiB,MAAI;AAEtC,UAAMvhB,QAAS9B,KAAK8S;AACpB,QAAI1D;AAEJ,QAAI4X,YAAYllB,KAAD,GAAS;AAEvBsN,eAASpP,KAAK6L,OAAO,gBAAe;QAAC/J;MAAD,CAA3B;AACT,UAAIsN,QAAQ;AACXA,eAAOpJ,aAAa,mBAAkB,EAAtC;AACA0gB,wBAAgBtX;MAChB;IAED,WAAUtN,SAAS0kB,cAAe,CAAChV,iBAAiB/O,cAAc,aAA/B,GAA+C;AAClF2M,eAASpP,KAAK6L,OAAO,mBAAkB;QAAC/J;MAAD,CAA9B;IACT;AAED,QAAIsN,QAAQ;AACX5L,iBAAW4L,QAAOpP,KAAKM,SAASgL,WAAtB;AACVkG,uBAAiBjD,OAAQa,MAAzB;IACA;EAED,CAtBD;AA0BApP,OAAKb,GAAG,cAAa,MAAI;AACxBwnB,qBAAiBtjB,OAAOgC,KAAKrF,KAAKkB,OAAjB;AACjBsQ,uBAAmBxR,KAAKwR;AAGxBxR,SAAKM,SAASuL,SAASxI,OAAOC,OAAO,CAAA,GAAI;MACxCmjB,cAAa,MAAM;AAClB,eAAQ;MACR;MACDY,iBAAgB,MAAK;AACpB,eAAQ;MACR;IANuC,GAOvCrnB,KAAKM,SAASuL,MAPO;AAWvB2F,qBAAiB9D,iBAAiB,UAAS,MAAI;AAE1C,UAAA,CAAC1N,KAAKM,SAASsmB,eAAe5e,KAAKhI,IAAlC,GAAyC;AAC7C;MACA;AAGD,UAAI,CAACgnB,YAAYhnB,KAAK8S,SAAN,GAAkB;AACjC;MACA;AAGD,UAAI2T;AAAe;AAGnBA,qBAAe;AACfzmB,WAAKgV,KAAKhN,KAAKhI,MAAKA,KAAK8S,SAAzB;IACA,CAjBD;EAkBA,CAlCD;AAoCA;ACrMD5B,UAAUzQ,OAAO,mBAAmB6mB,eAApC;AACApW,UAAUzQ,OAAO,oBAAoB8mB,gBAArC;AACArW,UAAUzQ,OAAO,gBAAgB+mB,YAAjC;AACAtW,UAAUzQ,OAAO,aAAagnB,SAA9B;AACAvW,UAAUzQ,OAAO,mBAAmBinB,eAApC;AACAxW,UAAUzQ,OAAO,kBAAkBknB,cAAnC;AACAzW,UAAUzQ,OAAO,kBAAkBmnB,cAAnC;AACA1W,UAAUzQ,OAAO,kBAAkBonB,cAAnC;AACA3W,UAAUzQ,OAAO,uBAAuBqnB,mBAAxC;AACA5W,UAAUzQ,OAAO,mBAAmBsnB,eAApC;AACA7W,UAAUzQ,OAAO,oBAAoBunB,gBAArC;AACA9W,UAAUzQ,OAAO,iBAAiBwnB,aAAlC;AACA/W,UAAUzQ,OAAO,wBAAwBynB,oBAAzC;AACAhX,UAAUzQ,OAAO,kBAAkB0nB,cAAnC;",
  "names": ["forEvents", "events", "callback", "split", "forEach", "event", "MicroEvent", "constructor", "_events", "on", "fct", "event_array", "push", "off", "n", "arguments", "length", "undefined", "splice", "indexOf", "trigger", "args", "self", "apply", "MicroPlugin", "Interface", "plugins", "names", "settings", "requested", "loaded", "define", "name", "fn", "initializePlugins", "key", "queue", "Array", "isArray", "plugin", "options", "hasOwnProperty", "shift", "require", "loadPlugin", "Error", "code_points", "unicode_map", "iterate", "get_field", "object", "getDom", "query", "jquery", "HTMLElement", "isHtmlString", "tpl", "document", "createElement", "innerHTML", "trim", "content", "firstChild", "querySelector", "arg", "escapeQuery", "replace", "triggerEvent", "dom_el", "event_name", "createEvent", "initEvent", "dispatchEvent", "applyCSS", "css", "Object", "assign", "style", "addClasses", "elmts", "classes", "norm_classes", "classesArray", "castAsArray", "map", "el", "cls", "classList", "add", "removeClasses", "remove", "_classes", "concat", "filter", "Boolean", "parentMatch", "target", "selector", "wrapper", "contains", "matches", "parentNode", "getTail", "list", "direction", "isEmptyObject", "obj", "keys", "nodeIndex", "amongst", "nodeName", "i", "previousElementSibling", "setAttr", "attrs", "val", "attr", "removeAttribute", "setAttribute", "replaceNode", "existing", "replacement", "replaceChild", "highlight", "element", "regex", "RegExp", "highlightText", "node", "match", "data", "spannode", "className", "middlebit", "splitText", "index", "middleclone", "cloneNode", "appendChild", "highlightChildren", "nodeType", "childNodes", "test", "tagName", "from", "highlightRecursive", "removeHighlight", "elements", "querySelectorAll", "prototype", "call", "parent", "normalize", "KEY_A", "KEY_RETURN", "KEY_ESC", "KEY_LEFT", "KEY_UP", "KEY_RIGHT", "KEY_DOWN", "KEY_BACKSPACE", "KEY_DELETE", "KEY_TAB", "IS_MAC", "navigator", "userAgent", "KEY_SHORTCUT", "optgroups", "delimiter", "splitOn", "persist", "diacritics", "create", "createOnBlur", "createFilter", "openOnFocus", "shouldOpen", "maxOptions", "maxItems", "hideSelected", "duplicates", "addPrecedence", "selectOnTab", "preload", "allowEmptyOption", "loadThrottle", "loadingClass", "dataAttr", "optgroupField", "valueField", "labelField", "disabledField", "optgroupLabelField", "optgroupValueField", "lockOptgroupOrder", "sortField", "searchField", "searchConjunction", "mode", "wrapperClass", "controlClass", "dropdownClass", "dropdownContentClass", "itemClass", "optionClass", "dropdownParent", "controlInput", "copyClassesToDropdown", "placeholder", "hidePlaceholder", "shouldLoad", "render", "hash_key", "value", "get_hash", "escape_html", "str", "loadDebounce", "delay", "timeout", "loading", "Math", "max", "clearTimeout", "setTimeout", "loadedSearches", "debounce_events", "types", "type", "event_args", "getSelection", "input", "start", "selectionStart", "selectionEnd", "preventDefault", "evt", "stop", "stopPropagation", "addEvent", "addEventListener", "isKeyDown", "key_name", "count", "altKey", "ctrlKey", "shiftKey", "metaKey", "getId", "id", "existing_id", "getAttribute", "addSlashes", "append", "getSettings", "settings_user", "defaults", "attr_data", "field_label", "field_value", "field_disabled", "field_optgroup", "field_optgroup_label", "field_optgroup_value", "tag_name", "toLowerCase", "option", "textContent", "settings_element", "items", "init_select", "optionsMap", "group_count", "readData", "dataset", "json", "JSON", "parse", "addOption", "group", "arr", "option_data", "disabled", "$option", "selected", "addGroup", "optgroup", "optgroup_data", "children", "hasAttribute", "child", "init_textbox", "data_raw", "values", "opt", "instance_i", "TomSelect", "input_arg", "user_settings", "control_input", "dropdown", "control", "dropdown_content", "focus_node", "order", "tabIndex", "is_select_tag", "rtl", "inputId", "_destroy", "sifter", "isOpen", "isDisabled", "isRequired", "isInvalid", "isValid", "isLocked", "isFocused", "isInputHidden", "isSetup", "ignoreFocus", "ignoreHover", "hasOptions", "currentResults", "lastValue", "caretPos", "activeOption", "activeItems", "userOptions", "dir", "tomselect", "computedStyle", "window", "getComputedStyle", "getPropertyValue", "required", "Sifter", "setupCallbacks", "setupTemplates", "_render", "inputMode", "setup", "passive_event", "passive", "listboxId", "role", "control_id", "label", "label_click", "focus", "bind", "for", "label_id", "width", "classes_plugins", "join", "multiple", "escape_regex", "load", "e", "target_match", "onOptionHover", "capture", "onOptionSelect", "onItemSelect", "onClick", "onKeyDown", "onKeyPress", "onInput", "onBlur", "onFocus", "onPaste", "doc_mousedown", "composedPath", "blur", "inputState", "win_scroll", "positionDropdown", "removeEventListener", "revertSettings", "insertAdjacentElement", "sync", "refreshState", "updateOriginalInput", "refreshItems", "close", "disable", "enable", "onChange", "setupOptions", "addOptions", "registerOptionGroup", "templates", "escape", "callbacks", "get_settings", "setValue", "lastQuery", "clearActiveItems", "onMouseDown", "pastedText", "inputValue", "splitInput", "piece", "hash", "addItem", "createItem", "character", "String", "fromCharCode", "keyCode", "which", "constants", "selectAll", "open", "next", "getAdjacent", "setActiveOption", "prev", "canSelect", "activeElement", "advanceSelection", "deleteSelection", "refreshOptions", "wasFocused", "showInput", "hasFocus", "deactivate", "setActiveItem", "setCaret", "parentElement", "closeAfterSelect", "item", "canLoad", "loadCallback", "clearActiveOption", "setTextboxValue", "changed", "getValue", "silent", "clear", "addItems", "setMaxItems", "eventName", "begin", "end", "swap", "last", "getLastActive", "setActiveItemClass", "removeActiveItem", "hideInput", "last_active", "idx", "scroll", "scrollToOption", "behavior", "height_menu", "clientHeight", "scrollTop", "height_item", "offsetHeight", "y", "getBoundingClientRect", "top", "scrollBehavior", "controlChildren", "toggle", "offsetWidth", "getScoreFunction", "getSearchOptions", "sort", "field", "fields", "conjunction", "nesting", "search", "result", "calculateScore", "score", "hashed", "triggerDropdown", "j", "k", "html", "has_create_option", "active_group", "groups", "groups_order", "same_query", "results", "active_option", "show_dropdown", "closest", "min", "opt_value", "opt_hash", "option_el", "getOption", "includes", "group_fragment", "createDocumentFragment", "$id", "toString", "a", "b", "grp_a", "grp_b", "a_order", "$order", "b_order", "group_heading", "group_options", "header", "group_html", "tokens", "tok", "add_template", "template", "insertBefore", "canCreate", "active_index", "selectable", "user_created", "dat", "registerOption", "addOptionGroup", "hashed_id", "removeOptionGroup", "clearCache", "clearOptionGroups", "updateOption", "item_new", "index_item", "value_old", "value_new", "data_old", "getItem", "uncacheValue", "option_new", "removeOption", "removeItem", "clearOptions", "boundFilter", "clearFilter", "$div", "all", "x", "last_item", "isPending", "wasFull", "isFull", "insertAtCaret", "caret", "output", "lock", "created", "unlock", "refreshValidityState", "wrap_classList", "validity", "valid", "opts", "empty_option", "AddSelected", "has_selected", "reuse_opt", "visibility", "display", "context", "rect", "scrollY", "left", "scrollX", "selection", "tail", "rm_items", "rm_item", "shouldDelete", "pop", "onDelete", "adjacent", "nextElementSibling", "moveCaret", "new_pos", "destroy", "templateName", "hook", "when", "method", "new_fn", "orig_method", "result_new", "orig_onOptionSelect", "UpdateCheckbox", "checkbox", "HTMLInputElement", "checked", "orig_render_option", "rendered", "prepend", "title", "button", "$", "sortable", "orig_lock", "orig_unlock", "$control", "forcePlaceholderSize", "ui", "helper", "overflow", "each", "headerClass", "titleRowClass", "labelClass", "closeClass", "close_link", "div", "orig_onBlur", "relatedTarget", "preventScroll", "test_input", "cssText", "transfer_styles", "style_name", "resize", "clientWidth", "orig_deleteSelection", "orig_keydown", "previousSibling", "nextSibling", "orig_render_item", "close_button", "text", "orig_canLoad", "orig_clearActiveOption", "orig_loadCallback", "pagination", "loading_more", "load_more_opt", "default_values", "shouldLoadMore", "scroll_percent", "scrollHeight", "firstUrl", "canLoadMore", "setNextUrl", "next_url", "getUrl", "first_option", "no_more_results", "change_listener", "checkbox_options", "clear_button", "drag_drop", "dropdown_header", "caret_position", "dropdown_input", "input_autogrow", "no_backspace_delete", "no_active_items", "optgroup_columns", "remove_button", "restore_on_backspace", "virtual_scroll"]
}
